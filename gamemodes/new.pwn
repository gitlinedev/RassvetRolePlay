@include_a_samp_();
@include_a_samp_()
{
    #emit    stack    0x7FFFFFFF
    #emit    inc.s    cellmax
    static const ___[][] = {"protected from", "deamx"};
    #emit    retn
    #emit    load.s.pri    ___
    #emit    proc
    #emit    proc
    #emit    fill    cellmax
    #emit    proc
    #emit    stack    1
    #emit    stor.alt    ___
    #emit    strb.i    2
    #emit    switch    4
    #emit    retn
L1:
	#emit    jump    L1
	#emit    zero    cellmin
}
new 
	global_str[4097],
	SQL_STRING[4097],
	mysql_string[1048*2];

#include <a_samp>

#undef MAX_PLAYERS
#define MAX_PLAYERS 100

#include Pawn.CMD
#include streamer
#include sampvoice
#include a_mysql
#include sscanf2
#include crashdetect
#include mxdate
#include fmt
#include CRP
#include KeyListener
#include foreach
#include cef
#include a_http
#include nex-ac

#define SCM SendClientMessage
#define SCMf SendClientMessagef
#define f format

#define mysql_tqueryf(%0,%1,%2)         	SQL_STRING[0] = EOS, mysql_format(%0, SQL_STRING, sizeof(SQL_STRING), %1, %2) && mysql_tquery(%0, SQL_STRING) && printf(%1,%2)
#define mysql_queryf(%0,%1,%2,%3) 	    	SQL_STRING[0] = EOS, mysql_format(mysql, SQL_STRING, sizeof(SQL_STRING), %1, %3) && mysql_query(%0, SQL_STRING, %2) && printf(%1,%2)
#define SendAdminsMessagef(%0,%1,%2) 		global_str[0] = EOS, format(global_str, 256, %1, %2) && SendAdminsMessage(%0, global_str)
#define SendFractionMessagef(%0,%1,%2,%3) 	global_str[0] = EOS, format(global_str, 256, %2, %3) && SendFractionMessage(%0, %1, global_str)
#define SendDepMessagef(%0,%1,%2) 			global_str[0] = EOS, format(global_str, 256, %1, %2) && SendDepMessage(%0, global_str)
#define getName(%0)  						PI[%0][pName]


main() {
	print("\n____________________________\n");
	print("Rassvet RolePlay");
	print("Sairus Games © 2024'");
	print("\n____________________________");
	cef_subscribe("callback_dialog_response", "CallbackDialogResponse");
}

new SV_GSTREAM:gstream = SV_NULL;
new SV_LSTREAM:lstream[MAX_PLAYERS] = { SV_NULL, ... };

//======================[ клиент - настройки ]======================//
new console_Debbug = 1;
new capturetime = 1;
new XDON = 2;
//======================[ Настройки сервера ]======================//
#define VK                 "rassvet_fun"
#define FREE               "rassvet_fun"
#define FORUM              "forum-rassvet-rp.ru"
#define SITE               "rassvet-rp.ru"
#define NAMESERVER 		   "Rassvet RP"
#define NAMEVIP 		   "Рассвет Плюс"
#define ENERGO 		       "RassvetEnegrgy"
#define GAMEMODENAME 	   "SariusDev"
#define VIP_TAG			   "R+"
//======================[ Конфигурация ТС ]======================//
#define GARAGE_INT_MERIYA 1
#define GARAGE_INT_MVD 2
#define GARAGE_INT_CRB 3
#define GARAGE_INT_VCH 4
#define GARAGE_INT_GOPOTA 5
#define GARAGE_INT_SKINHEAD 6
#define GARAGE_INT_OFFCLUB 7
//======================[ Максы ]======================//
#define MAX_BANS 				5000
#define MAX_G					5000
#define MAX_VIP					8000
#define MAX_KV   				600
#define MAX_HOUSES      		150
#define MAX_BUSINESS            150
#define MAX_GROUP	            500
#define MAX_OWNABLECARS 		2000
//======================[ Цвета ]======================//
#define COLOR_BLUE              0x33AAFFFF
#define COLOR_LIGHTBLUE 		0x6495EDFF
#define COLOR_WHITE 		    0xFFFFFFFF
#define COLOR_GREY		 		0xAFAFAFAA
#define COLOR_GREENNEW			0x00aa33AA
#define COLOR_YELLOW			0xFFFF00FF
#define COLOR_LIGHTYELLOW		0xFFFF99FF
#define COLOR_TOMATO      		0xFF6347FF
#define COLOR_BLACK             0x5e5e5eFF
#define COLOR_GREY              0xAFAFAFAA
#define COLOR_GREEN 			0x42B02CFF
#define COLOR_LIGHTGREEN 		0x9ACD32FF	
#define COLOR_BLACKBLUE			0x3366ccFF
#define COLOR_HINT 				0x6699ffFF
#define COLOR_LIGHTORANGE 		0xff6633FF
#define COLOR_LIGHTGREY 		0xCCCCCCFF
#define COLOR_LIGHTBLUE_2 		0x66CCFFFF
#define COLOR_CORAL 			0x468a93FF
#define COLOR_MALINOVKA         0xee3366FF
#define COLOR_BLACKRED 			0xcc3366FF
#define COLOR_ADMINCHAT         0x8fbedb00
#define COLOR_JOBYELLOW 		0xffcd00FF
//======================[ Система Тайзера]======================//
#define TAZE_WEAPON 23 3 	// ID оружия на тазер, 3 - дубинка
#define TAZE_TIMER 15 		// через сколько разморозит
#define TAZE_LOSEHP 1 		// 1 - не терять хп при ударе тазером, 0 - терять
//======================[ Новыя хуйня ]======================//
FixSVarString(str[], size = sizeof(str)) for (new i = 0; ((str[i] &= 0xFF) != '\0') && (++i != size);) {}
//======================[ Макросы ]======================//
#define NONE_3D_TEXT 						(Text3D:-1)
#define PRESSED(%0) 						(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) 						(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define callback:%0(%1)						forward %0(%1) ; public %0(%1)
//======================[ Система походки ]======================//
#define WALK_DEFAULT    		0
#define WALK_NORMAL     		1
#define WALK_PED        		2
#define WALK_GANGSTA    		3
#define WALK_GANGSTA2   		4
#define WALK_OLD        		5
#define WALK_FAT_OLD    		6
#define WALK_FAT        		7
#define WALK_LADY       		8
#define WALK_LADY2      		9
#define WALK_WHORE      		10
#define WALK_WHORE2     		11
#define WALK_DRUNK      		12
#define WALK_BLIND      		13
//======================[ Other ]======================//
#define KEY_AIM 				(128)
#define MAX_FRACTIONS         	8
#define INVALID_KV_ID 			-1
#define INVALID_HOUSE_ID 		-1
#define INVALID_BUSINESS_ID 	-1
#define INVALID_JB_ID           -1
#define INVALID_AB_ID           -1
#define cena_24                 5
#define cena_azs                3
#define cena_clothes            2
#define cena_gun                6
#define cena_eat                2
#define GATES_CLOSED  			1
#define GATES_OPEN      		2
#define MOVE_SPEED              35.0
#define ACCEL_RATE              0.03
#define CAMERA_MODE_NONE    	0
#define CAMERA_MODE_FLY     	1
#define MOVE_FORWARD    		1
#define MOVE_BACK       		2
#define MOVE_LEFT       		3
#define MOVE_RIGHT      		4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8
#define MAX_GANGZONE 			104
#define AC_MAX_CODES 					53
#define AC_MAX_CODE_LENGTH 				(3 + 1)
#define AC_MAX_CODE_NAME_LENGTH 		(33 + 1)
#define AC_CODE_TRIGGER_TYPE_DISABLED 	0
#define AC_CODE_TRIGGER_TYPE_WARNING 	1
#define AC_CODE_TRIGGER_TYPE_KICK 		2
#define AC_MAX_TRIGGER_TYPES			3
#define AC_GLOBAL_TRIGGER_TYPE_PLAYER 	0
#define CEF_INTERFACE_BROWSER_ID 		1
//===============================[ Iterator ]=======================================//
new Iterator: Admin<MAX_PLAYERS>;
//===============================[ Loaded ]=======================================//
new LoadedHouse;
new LoadedBiz;
new LoadedKV;
new LoadedOwnable;
//===============================[ OTHER ]=======================================//
new ShowCar[MAX_PLAYERS][15];
new AccessCar[MAX_PLAYERS][15];
//
new GunSystem = 0; // 0 не нужно качать скилы 1 нужно
new	bool:IsPlayerLogged[MAX_PLAYERS char];

new const monthNames[12][9] = {
    "январь", "февраль", "март", "апрель",
    "май", "июнь", "июль", "август",
    "сентябрь", "октябрь", "ноябрь", "декабрь"
};
static const stock AdminName[9][6] = {
	"Игрок",
 	"NGM",
 	"JRGM",
 	"GM",
 	"GM+",
 	"LGM",
 	"SGM",
 	"SGM+",
 	"DEV"
};
static const stock Fraction_Name[MAX_FRACTIONS][32] = {
	"Гражданский",
	"Правительство",
 	"Войсковая часть",
 	"Полиция",
 	"БЦРБ",
 	"Скинхеды",
 	"Гопота",
 	"Кавказцы"
};
enum E_WEATHER_DATA {
	weather_name[25],
	weather_id,
	weather_degrees
};
new Float:Bankomats[4][3] = {
	{1797.31, 2503.82, 15.48},
	{2114.6213, 1802.0273, 12.2200},
	{2382.6541, 1955.5677, 15.8600},
	{2328.0881, -1805.9023, 22.4540}
};
new weather[][E_WEATHER_DATA] = {
	{"ясная погода", 18, 31},
	{"облачная погода", 18, 16},
	{"гром", 18, 17},
	{"сильный ветер", 18, 21},
	{"ясная погода", 18, 36}
};
enum SL {
	member,
	rang,
	f_name[20]
}
static pPickupID[MAX_PLAYERS];
new setleader_config[][SL] = {

	{1, 10,"Правительство"},
	{2, 10,"Войсковая часть"},
	{3, 10,"Полиция"},
	{4, 10,"БЦРБ"},
	{5, 10,"Скинхеды"},
	{6, 10,"Гопота"},
	{7, 10,"Кавказцы"}
};
enum StopWar {
	frac_id,
	org_name[20]
}
new StopWar_cfg[][StopWar] = {

	{5,"Скинхеды"},
	{6,"Гопота"},
	{7,"Кавказцы"}
};
static const stock VehicleNames[][] = {
	"BMW X5","Audi A6 C8","Mersedec Akula","Lexus GX460","BMW M5 F90 2021","Mercedes-Benz E63","Камаз-ММЗ","Камаз Мусорный","Audi A6 2019","Mercedes GL63","Audi R8","Lada Kalina",
	"Lexus GSF","Nissan Titan 2017","BMW M5","Porsche 911","Ambulance","Скорая помощь","Volkswagen Multivan","ВАЗ 2107","Nissan GTR","Washington","Infiniti JX 35 2013","Mr Whoopee","BF Injection",
	"Hunter","Audi A6","Газель","Инкасатор","ГАЗ-М22","Predator","ЛиАЗ-677М","Rhino","ЗИЛ 131","Hotknife","Trailer","Toyota MarkII","Ikarus 260","ГАЗ-2402",
	"ИЖ-412","Rumpo","RC Bandit","Romero","Packer","Monster","ЗИЗ-45","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","ГАЗ-3309","Caddy","Audi A6","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"BMW 535i","Mercedes GLE","Sanchez","Sparrow","Patriot","Audi A7","Coastguard","Dinghy","ГАЗ-21И","Toyota Land Cruiser","Rustler","ZR3 50","ИЖ-27151","ВАЗ-2114",
	"Toyota Supra","Велосипед","Burrito","ПАЗ-3205","Marquis","ГАЗ 2402","Dozer","Maverick","News Chopper","Chevrolet Niva","FBI Rancher","Virgo","ВАЗ 2109",
	"Jetmax","Hotring","Sandking","ЗАЗ-1102","Police Maverick","Boxville","ГАЗ-53","УАЗ-69","RC Goblin","Hotring A","Mersedes Benz E200",
	"Bloodring Banger","Rancher","Super GT","ГАЗ-2401"," УАЗ-452","Велик","Горный велик","Beagle","Cropdust","Stunt","КАМАЗ-54115","КАЗ-608В",
	"ВАЗ-21099","РАФ-2203"," ЕРАЗ-672","Shamal","Hydra","ИЖ Планета 5","NRG-500","Урал","Cement Truck","Эвакуатор","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","М5 F90","Bugatti Chiron","ВАЗ 2424",
	"Москвич-434","Firetruck","Москвич-400","Москвич-2125","Москвич-2140","Cargobob","ЗАЗ-968А","Sunrise","ГАЗ 31105","Utility","Nevada","УАЗ-3303","ЗАЗ-968М","Monster A",
	"Monster B","Lamborghini Huracan Devo","Acura NSX GT3","Orange Porshe","ИЖ Москвич-427","Elegy","Raindance","RC Tiger","ВАЗ 2108","ВАЗ 2104","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","ГАЗ-М20","Москвич-408","AT-400","ЗИЛ-157","Mersedes G65","BMW X5M","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Восход 3М","Euros","ЛиАЗ-677","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","ГАЗ-2401","ВАЗ 21099",
	"ВАЗ 2114","УАЗ 469","ИЖ-2717","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","ЛАЗ-699Р","Farm Plow","U Trailer"
};
enum gangzone {
	gzid,
	Float:gzminx,
	Float:gzminy,
	Float:gzmaxx,
	Float:gzmaxy,
	gzopg,
	standart_opg,
}
new Float:casino_pos[][3] = {

	{2107.9355,-2428.8367,-42.4710},
	{2108.8875,-2428.8333,-42.4710},
	{2109.8511,-2428.8306,-42.4710},
	{2110.7646,-2428.8274,-42.4710},
	{2111.6980,-2428.8223,-42.4710},
	{2112.6499,-2428.8240,-42.4710}
};
new const weapon_names[][] = {
/*  0 */{"Кулак"},                      /*  1 */{"Кастет"},                     /*  2 */{"Клюшка для гольфа"},
/*  3 */{"Полицейская дубинка"},        /*  4 */{"Нож"},                        /*  5 */{"Бейсбольная бита"},
/*  6 */{"Лопата"},                     /*  7 */{"Кий"},                        /*  8 */{"Катана"},
/*  9 */{"Бензопила"},                  /* 10 */{"Большой дилдо"},              /* 11 */{"Малый дилдо"},
/* 12 */{"Большой вибратор"},           /* 13 */{"Малый вибратор"},             /* 14 */{"Цветы"},
/* 15 */{"Трость"},                     /* 16 */{"Граната"},                    /* 17 */{"Слезоточивый газ"},
/* 18 */{"Коктейль Молотова"},          /* 19 */{""},							/* 20 */{""},										/* 21 */{""}, 				/* 22 */{"ТТ"},
/* 23 */{"Тайзер"},            			/* 24 */{"Desert Eagle"},				/* 25 */{"Дробовик"},
/* 26 */{"Обрез"},                      /* 27 */{"Автоматический дробовик"},    /* 28 */{"Узи"},
/* 29 */{"MP5"},                        /* 30 */{"АК-47"},                      /* 31 */{"M4"},
/* 32 */{"TEC-9"},                      /* 33 */{"Винтовка"},                   /* 34 */{"Снайперская винтовка"},
/* 35 */{"Гранатомёт"},                 /* 36 */{"Самонаводящийся гранатомёт"}, /* 37 */{"Огнемёт"},
/* 38 */{"Пулемёт"},                    /* 39 */{"Взрывпакет"},                 /* 40 */{"Детонатор"},
/* 41 */{"Баллончик с краской"},        /* 42 */{"Огнетушитель"},               /* 43 */{"Фотоаппарат"},
/* 44 */{"Прибор ночного видения"},     /* 45 */{"Тепловизор"},                 /* 46 */{"Парашют"}
};
static const stock ColorTeam[MAX_FRACTIONS][7] = {
	"FFFFFF",
	"ffeb9c",
 	"009900",
 	"2222FF",
 	"ff99cc",
 	"663399",
 	"66CCFF",
 	"339933"
};
new SkinMale[][] = {
	{134, 999},
	{137, 999},
	{230, 999},
	{239, 999},
	{134, 2000},
	{212, 2000},
	{200, 5000},
	{160, 2000},
	{49, 7500},
	{40, 7500},
	{241, 9999},
	{137, 30000},
	{273, 30000},
	{264, 39000},
	{254, 40000},
	{249, 45000},
	{23,  55000},
	{181, 75000},
	{42, 100000},
	{149, 129000},
	{223, 149000},
	{43, 149000},
	{137, 210000},
	{294, 340000},
	{174, 400000},
	{185, 450000},
	{208, 499999}
};
new SkinFeMale[][] = {
	{129, 999},
	{130, 999},
	{77, 999},
	{152, 5000},
	{157, 5000},
	{56, 5000},
	{145, 7500},
	{151, 7500},
	{40, 10000},
	{41, 10000},
	{55, 20000},
	{87, 30000},
	{93, 35000},
	{139, 50000},
	{141, 75000},
	{85, 90000},
	{12, 100000},
	{201, 149000},
	{246, 179000}
};
enum carColors {
	colorCar,
	hexColor[7],
}
new colorVeh[53][carColors] = {
	{0,"000000"},
	{1,"F5F5F5"},
	{2,"2A77A1"},
	{3,"840410"},
	{4,"263739"},
	{5,"86446E"},
	{6,"D78E10"},
	{7,"4C75B7"},
	{8,"BDBEC6"},
	{9,"5E7072"},
	{10,"46597A"},
	{16,"335F3F"},
	{17,"730E1A"},
	{18,"7B0A2A"},
	{19,"9F9D94"},
	{20,"3B4E78"},
	{21,"732E3E"},
	{22,"691E3B"},
	{23,"96918C"},
	{24,"515459"},
	{32,"8494ab"},
	{40,"473532"},
	{44,"193826"},
	{79,"0e316d"},
	{87,"395a83"},
    {100,"406C8F"},
	{101,"1F253B"},
	{102,"AB9276"},
	{103,"134573"},
	{104,"96816C"},
	{105,"64686A"},
	{106,"105082"},
	{107,"A19983"},
	{108,"385694"},
	{109,"525661"},
	{110,"7F6956"},
	{111,"8C929A"},
	{112,"596E87"},
	{113,"473532"},
	{114,"44624F"},
	{115,"730A27"},
	{116,"223457"},
	{117,"640D1B"},
	{118,"A3ADC6"},
	{119,"695853"},
	{120,"9B8B80"},
	{121,"620B1C"},
	{122,"5B5D5E"},
	{123,"624428"},
	{124,"731827"},
	{125,"1B376D"},
	{126,"EC6AAE"},
	{161,"993e4d"}
};
enum color_info {
	ciCar,
	ciTD,
}
new color_veh[48][color_info] = {

	{1,0xF5F5F5FF},
	{2,0x2A77A1FF},
	{3,0x840410FF},
	{4,0x263739FF},
	{5,0x86446EFF},
	{6,0xD78E10FF},
	{7,0x4C75B7FF},
	{8,0xBDBEC6FF},
	{9,0x5E7072FF},
	{10,0x46597AFF},
    {0,0x000000FF},
    {100,0x406C8FFF},
	{101,0x1F253BFF},
	{102,0xAB9276FF},
	{103,0x134573FF},
	{104,0x96816CFF},
	{105,0x64686AFF},
	{106,0x105082FF},
	{107,0xA19983FF},
	{108,0x385694FF},
	{109,0x525661FF},
	{110,0x7F6956FF},
	{111,0x8C929AFF},
	{112,0x596E87FF},
	{113,0x473532FF},
	{114,0x44624FFF},
	{115,0x730A27FF},
	{116,0x223457FF},
	{117,0x640D1BFF},
	{118,0xA3ADC6FF},
	{119,0x695853FF},
	{120,0x9B8B80FF},
	{121,0x620B1CFF},
	{122,0x5B5D5EFF},
	{123,0x624428FF},
	{124,0x731827FF},
	{125,0x1B376DFF},
	{126,0xEC6AAEFF},
	{109,0x525661FF},
	{16,0x335F3FFF},
	{17,0x730E1AFF},
	{18,0x7B0A2AFF},
	{19,0x9F9D94FF},
	{20,0x3B4E78FF},
	{21,0x732E3EFF},
	{22,0x691E3BFF},
	{23,0x96918CFF},
	{24,0x515459FF}

};
new PLAYER_COLOR_TEAM[10] = {
	0xFFFFFFFF, //
	0xffeb9cFF, // Правительство
	0x009900FF, // армия
	0x2222FFFF, // полиция
	0xff99ccFF, // больница
	0x663399BB, // скинхеды
	0x66CCFFFF, // гопота
	0x339933AA, // кавказ
	0x339999FF, // фсб
	0xd93434FF // сми
};
enum CC {
	COLOR[10]
}
new PLAYER_COLOR_CHAT[10][CC] = {
	"{FFFFFF}",
	"{ffeb9c}", // Правительство
	"{009900}", // армия
	"{2222FF}", // полиция
	"{FF99CC}", // больница
	"{663399}", // скинхеды
	"{66CCFF}", // гопота
	"{339933}", // кавказ
	"{339999}", // фсб
	"{d93434}" // сми
};
enum Dealership_Info {
	asModel,
	asClass[16],
	asDonate,
	asSpeed
};
new DealershipCars[41][Dealership_Info] = {
	{541,"Высокий",900,190},
	{503,"Высокий",685,119},
	{402,"Высокий",675,119},
	{405,"Высокий",670,102},
	{410,"Высокий",529,103},
	{415,"Высокий",570,107},
	{400,"Высокий",500,93},
	{579,"Высокий",915,149},
	{516,"Высокий",850,132},
	{522,"Высокий",430,114},
	{534,"Высокий",470,94},
	{540,"Высокий",570,133},
	{559,"Высокий",520,145},
	{560,"Высокий",1050,162},
	{458,"Высокий",705,122},
	{487,"Высокий",1380,160},
	{401,"Высокий",649,300},
	{403,"Средний",250,56},
	{479,"Средний",420,79},
	{411,"Средний",200,80},
	{413,"Средний",199,61},
	{418,"Средний",150,83},
	{419,"Средний",450,83},
	{422,"Средний",350,69},
	{426,"Средний",290,79},
	{514,"Средний",130,57},
	{523,"Средний",155,105},
	{529,"Средний",115,83},
	{551,"Средний",120,92},
	{555,"Средний",100,81},
	{489,"Низкий",30,35},
	{436,"Низкий",35,65},
	{445,"Низкий",50,69},
	{509,"Низкий",5,60},
	{510,"Низкий",10,60},
	{521,"Низкий",55,101},
	{528,"Низкий",43,98},
	{547,"Низкий",36,92},
	{461,"Низкий",55,98},
	{463,"Низкий",60,105},
	{468,"Низкий",60,103}
};
enum hInfo {
    data_ID,
    data_OWNER[MAX_PLAYER_NAME],
	data_DAY,
	data_CLASS,
	data_OWNED,
	data_PRICE,
	Float:data_CARX,
	Float:data_CARY,
	Float:data_CARZ,
	Float:data_CARANGLE,
	Float:data_ENTERX,
	Float:data_ENTERY,
	Float:data_ENTERZ,
	Float:data_EXITX,
	Float:data_EXITY,
	Float:data_EXITZ,
	data_INT,
	data_LOCK,
	data_PICKUPENTER,
	data_MAPICON,
};
enum E_TELEPORT_STRUCT
{
	T_NAME[65],
	Float: T_PICKUP_POS_X,
	Float: T_PICKUP_POS_Y,
	Float: T_PICKUP_POS_Z,
	T_PICKUP_VIRTUAL_WORLD,
	Float: T_POS_X,
	Float: T_POS_Y,
	Float: T_POS_Z,
	Float: T_ANGLE,
	T_INTERIOR,
	T_VIRTUAL_WORLD,
};
enum frInfo {
	frName[24]
}
enum aname {
	aName[24]
}
new nname[][aname] = {

	{"Fedor_Novosadov"},
    {"Oleg_Duskin"},
    {"Vasily_Evanov"},
    {"Vitaly_Federov"},
    {"Pavel_Karpin"},
    {"Vasily_Rudnitskin"},
    {"Iosif_Falin"},
    {"Leonid_Bunin"},
    {"Dmitry_Bogdanov"},
    {"Spartak_Topolskin"},
    {"Boris_Gurkin"},
	{"Daniil_Rusakov"},
	{"Kirill_Markov"},
	{"Nikita_Prokopov"},
	{"Leonid_Litvin"},
	{"Gavriil_Slutzkov"},
	{"Timur_Zaleskov"},
	{"Pyotr_Sokolkin"},
	{"Ivan_Popovichev"},
	{"Roman_Urbanov"},
	{"Valentin_Doroshin"},
	{"Timur_Novosadov"},
	{"Matvei_Dolin"},
	{"Veniamin_Burdin"},
	{"Rostislav_Orlov"},
	{"Illarion_Rodin"},
	{"Pyotr_Bogdanov"},
	{"Boris_Romanov"},
	{"Ignat_Krupskin"},
	{"Rostislav_Orlov"},
	{"Illarion_Rodin"},
	{"Pyotr_Bogdanov"},
	{"Boris_Romanov"},
	{"Ignat_Krupskin"},
	{"Artur_Primackov"},
	{"Anatoly_Urbanov"},
	{"Albert_Wolskov"},
	{"Alexander_Markowkin"},
	{"Spartak_Kravin"},
	{"Igor_Polskov"},
	{"Timur_Topolskin"},
	{"Timur_Topolskin"},
	{"Afanasy_Kristov"},
	{"German_Petrovichev"},
	{"David_Elin"},
	{"Boris_Tunick"},
	{"Artur_Chaplin"},
	{"Vasily_Sokolkin"},
	{"Valentin_Dubov"},
	{"Spartak_Shubin"},
	{"Abram_Lazarov"},
	{"Robert_Sokolin"},
	{"Robert_Markow"},
	{"Stepan_Darin"},
	{"Viktor_Sadowin"},
	{"Gerasim_Olshanin"},
	{"Pavel_Burdin"},
	{"Albert_Russak"},
	{"Mark_Lukin"},
	{"Igor_Below"},
	{"Yegor_Shubin"},
	{"Marat_Petrow"},
	{"Maxim_Romanowskin"},
	{"Yan_Levin"},
	{"Peter_Levin"},
	{"Marat_Dubstov"}
};
new rang_gov[10][frInfo] = {
    {"Стажёр"},
    {"Водитель"},
    {"Охраник"},
    {"Секретарь"},
    {"Адвокат"},
    {"Налоговый инспектор"},
    {"Помощник Депутата"},
    {"Депутат"},
    {"Вице-Губернатор"},
    {"Губернатор"}
};
new rang_army[10][frInfo] = {
    {"Рядовой"},
    {"Ефрейтор"},
    {"Сержант"},
    {"Прапорщик"},
    {"Мл.Лейтенант"},
    {"Лейтенант"},
    {"Капитан"},
    {"Майор"},
    {"Подполковник"},
    {"Полковник"}
};
new rang_police[10][frInfo] = {
    {"Рядовой"},
    {"Сержант"},
    {"Старшина"},
    {"Прапорщик"},
    {"Мл. Лейтенант"},
    {"Лейтенант"},
    {"Капитан"},
    {"Майор"},
    {"Подполковник"},
    {"Полковник"}
};
new rang_hospital[10][frInfo] = {
    {"Травматолог"},
    {"Отоларинголог"},
    {"Психолог"},
    {"Нарколог"},
    {"Сексолог"},
    {"Ортопед"},
    {"Хирург"},
    {"Онколог"},
    {"Зам.Глав.Врача"},
    {"Глав.Врач"}
};
new rang_skinhead[10][frInfo] = {
    {"Чмо"},
    {"Пес"},
    {"Торпеда"},
    {"Косой"},
    {"Гвоздь"},
    {"Монгол"},
    {"Доцент"},
    {"Дрег"},
    {"Князь"},
    {"Отец"}
};
new rang_gopota[10][frInfo] = {
    {"Урод"},
    {"Недоделок"},
    {"Хорь"},
    {"Костыль"},
    {"Колька"},
    {"Матёрый"},
    {"Весёлый"},
    {"Рейнджер"},
    {"Директор"},
    {"Отец"}
};
new rang_kavkaz[10][frInfo] = {
    {"Шкура"},
    {"Лычкобой"},
    {"Шнырь"},
    {"Дюбель"},
    {"Тугрик"},
    {"Цыган"},
    {"Интелегент"},
    {"Скал"},
    {"Король"},
    {"Отец"}
};
//================================ [ Переменные ] ======================================//
new Gate;
new GateMove = 0;
new GatePravo;
new GatePravoMove = 0;
new VertletVh[MAX_PLAYERS];
new targplayer[MAX_PLAYERS];
new VertletPolice[MAX_PLAYERS];
new VertletPravo[MAX_PLAYERS];

new TextReset[MAX_PLAYERS];
new NPC_ALL[30],
	NPC_DED,
	NPC_VCH,
/*	send_proposition[MAX_PLAYERS] = {-1, ...}, // Отправленое предложения
	incoming_proposition[MAX_PLAYERS] = {-1, ...}, // Входящее предложения
	incoming_proposition_type[MAX_PLAYERS] = {-1, ...}, // Тип входящего предложения
	incoming_proposition_value[MAX_PLAYERS][2], // Значение входящего предложения*/
	pTimerMessage[MAX_PLAYERS],
	pCurrectMessage[MAX_PLAYERS],
	pTimerMessageBomb[MAX_PLAYERS],
	pCurrectMessageBomb[MAX_PLAYERS],
	FollowBy[MAX_PLAYERS],
	TimerForPlayer[MAX_PLAYERS],
	pDialogTimer[MAX_PLAYERS],
	pDialogCurrectTime[MAX_PLAYERS],
	WeatherServer,
	//capturezonespawn,
	bool:animan[MAX_PLAYERS char],
	bool:pCBugging[MAX_PLAYERS],
	ptmCBugFreezeOver[MAX_PLAYERS],
	ptsLastFiredWeapon[MAX_PLAYERS],
	dalnoboy_trayler[MAX_PLAYERS],
	dalnoboy_car[MAX_PLAYERS],
	gz_info[MAX_GANGZONE][gangzone],
	bool:payday[MAX_PLAYERS],
	Text3D:vehicletext,
	vehicle_static[99],
	WarZone,
	SkinPost,
	SkinPostTimer,
	GopotaPost,
	GopotaPostTimer,
	KavkazPost,
	KavkazPostTimer,
    ArmyVorota,
	ArmyVorota1,
	ArmyVorotaTimer,
	BolkaVorotaTimer,
	PravoVorotaTimer,
	PoliceVorota1,
	PoliceVorotaTimer,
	ArmyStorageDoorTimer,
	dalnaboy_check_pricep[MAX_PLAYERS],
	metall_buy,
	drugs_buy,
	totalgz,
	Dalnoboy_pickup,
	vhodtirkavkaz,
	vihodtirkavkaz,
	vhodtirgopota,
	vihodtirgopota,
	vhodtirskinhed,
	vihodtirskinhed,
	vhodtirvch,
	vihodtirvch,
	vhodtirpravo,
	vihodtirpravo,
	opgintvhod_offklub,
	opgintvihod_offklub,
	opgintvhod_gopota,
	opgintvihod_gopota,
	opgintvhod_skinhead,
	opgintvihod_skinhead,
	VhodArmy1,
	VhodArmy2,
	MagazNaVh,
	VihodMagazNaVh,
	MeriyaGarageVhod,
	MeriyaGarageVihod,
	MVDGarageVhod,
	MVDGarageVihod,
	CRBGarageVhod,
	CRBGarageVihod,
	VchGarageVhod,
	VchGarageVihod,
	GopotaGarageVhod,
	GopotaGarageVihod,
	SkinheadGarageVhod,
	SkinheadGarageVihod,
	OffClubGarageVhod,
	OffClubGarageVihod,
	VhodArmyKazarmy,
	VihodArmyKazarmy,
	VhodArmyStolovaya,
	VihodArmyStolovaya,
	ArmyStolovaya,
	EatPolice,
	EatPolice1,
	VihodVoenkomat,
	SpeedometerUpdate[MAX_PLAYERS],
	VhodMeriya,
	VihodMeriya,
	VhodPravoKrisha,
	VihodPravoKrisha,
	VhodLiftMeriya,
	VihodLiftMeriya,
	VhodKaznaPickup,
	VihodKaznaPickup,
	bombacitve,
	bombplayer[MAX_PLAYERS],
	Kazna_GiveMoney,
	vxoddchmvd0,
    vxoddchmvd1,
	VhodSportzalPolice,
    VihodSportzalPolice,
   	CRBinfo,
	VCHinfo1,
	VCHinfo,
	Pravoinfo,
	Pravoinfo1,
	MVDinfo,
	VhodUchastokMVD0,
	VhodUchastokMVD1,
	MVD_givegun_pickup,
	Pravo_givegun_pickup,
	ArmyShop,
	vch_givegun_pickup,
	palata_vhod,
	palata_vihod,
	shahtavhod,
	shahtavihod,
	ordinatorskaya_vhod,
    ordinatorskaya_vihod,
	ac_gun[MAX_PLAYERS][13],
	PlayerText:GZ_p[MAX_PLAYERS],
	Text:AutoSalon_Stats[3],
	Text:AutoSalon_Button[3],
	Text:AutoSalon_ButtonColor[2],
	Text:AutoSalon_Color[48],
	casino_stavka[MAX_PLAYERS],
	casino_update[MAX_PLAYERS],
	casino_timer[MAX_PLAYERS],
	casino_point[MAX_PLAYERS][4],
	bool:gomp_status,
	bool:mptk,
	Float:gomp_pos[3],
	help_spawn,
	engine,
	lights_text,
	alarm,
	doors_text,
	bonnet,
	boot,
	objective,
	Menu:SelectSkin,
	mysql,
	global_minute,
	restartserver,
	BusinessUpdate,
	PickupAutoSchool,
	Text:casino_fon[2],
	Text:casino_bet,
	PlayerText:casino_card[MAX_PLAYERS][4],
	PlayerText:casino_money[MAX_PLAYERS][2],
	bool:shield[MAX_PLAYERS],
	Float:oldposX[MAX_PLAYERS],Float:oldposY[MAX_PLAYERS],Float:oldposZ[MAX_PLAYERS],
	PlayerText:buy_clothes_m[MAX_PLAYERS],
	Text:buy_clothes[6],
    Text:GZ[1],
	police_barrier[2],
	police_barrier_status[2],
	BCRDEnter_1,
	BCRDExit,
	BCRDExit1,
	CRBPickCard,
	kazino_vhod,
	kazino_vihod,
	PAR_vhod,
	AutoSchool_Enter,
	AutoSchool_Exit,
	AutoSchool_Info,
	AutoSchool_Test,
	vhodbank,
	vihodbank,
	army_wh[MAX_PLAYERS],
	m_gopota,
	m_skinhead,
	m_kavkaz,
	rostov_wh[4],
	gopota_wh[4],
	kavkaz_wh[4],
	smi_money,
	skinhead_sklad,
	Text3D:skinhead_sklad_text,
	gopota_sklad,
	HOUSE_DATA[MAX_HOUSES][hInfo],
	TotalHouses,
	TotalBusiness,
	TotalGroup,
	Text3D:gopota_sklad_text,
	kavkaz_sklad,
	Text3D:kavkaz_sklad_text,
	army_sklad,
	gov_car[10],
	army_car[10],
	police_car[10],
	hospital_car[10],
	skinhead_car[10],
	gopota_car[10],
	rasform[MAX_PLAYERS],
	kavkaz_car[10],
	pick_bank[3],
	CheckCarHP,
	CHANGE_NAME[MAX_PLAYERS],
	ArmyStorageZone,
	Text3D:army_sklad_text,
	VchSkladGate,
	VchSkladGateTimer;
//======================[ Группы ]======================//
enum GROUP_DATA
{
	g_ID,
	g_NAME[24],
	g_FRACTION,
	g_SKIN,
	g_SKING,
	g_STANDART
};
new group[MAX_GROUP][GROUP_DATA];
//======================[ Игроки ]======================//
enum P_DATA
{
	pID,
	data_UID,
	data_GID,
	pAdminReports,
	pRentMoto,
	pAdminEvents,
	pAdminWarn,	
	pRankUPTime,
	pAdminNumber,
	pStartJob,
	pCarGift,
	pRequestValue,
	pRequestValueTwo,
	pRequestType,
	pRequestIDFor,
	pRequestIDFrom,

	pName[MAX_PLAYER_NAME+1],
	pRegIP[32+1],
	pLoginIP[32+1],
	pPassword[32+1],
	pEmail[50+1],
	pGroupName[25],
	data_TAG[50+1],
	pReferal[MAX_PLAYER_NAME+1],
	pLogDateDat,
	pLogDateMonth,
	pLogDateYear,
 	pSex,
	pSkin,
    pMoney,
	pAdmin,
	pVKNotif,
	data_PRIZETIME,
	data_PRIZEGIVE,
	data_SendName[MAX_PLAYER_NAME],
	pLevel,
	pMember,
	pTester,
	data_BL,
	pLeader,
	pRang,
	pRang9,
	pOrgSkin,
	pTakeAcs,
	data_TRANSFER,
	data_TRANSFER_FRAC,
	data_TRANSFER_RANG,
	data_EXP,
	data_MUTE,
	data_MUTETIME,
	data_VMUTE,
	data_VMUTETIME,
	data_WARN,
	data_WARNTIME,
	pPayDayMoney,
	pBank,
	pDriveLicense,
	pGunLicense,
	data_LICNUM,
	pBusiness,
	data_HOUSE,
	data_PATR,
	data_DRUGS,
	data_USEDRUGS,
	pWanted,
	pRespect,
	data_NUMBER,
	pNumberMoney,
	pPhoneStatus,
	pCanisters,
	data_MET,
	pJailTime,
	pJail,
 	pDonate,
	pAccessory_10,
	pAccessory_9,
	pAccessory_8,
	pAccessory_7,
	pAccessory_6,
	pAccessory_5,
	pAccessory_4,
	pAccessory_3,
	pAccessory_2,
	pAccessory_1,
	pUseAccessory,
	data_PHONE,
	data_PHONEBOOK,
	data_DIR,
	pSatiety,
	data_DRINK,
	Float:pHealthPoints,
	Float:data_ARM,
	data_MED,
	pPassiveMode,
	data_MEDNUM,
	data_SPAWN,
	pHospital,
 	pDemorgan,
 	pDemorganTIME,
	pWeaponLock,
	pSkillPistol,
	pSkillSDPistol,
	pSkillDeagle,
	pSkillShotgun,
	pSkillMP5,
	data_AK47,
	pSkillRifle,
	data_JOB,
	data_PADIK,
	data_KV,
	data_schooltestlevel[10],
	pProgressMetall,
	pProgressDrugs,
	pProgressAmmo,
	pProgressCarGrabber,
	pCaptureManager,
	pOnCapture,
	pProgressSellGun,
	pProgressCapture,
	pPromoCodeUse,
	pPromoCode,
	// NO SAVE
	data_ASCHEAT,
	data_CADMIN,
	pCaptureKills,
	pCaptureValue,
	pPlayerDetecting,
	pAdminStatus,
	pChangeSkin,
	bool:data_ANIM,
	data_WALK_TIMER,
	data_WALK_STYLE,
	data_3SECOND,
	data_TESTER,
	data_MINUTE,
	data_PLAYER_TIMER_ID,
	LoadCefInformation,
	data_AFK,
	data_PU,
	data_ASH_CAR,
	data_ASH_TEST,
	data_CHEK,
	pLoadVehicleID,
	pHealPack,
	pHealthPackKD,
	data_MASK,
	data_MASK_M,
	data_CALL,
	bool:data_CLICKTD,
	bool:data_CLOTHESMENU,
	bool:pInAutoSalon,
	bool:data_OPENCASINO,
	pAutoSalonCar,
	pChangerAutoSalon,
	pChangerAutoSalonb,
	pAutoSalonColor,
	bool:data_EFIR,
	data_SETMARK,
	data_911_1,
    data_911_2,
    data_GUN[13],
	data_AMMO[13],
	data_PUTPATR,
	data_PUTMET,
	data_VIP,
	data_TIME,
	data_TIMERANK,
	data_UNICALID,
	pVkontakteID,
	data_MILITARY,
	data_MEDCARD,
	Float:pOnMPX,
	Float:pOnMPY,
	Float:pOnMPZ,
	pOnMP,
	pOnMPTK,
	TWARN,
	data_FIXCOMPL,
	//TEMP INFO
	pTempJob,
	PTempJobValue_1,
	PTempJobValue_2,
	pTempJobMoney,
	pTempStopWar,
	pTempMember,
	pTempBankID,
	pTempBankCash,
	pTempBankName[MAX_PLAYER_NAME]
};
new PI[MAX_PLAYERS][P_DATA];
enum kvInfo {
	data_ID,
	data_OWNER_1[MAX_PLAYER_NAME],
	data_OWNER_2[MAX_PLAYER_NAME],
	data_OWNER_3[MAX_PLAYER_NAME],
	data_OWNER_4[MAX_PLAYER_NAME],
	data_OWNER_5[MAX_PLAYER_NAME],
	data_OWNER_6[MAX_PLAYER_NAME],
	data_OWNED[6],
	data_PRICE[6],
	data_CLASS[6],
	data_DAY[6],
	data_LOCK[6],
	Float:data_CAR_POSX,
	Float:data_CAR_POSY,
	Float:data_CAR_POSZ,
	Float:data_CAR_POSA,
	Float:data_ENTER_POSX[6],
	Float:data_ENTER_POSY[6],
	Float:data_ENTER_POSZ[6],
	Float:data_EXIT_POSX[6],
	Float:data_EXIT_POSY[6],
	Float:data_EXIT_POSZ[6],
	Float:data_ENTER_X,
	Float:data_ENTER_Y,
	Float:data_ENTER_Z,
	Float:data_EXIT_X,
	Float:data_EXIT_Y,
	Float:data_EXIT_Z,
	data_PICK_ENTER,
	data_PICK_EXIT,
	data_PICKKV_ENTER[6],
	data_PICKKV_EXIT[6],
	Text3D:data_INFO[6],
	Text3D:data_INF_ENTER,
	Text3D:data_INF_EXIT,
	data_MAPICON
}
new KV_DATA[MAX_KV][kvInfo];
new TotalKV;
enum B_DATA {
	data_ID,
	data_DAY
}
new BANS_DATA[MAX_BANS][B_DATA];
enum BLACK_LIST {
	data_ID,
	data_DAY
}
new BL_DATA[256][BLACK_LIST];
new TotalBans;
new TotalBlackList;
enum BG_DATA {
	data_ID,
	data_DAY
}
new G_DATA[MAX_G][BG_DATA];
new TotalG;
enum 
{
	dialog_KONCERT,
	dialog_SETNAME,
	dialog_ABACK,
	dialog_REGISTER,
	dialog_EMAIL,
	dialog_LOGIN,
	dialog_BGUN,
	dialog_REFERAL,
	dialog_TOKIN,
	dialog_SEX,
	dialog_DISCONNECT,
	dialog_ANIM,
	dialog_SETTING,
	dialog_SETTING_1,
	dialog_SETTING_2,
	dialog_SETTING_PER,
	dialog_SETTING_PER_1,
	dialog_SETTING_PER_2,
	dialog_SETTING_PER_3,
	dialog_CHANGE_NAME,
	dialog_COMMAND,
	dialog_REPORT,
	dialog_BAN,
	dialog_ADMINS,
	dialog_WARNTIME,
	dialog_SETSPAWN,
	dialog_DONATE,
	dialog_DONATE_1,
	dialog_DONATE_2,
	dialog_DONATE_3,
	dialog_DONATE_4,
	dialog_DONATE_5,
	dialog_DONATE_6,
	dialog_TAKE,
	dialog_DONATE_VIP,
	dialog_CONVERT,
	dialog_SPAWNHELP,
	dialog_SPAWNLAST,
	dialog_SETSKIN,
	dialog_SETSKINDEV,
	dialog_ADD_KV,
	dialog_HOUSE,
	dialog_SELL_HOUSE,
	dialog_KV,
	dialog_SELL_KV,
	dialog_ENTER_HOUSE,
	dialog_EXIT_HOUSE,
	dialog_ASH_TEST,
	dialog_BUYGUN,
	dialog_BUYGUN_1,
	dialog_ADD_HOUSE,
	dialog_ADD_HOUSE_1,
	dialog_ADD_HOUSE_2,
	dialog_ADD_HOUSE_3,
	dialog_EAT_MENU,
	dialog_BANK,
	dialog_BANK_8,
	dialog_PERERAS,
	dialog_SELLCAR_1,
	dialog_SKLAD,
	dialog_SKLAD_1,
	dialog_SKLAD_2,
	dialog_SKLAD_3,
	dialog_SKLAD_4,
	dialog_SKLAD_5,
	dialog_SKLAD_6,
	dialog_MAKEGUN,
	dialog_MAKEGUN_1,
	dialog_GUN_POLICE,
	dialog_CASINO,
	dialog_ADMCOMMAND,
	dialog_FIXCAR,
	dialog_TP,
    Dialog_PassiveMode,
    Dialog_OffPassiveMode,
    Dialog_offpas,
    Dialog_onpas,
	dialog_schoolinfo,
	dialog_help,
	dialog_schooltest,
	dialog_schooltest1,
	dialog_schooltest2,
	dialog_schooltest3,
	dialog_schooltest4,
	dialog_schoolclose,
	dialog_dalnoboy,
	dialog_bcrbjob,
	dialog_skladjob,
	dialog_salonjob,
	dialog_dbjob,
	dialog_gorajob,
	dialog_GIVEGUNMVD,
	dialog_GIVEGUNPRAVO,
	dialog_Avtougon,
	dialog_DRUGBUY,
	dialog_CARDBUY,
	DLG_BAN,
	dialog_SETGZ
};
//
enum cInfo
{
    cID,
    cOwner[25],
	cModel,
	cTemp, 
	cPremium,
	cColor_1,
	cColor_2,
	Float:cPos_X,
	Float:cPos_Y,
	Float:cPos_Z,
    Float:cPos_A,
 	cFuel,
	cCost,
	cNoPark,
	cLock,
	cKey,
	cMetall,
	cAmmo,
	cEngineStatus,
	cLamp,
	cLoad,
	cLoadValue,
	cRent,
	cCreate,
	cAutoSchool
};
new CarInfo[MAX_OWNABLECARS][cInfo];
//
static PedMale[5] = {14,20,21,22,24};
static PedFeMale[6] = {10,12,13,31,38,39};
//=============================== [ МОДУЛЬНАЯ СИСТЕМА ] ====================================//
#include "modules/anticheat.pwn"
#include "modules/organisation.pwn"
#include "modules/proposition.pwn"
#include "modules/quest.pwn"
#include "modules/blacklist.pwn"
#include "modules/business.pwn"
#include "modules/showmenu.pwn"
#include "modules/army.pwn"
#include "modules/admin.pwn"
#include "modules/mine.pwn"
#include "modules/cef.pwn"
#include "modules/capture.pwn"
#include "modules/bank_system.pwn"
//#include "modules/stamina.pwn"
//=========================================================================================//
forward Float:GetDistanceBetweenPlayers(p1,p2);
public Float:GetDistanceBetweenPlayers(p1,p2) 
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
stock GivePlayerMetall(playerid,amount)
{
    if(IsPlayerConnected(playerid))
	{
	    PI[playerid][data_MET] += amount;
        new ctext[20];
	    if(amount < 0)
		{
			new text[20];
			format(text,sizeof(text),"-%d",amount);
			cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Металл"), CEFSTR("c13537"), CEFSTR(text));
	        format(ctext,sizeof(ctext),"-%d мт",amount);
   			SetPlayerChatBubble(playerid, ctext, 0xFF3333FF, 20.0, 1500);
			UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],1781);
	    }
	    else
		{
			new text[20];
			format(text,sizeof(text),"+%d",amount);
			cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Металл"), CEFSTR("418055"), CEFSTR(text));
	        format(ctext,sizeof(ctext),"+%d мт",amount);
         	SetPlayerChatBubble(playerid, ctext, 0x66FF33FF, 20.0, 1500);
         	UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],1788);
	    }
    }
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)) {
		if(strsrc[i]==delimiter || i==strlen(strsrc)) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0; li = i+1; aNum++;
		}
		i++;
	}
	return 1;
}
stock GetNumberOfPaintjobsForVehicle(vehiclemodel) {
    switch(vehiclemodel) {
        case 483:
            return 1;
        case 575:
            return 2;
        case 534, 535, 536, 558, 559, 560, 561, 562, 565, 567, 576:
            return 3;
    }
    return 0;
}
stock ClearKillFeed(playerid = INVALID_PLAYER_ID) {
    if((playerid != INVALID_PLAYER_ID) && (0 == IsPlayerConnected(playerid)))
        return 0;
    goto L_start; {
        new dummy[16/(cellbits/charbits)];
        #emit const.pri dummy
    }
#if __Pawn < 0x030A
    SendDeathMessage(0, 0, 0),
    SendDeathMessageToPlayer(0, 0, 0, 0);
#endif
L_start:
    const CKF_MAGIC_ID = INVALID_PLAYER_ID - 1;
    new i = 5;
    #emit    push.c    CKF_MAGIC_ID
    #emit    push.c    CKF_MAGIC_ID
    if(playerid == INVALID_PLAYER_ID) {
        #emit    push.c    12
        do{
            #emit    sysreq.c    SendDeathMessage
        }while(--i != 0);
        #emit    stack    12
    }
    else {
        #emit    push.s    playerid
        #emit    push.c    16
        do{
            #emit    sysreq.c    SendDeathMessageToPlayer
        }while(--i != 0);
        #emit    stack    16
    }
    return 1;
}
stock Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
	return floatsqroot(floatpower(floatabs(floatsub(x2,x)),2)+floatpower(floatabs(floatsub(y2,y)),2)+floatpower(floatabs(floatsub(z2,z)),2));
stock bool:IsRPNick(const name[]) {
    static i, __;
    if ('A' <= name[0] <= 'Z' && 'a' <= name[1] <= 'z') {
        for (i = 1, __ = 0;;) {
            switch (name[++i]) {
                case 'a'..'z':
                    continue;
                case '_':
                    if (__++, 'A' <= name[++i] <= 'Z' && 'a' <= name[++i] <= 'z')
                        continue;
                    else
                        break;
                case '\0':
                    return (i >= 4 && __ == 1);
                default:
                    return false;
            }
        }
    }
    return false;
}
stock GetVehicleSpeed(vehicleid) {
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}
callback: RespawnVehicles() {
	DestroyVehicle(army_car[0]);
	DestroyVehicle(army_car[1]);
	DestroyVehicle(army_car[2]);
	DestroyVehicle(army_car[3]);
	DestroyVehicle(army_car[4]);
	DestroyVehicle(army_car[5]);
	DestroyVehicle(army_car[6]);
	DestroyVehicle(army_car[7]);
	DestroyVehicle(army_car[8]);
	DestroyDynamic3DTextLabel(vehicletext);
	DestroyVehicle(hospital_car[1]);
	DestroyVehicle(hospital_car[2]);
	DestroyVehicle(hospital_car[3]);
	DestroyVehicle(hospital_car[4]);
	DestroyVehicle(hospital_car[5]);
	DestroyVehicle(hospital_car[6]);
	DestroyVehicle(hospital_car[7]);
	DestroyVehicle(gov_car[1]);
	DestroyVehicle(gov_car[2]);
	DestroyVehicle(gov_car[3]);
	DestroyVehicle(gov_car[4]);
	DestroyVehicle(gov_car[5]);
	DestroyVehicle(gov_car[6]);
	DestroyVehicle(gov_car[7]);
	DestroyVehicle(police_car[1]);
	DestroyVehicle(police_car[2]);
	DestroyVehicle(police_car[3]);
	DestroyVehicle(police_car[4]);
	DestroyVehicle(police_car[5]);
	DestroyVehicle(police_car[6]);
	DestroyVehicle(police_car[7]);
	DestroyVehicle(skinhead_car[1]);
	DestroyVehicle(skinhead_car[2]);
	DestroyVehicle(skinhead_car[3]);
	DestroyVehicle(skinhead_car[4]);
	DestroyVehicle(skinhead_car[5]);
	DestroyVehicle(skinhead_car[6]);
	DestroyVehicle(skinhead_car[7]);
	DestroyVehicle(gopota_car[1]);
	DestroyVehicle(gopota_car[2]);
	DestroyVehicle(gopota_car[3]);
	DestroyVehicle(gopota_car[4]);
	DestroyVehicle(gopota_car[5]);
	DestroyVehicle(gopota_car[6]);
	DestroyVehicle(gopota_car[7]);
	DestroyVehicle(kavkaz_car[1]);
	DestroyVehicle(kavkaz_car[2]);
	DestroyVehicle(kavkaz_car[3]);
	DestroyVehicle(kavkaz_car[4]);
	DestroyVehicle(kavkaz_car[5]);
	DestroyVehicle(kavkaz_car[6]);
	DestroyVehicle(kavkaz_car[7]);
	DestroyVehicle(VertletVh[1]);
	DestroyVehicle(VertletVh[2]);
	DestroyVehicle(VertletVh[3]);
	DestroyVehicle(VertletPravo[1]);
	DestroyVehicle(VertletPravo[2]);
	DestroyVehicle(VertletPolice[1]);
	DestroyVehicle(VertletPolice[2]);
	DestroyVehicle(VertletPolice[3]);
	LoadOrgCars();
	return 1;
}
stock LoadStaticCars() {
	GetVehicleParamsEx(vehicle_static[0],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[0],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[1],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[1],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[2],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[2],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[3],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[3],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[4],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[4],engine,lights_text,alarm,true,bonnet,boot,objective);
	return 1;
}
stock LoadOrgCars() {
	army_car[0] = -1;
	army_car[1] = -1;
 	army_car[2] = -1;
	army_car[3] = -1;
	army_car[4] = -1;
	army_car[5] = -1;
	army_car[6] = -1;
	army_car[7] = -1;
	army_car[8] = -1;
	VertletVh[1] = -1;
	VertletVh[2] = -1;
	VertletVh[3] = -1;
    hospital_car[1] = -1;
    hospital_car[2] = -1;
    hospital_car[3] = -1;
    hospital_car[4] = -1;
    hospital_car[5] = -1;
    hospital_car[6] = -1;
    hospital_car[7] = -1;
    gov_car[1] = -1;
    gov_car[2] = -1;
    gov_car[3] = -1;
    gov_car[4] = -1;
    gov_car[5] = -1;
    gov_car[6] = -1;
    gov_car[7] = -1;
    police_car[1] = -1;
    police_car[2] = -1;
    police_car[3] = -1;
    police_car[4] = -1;
    police_car[5] = -1;
    police_car[6] = -1;
    police_car[7] = -1;
    skinhead_car[1] = -1;
    skinhead_car[2] = -1;
    skinhead_car[3] = -1;
    skinhead_car[4] = -1;
    skinhead_car[5] = -1;
    skinhead_car[6] = -1;
    skinhead_car[7] = -1;
    gopota_car[1] = -1;
    gopota_car[2] = -1;
    gopota_car[3] = -1;
    gopota_car[4] = -1;
    gopota_car[5] = -1;
    gopota_car[6] = -1;
    gopota_car[7] = -1;
    kavkaz_car[1] = -1;
    kavkaz_car[2] = -1;
    kavkaz_car[3] = -1;
    kavkaz_car[4] = -1;
    kavkaz_car[5] = -1;
    kavkaz_car[6] = -1;
    kavkaz_car[7] = -1;
   	army_car[0] = CreateVehicle(578, 1675.6893,1666.9424,15.5597,0.8229, 1, 1, -1);
	army_car[1] = CreateVehicle(599, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
 	army_car[2] = CreateVehicle(597, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
	army_car[3] = CreateVehicle(597, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
	army_car[4] = CreateVehicle(598, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
	army_car[5] = CreateVehicle(598, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
	army_car[6] = CreateVehicle(598, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
	army_car[7] = CreateVehicle(598, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
	army_car[8] = CreateVehicle(601, 1671.6355,1667.8109,15.6293,1.1148, 1, 1, -1);

	VertletVh[1] = CreateVehicle(548, -2661.7263,435.8972,11.1828,359.9406, 1, 1, -1);
	VertletVh[2] = CreateVehicle(548, -2698.5901,435.8012,11.2348,0.0000, 1, 1, -1);
	VertletVh[3] = CreateVehicle(548, -2736.1858,435.5855,11.2284,0.0000, 1, 1, -1);

   	SetVehicleVirtualWorld(army_car[1], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[1], 1);
   	SetVehicleVirtualWorld(army_car[2], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[2], 1);
   	SetVehicleVirtualWorld(army_car[3], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[3], 1);
   	SetVehicleVirtualWorld(army_car[4], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[4], 1);
   	SetVehicleVirtualWorld(army_car[5], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[5], 1);
   	SetVehicleVirtualWorld(army_car[6], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[6], 1);
   	SetVehicleVirtualWorld(army_car[7], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[7], 1);
	new textmz[144];
	format(textmz,sizeof(textmz),"{2d69b4}МЗКТ\n{33dd66}Патроны: {33dd66}%d/10000 шт.\n{33dd66}Металл: {33dd66}%d/10000 кг.", CarInfo[army_car[0]][cAmmo], CarInfo[army_car[0]][cMetall]);
	vehicletext = CreateDynamic3DTextLabel(textmz, 0x3366FFFF, 1749.4796,1750.9102,15.4706, 15, INVALID_PLAYER_ID, army_car[0], 0, -1);
    hospital_car[1] = CreateVehicle(416, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
    hospital_car[2] = CreateVehicle(416, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
    hospital_car[3] = CreateVehicle(416, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
    hospital_car[4] = CreateVehicle(416, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
    hospital_car[5] = CreateVehicle(416, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
    hospital_car[6] = CreateVehicle(551, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
    hospital_car[7] = CreateVehicle(551, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
   	SetVehicleVirtualWorld(hospital_car[1], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[1], 1);
   	SetVehicleVirtualWorld(hospital_car[2], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[2], 1);
   	SetVehicleVirtualWorld(hospital_car[3], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[3], 1);
   	SetVehicleVirtualWorld(hospital_car[4], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[4], 1);
   	SetVehicleVirtualWorld(hospital_car[5], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[5], 1);
   	SetVehicleVirtualWorld(hospital_car[6], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[6], 1);
   	SetVehicleVirtualWorld(hospital_car[7], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[7], 1);
    gov_car[1] = CreateVehicle(551, -152.6144,628.7219,-50.1706,356.2022, 0, 0, -1);
    gov_car[2] = CreateVehicle(494, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
    gov_car[3] = CreateVehicle(494, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
    gov_car[4] = CreateVehicle(418, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
    gov_car[5] = CreateVehicle(418, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
    gov_car[6] = CreateVehicle(479, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
    gov_car[7] = CreateVehicle(480, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
   	VertletPravo[1] = CreateVehicle(487, 1936.0822,-2222.1443,44.4434,0.0005, 1, 1, -1);
	VertletPravo[2] = CreateVehicle(487, 1888.0077,-2222.6887,44.4357,0.0009, 1, 1, -1);
   	SetVehicleVirtualWorld(gov_car[1], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[1], 1);
   	SetVehicleVirtualWorld(gov_car[2], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[2], 1);
   	SetVehicleVirtualWorld(gov_car[3], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[3], 1);
   	SetVehicleVirtualWorld(gov_car[4], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[4], 1);
   	SetVehicleVirtualWorld(gov_car[5], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[5], 1);
   	SetVehicleVirtualWorld(gov_car[6], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[6], 1);
   	SetVehicleVirtualWorld(gov_car[7], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[7], 1);
    police_car[1] = CreateVehicle(599, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
    police_car[2] = CreateVehicle(596, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
    police_car[3] = CreateVehicle(597, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
    police_car[4] = CreateVehicle(597, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
    police_car[5] = CreateVehicle(598, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
    police_car[6] = CreateVehicle(598, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
    police_car[7] = CreateVehicle(598, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
   	VertletPolice[1] = CreateVehicle(497, 2423.1506,-1826.6251,35.5234,0.0005, 1, 1, -1);
	VertletPolice[2] = CreateVehicle(497, 2399.3569,-1827.4559,35.5158,0.0010, 1, 1, -1);
	VertletPolice[3] = CreateVehicle(497, 2378.3765,-1827.9022,35.5158,360.0000, 1, 1, -1);
   	SetVehicleVirtualWorld(police_car[1], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[1], 1);
   	SetVehicleVirtualWorld(police_car[2], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[2], 1);
   	SetVehicleVirtualWorld(police_car[3], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[3], 1);
   	SetVehicleVirtualWorld(police_car[4], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[4], 1);
   	SetVehicleVirtualWorld(police_car[5], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[5], 1);
   	SetVehicleVirtualWorld(police_car[6], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[6], 1);
   	SetVehicleVirtualWorld(police_car[7], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[7], 1);
    // ТС СКИНХЕДОВ
    skinhead_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 1, 1, -1);
    skinhead_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 1, 1, -1);
    skinhead_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 1, 1, -1);
    skinhead_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 1, 1, -1);
    skinhead_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 1, 1, -1);
    skinhead_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 1, 1, -1);
    skinhead_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 1, 1, -1);
   	SetVehicleVirtualWorld(skinhead_car[1], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[1], 1);
   	SetVehicleVirtualWorld(skinhead_car[2], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[2], 1);
   	SetVehicleVirtualWorld(skinhead_car[3], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[3], 1);
   	SetVehicleVirtualWorld(skinhead_car[4], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[4], 1);
   	SetVehicleVirtualWorld(skinhead_car[5], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[5], 1);
   	SetVehicleVirtualWorld(skinhead_car[6], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[6], 1);
   	SetVehicleVirtualWorld(skinhead_car[7], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(skinhead_car[7], 1);
	// ТС ГОПОТЫ
    gopota_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 13, 13, -1);
    gopota_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 13, 13, -1);
    gopota_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 13, 13, -1);
    gopota_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 13, 13, -1);
    gopota_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 13, 13, -1);
    gopota_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 13, 13, -1);
    gopota_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 13, 13, -1);
   	SetVehicleVirtualWorld(gopota_car[1], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[1], 1);
   	SetVehicleVirtualWorld(gopota_car[2], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[2], 1);
   	SetVehicleVirtualWorld(gopota_car[3], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[3], 1);
   	SetVehicleVirtualWorld(gopota_car[4], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[4], 1);
   	SetVehicleVirtualWorld(gopota_car[5], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[5], 1);
   	SetVehicleVirtualWorld(gopota_car[6], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[6], 1);
   	SetVehicleVirtualWorld(gopota_car[7], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(gopota_car[7], 1);
	// ТС Кавказцев
    kavkaz_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 0, 0, -1);
    kavkaz_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 0, 0, -1);
    kavkaz_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 0, 0, -1);
    kavkaz_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 0, 0, -1);
    kavkaz_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 0, 0, -1);
    kavkaz_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 0, 0, -1);
    kavkaz_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 0, 0, -1);
   	SetVehicleVirtualWorld(kavkaz_car[1], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[1], 1);
   	SetVehicleVirtualWorld(kavkaz_car[2], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[2], 1);
   	SetVehicleVirtualWorld(kavkaz_car[3], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[3], 1);
   	SetVehicleVirtualWorld(kavkaz_car[4], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[4], 1);
   	SetVehicleVirtualWorld(kavkaz_car[5], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[5], 1);
   	SetVehicleVirtualWorld(kavkaz_car[6], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[6], 1);
   	SetVehicleVirtualWorld(kavkaz_car[7], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(kavkaz_car[7], 1);
    CarInfo[army_car[0]][cFuel] = 50;
    CarInfo[army_car[1]][cFuel] = 50;
    CarInfo[army_car[2]][cFuel] = 50;
    CarInfo[army_car[3]][cFuel] = 50;
    CarInfo[army_car[4]][cFuel] = 50;
    CarInfo[army_car[5]][cFuel] = 50;
    CarInfo[army_car[6]][cFuel] = 50;
    CarInfo[army_car[7]][cFuel] = 50;
	CarInfo[army_car[8]][cFuel] = 50;
    CarInfo[hospital_car[1]][cFuel] = 50;
    CarInfo[hospital_car[2]][cFuel] = 50;
    CarInfo[hospital_car[3]][cFuel] = 50;
    CarInfo[hospital_car[4]][cFuel] = 50;
    CarInfo[hospital_car[5]][cFuel] = 50;
    CarInfo[hospital_car[6]][cFuel] = 50;
    CarInfo[hospital_car[7]][cFuel] = 50;
    CarInfo[VertletVh[1]][cFuel] = 50;
    CarInfo[VertletVh[2]][cFuel] = 50;
    CarInfo[VertletVh[3]][cFuel] = 50;
    CarInfo[gov_car[1]][cFuel] = 50;
    CarInfo[gov_car[2]][cFuel] = 50;
    CarInfo[gov_car[3]][cFuel] = 50;
    CarInfo[gov_car[4]][cFuel] = 50;
    CarInfo[gov_car[5]][cFuel] = 50;
    CarInfo[gov_car[6]][cFuel] = 50;
    CarInfo[gov_car[7]][cFuel] = 50;
    CarInfo[police_car[1]][cFuel] = 50;
    CarInfo[police_car[2]][cFuel] = 50;
    CarInfo[police_car[3]][cFuel] = 50;
    CarInfo[police_car[4]][cFuel] = 50;
    CarInfo[police_car[5]][cFuel] = 50;
    CarInfo[police_car[6]][cFuel] = 50;
    CarInfo[police_car[7]][cFuel] = 50;
    CarInfo[skinhead_car[1]][cFuel] = 50;
    CarInfo[skinhead_car[2]][cFuel] = 50;
    CarInfo[skinhead_car[3]][cFuel] = 50;
    CarInfo[skinhead_car[4]][cFuel] = 50;
    CarInfo[skinhead_car[5]][cFuel] = 50;
    CarInfo[skinhead_car[6]][cFuel] = 50;
    CarInfo[skinhead_car[7]][cFuel] = 50;
    CarInfo[gopota_car[1]][cFuel] = 50;
    CarInfo[gopota_car[2]][cFuel] = 50;
    CarInfo[gopota_car[3]][cFuel] = 50;
    CarInfo[gopota_car[4]][cFuel] = 50;
    CarInfo[gopota_car[5]][cFuel] = 50;
    CarInfo[gopota_car[6]][cFuel] = 50;
    CarInfo[gopota_car[7]][cFuel] = 50;
    CarInfo[kavkaz_car[1]][cFuel] = 50;
    CarInfo[kavkaz_car[2]][cFuel] = 50;
    CarInfo[kavkaz_car[3]][cFuel] = 50;
    CarInfo[kavkaz_car[4]][cFuel] = 50;
    CarInfo[kavkaz_car[5]][cFuel] = 50;
    CarInfo[kavkaz_car[6]][cFuel] = 50;
    CarInfo[kavkaz_car[7]][cFuel] = 50;
	return 1;
}
stock SaveGZ(gzopg1, gz)
{
    new str_q[90];
    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `gangzone` SET `gzopg` = '%d' WHERE `gzid` = '%d'", gzopg1, gz_info[gz][gzid]);
	mysql_function_query(mysql, str_q, false, "", "");
	return 1;
}
stock GivePlayerHealth(playerid, Float:health) 
{
	new Float:hp;
	GetPlayerHealth(playerid, hp);
	SetPlayerHealthAC(playerid,hp+health);
}
stock GivePlayerArmour(playerid,Float:Armour, Float:Armplayer)
{
    if(Armplayer+Armour < 0) SetPlayerArmour(playerid, 0);
	else SetPlayerArmour(playerid, Armplayer+Armour);
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart) return 1;
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart) 
{
    if(PI[playerid][pMember] == 3 && weaponid == 3) 
	{
		new Float:health, Float:x, Float:y, Float:z;
		GetPlayerHealth(damagedid,health);
		GetPlayerPos(damagedid, x, y, z); ClearAnimations(damagedid);
		ApplyAnimation(damagedid, "PED", "COWER", 4.0, 1, 0, 0, 0, 0);

		SCMf(playerid,  COLOR_BLACKBLUE, "Вы успешно оглушили игрока: %s", PI[damagedid][pName]);
		SCMf(damagedid, COLOR_BLACKBLUE, "Сотрудник Полиции %s оглушил вас на 20 секунд", PI[playerid][pName]);

		cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Игрок %s оглушен", PI[damagedid][pName]));
		cef_emit_event(damagedid, "show-center-notify", CEFINT(1), CEFSTR("Сотрудник Полции ударил вас", PI[playerid][pName]));
		TogglePlayerControllable(damagedid, 0);
		SetTimerEx("TazerEffect", 20000, false, "d", damagedid);
		SetPlayerHealth(damagedid, health+amount);
	}
	new Float:oldposx, Float:oldposy, Float:oldposz, Float:Health,Float:hpcar,carid = -1;
	GetPlayerHealth(damagedid, Health);
	GetPlayerPos(damagedid, oldposx, oldposy, oldposz);
	if(GetPlayerState(damagedid) == PLAYER_STATE_DRIVER) 
	{
		carid = GetPlayerVehicleID(damagedid);
		GetVehicleHealth(carid, hpcar);
	}
	if(playerid != INVALID_PLAYER_ID) 
	{
		PlayerPlaySound(playerid, 6401, 0.0, 0.0, 10.0);
		
		if(PI[playerid][pOnMPTK] != 1) 
		{
			if(PI[playerid][pMember] == 0) return 1;
			if(PI[damagedid][pMember] == PI[playerid][pMember] && GetPlayerVirtualWorld(playerid) == 0) 
			{
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SetPlayerHealthAC(damagedid, Health);
				return SCMf(playerid, COLOR_GREY, "Урон заблокирован: игрок %s[%d] является вашим союзником", PI[damagedid][pName],damagedid);
			}
		}
		if(PI[damagedid][pAdminStatus] == 1) 
		{
			 SetPlayerHealthAC(damagedid, 250);
			 if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
			 return SCM(playerid, COLOR_GREY, !"Урон заблокирован: игрок является Игровым Мастером");
		}
		if(PI[damagedid][pPassiveMode] == 1) 
		{
			if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
			SetPlayerHealthAC(damagedid, Health);
			return SCM(playerid, COLOR_GREY, !"Урон заблокирован: у игрока включен пассивный режим");
		}
		if(PI[playerid][pPassiveMode] == 1)
		{
			if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
			SetPlayerHealthAC(damagedid, Health);
			return SCM(playerid, COLOR_GREY, !"Урон заблокирован: у Вас включен пассивный режим");
		}
		if(GangWarStatus > 0) 
		{
			if(!IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133)) 
			{
				if(IsPlayerToKvadrat(damagedid, 1449.5,-1355, 1591.5, -1133)) 
				{
					SetPlayerHealthAC(damagedid, Health);
				    return SCMf(playerid, COLOR_GREY, "Урон заблокирован: игрок %s[%d] находиться на зоне захвата", PI[damagedid][pName],damagedid);
				}
			}
		}	
		if(GangWarStatus > 0)  
		{
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) && IsPlayerToKvadrat(damagedid, 1449.5,-1355, 1591.5, -1133)) 
			{
				if(PI[playerid][pMember] == Command[0])  
				{
					if(PI[damagedid][pMember] == Command[1]) 
					{
						if(GetPVarInt(playerid,"kdhealcapt") < gettime())  SetPVarInt(damagedid,"kdhealcapt",gettime() + 30);
					}
				}
				if(PI[playerid][pMember] == Command[1]) 
				{
					if(PI[damagedid][pMember] == Command[0]) 
					{
						if(GetPVarInt(playerid,"kdhealcapt") < gettime()) SetPVarInt(damagedid,"kdhealcapt",gettime() + 30);
					}
				}
			}
		}
		if(!IsPlayerCops(playerid)) 
		{
			if(PlayerToKvadrat(playerid,  1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
			PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
			PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
			PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
			PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
			PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) 
			{
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SCM(playerid, COLOR_GREY, !"Урон заблокирован: вы находитесь в Зелёной Зоне");
				PlayerStayInGreenZone(playerid);
				PlayerStayInGreenZone(damagedid);
				SetPlayerHealthAC(damagedid, Health);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnfreezePlayer", 1500, false, "i", playerid);
				ClearAnimations(playerid);
				SetPlayerArmedWeapon(playerid, 0);
			}
		}
		if(!IsPlayerCops(playerid)) 
		{
			if(PlayerToKvadrat(damagedid, 1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(damagedid) == 0 || // БЦРБ
			PlayerToKvadrat(damagedid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(damagedid) == 0 || // Правительство
			PlayerToKvadrat(damagedid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(damagedid) == 0 || // рудник
			PlayerToKvadrat(damagedid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(damagedid) == 0 || // казино
			PlayerToKvadrat(damagedid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(damagedid) == 0 || // автошкола
			PlayerToKvadrat(damagedid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(damagedid) == 0) 
			{
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SCMf(playerid, COLOR_GREY, "Урон заблокирован: игрок %s[%d] находится в Зелёной Зоне", PI[damagedid][pName],damagedid);
				SetPlayerHealthAC(damagedid, Health);
				PlayerStayInGreenZone(playerid);
				PlayerStayInGreenZone(damagedid);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnfreezePlayer", 1500, false, "i", playerid);
				ClearAnimations(playerid);
			}
		}
	}
	return 1;
}
callback: CheckDalnaboyPricep(playerid) return 1;
stock IsTextInvalid(text[]) 
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "=", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ";", true) != -1) return 1;
	if(strfind(text, "|", true) != -1) return 1;
	return 0;
}
callback: ArmyVorotaClose() 
{
	MoveObject(ArmyVorota,1892.07, 1719.18, 15.69, 2.5,  0.00, 0.00, 92.00);
	MoveObject(ArmyVorota1,1891.89, 1724.66, 15.69, 2.5,   0.00, 0.00, 92.00);
	return KillTimer(ArmyVorotaTimer);
}
callback: BolkaVorotaClose() 
{
    MoveObject(Gate,2121.8877, 1798.9204, 12.8168, 2.5,  0.00, 0.00, 90.12);
	return KillTimer(BolkaVorotaTimer);
}
callback: PravoVorotaClose()
{
    MoveObject(GatePravo,1872.55, -2228.84, 11.91, 2.5,  0.00, 0.00, 0.00);///закрытое
	return KillTimer(PravoVorotaTimer);
}
callback: PoliceVorotaClose() 
{
	MoveObject(PoliceVorota1,1891.89, 1724.66, 15.69, 2.5,   0.00, 0.00, 92.00);
	return KillTimer(PoliceVorotaTimer);
}
callback: SkinPostClose() 
{
	MoveObject(SkinPost,1447.3074, 2368.4189, 13.3830, 1, 0.00, 90.00, 91.02);
	return KillTimer (SkinPostTimer);
}
callback: GopotaPostClose() 
{
	MoveObject(GopotaPost,2221.4264, -2578.8955, 21.6831, 1, 0.30, -90.00, -1.56);
	return KillTimer (GopotaPostTimer);
}
callback: KavkazPostClose() 
{
	MoveObject(KavkazPost,-384.2381, -1219.8264, 40.8303, 1,0.00, 90.00, -37.02);
	return KillTimer (KavkazPostTimer);
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) 
{
	return 1;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) 
{
    new Float:hp;
    new carid = GetPlayerVehicleID(playerid);
    GetVehicleHealth(carid, hp);
    if(hp > 351) 
	{
    	cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Авария (двигатель заглох)"));
		GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
		SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
		CarInfo[carid][cEngineStatus] = 0;
		cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));

		const Float:min_hp = 350.0;
		const Float:max_hp = 750.0;

		if (hp < min_hp) hp = 0.0;
		else if (hp > max_hp) hp = 100.0;
		else hp = ((hp - min_hp) / (max_hp - min_hp)) * 100.0;

		cef_emit_event(playerid, "update-speed-text", CEFINT(1), CEFINT(floatround(hp, floatround_round)));

		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		switch(random(2)) 
		{
		    case 0: PlayerPlaySound(playerid, 1148, x, y, z);
		    case 1: PlayerPlaySound(playerid, 1009, x, y, z);
			case 2: PlayerPlaySound(playerid, 1009, x, y, z);
		}
    }
    return 1;
}
stock GetString(const param1[], const param2[])
{
    return !strcmp(param1, param2, false);
}
callback: SetRandomWeather() 
{
	new rand = random(sizeof weather);
	SendClientMessageToAllf(COLOR_GREEN, "[Прогноз погоды] в области ожидается %s (+%d °С)", weather[rand][weather_name], weather[rand][weather_degrees]);
    WeatherServer = weather[rand][weather_id];
	return SetWeather(WeatherServer);
}
stock ConnectMySQL()
{
    new currenttime = GetTickCount();

	new sql = 1;
	if(!sql) mysql = mysql_connect("127.0.0.1", "gs256042", "gs256042", "AaIIWDGx9uXR"); // mysql = mysql_connect("127.0.0.1", "gs81398", "gs81398", "1sdasd21qs");, mysql = mysql_connect("127.0.0.1", "gs75859", "gs75859", "qdasjd21ed2l"); // orange
	else mysql = mysql_connect("127.0.0.1", "gs256042", "gs256042", "AaIIWDGx9uXR");

	switch(mysql_errno())
	{
		case 0: print("Подключение к базе данных удалось");
	    case 1044: return print("Подключение к базе данных не удалось [Указано несуществующее имя пользователя]");
	    case 1045: return print("Подключение к базе данных не удалось [Указан неправильный пароль]");
	    case 1049: return print("Подключение к базе данных не удалось [Указана несуществующая база данных]");
	    case 2003: return print("Подключение к базе данных не удалось [Хостинг с базой данных недоступен]");
	    case 2005: return print("Подключение к базе данных не удалось [Указан неправильный адрес хостинга]");
	    default: return printf("Подключение к базе данных не удалось [Неизвестная ошибка. Код ошибки: %d]", mysql_errno());
	}
	mysql_log(LOG_ALL); //mysql_log(LOG_ERROR | LOG_WARNING);

	mysql_query(mysql, "SET NAMES 'cp1251'", false);
	mysql_set_charset("cp1251", mysql);
    printf("=======> mysql connect %d", mysql);
	//
	mysql_function_query(mysql, "SELECT * FROM `warehouse`",true, "LoadWarehouse", "");
	mysql_function_query(mysql, "SELECT * FROM `group`",true, "LoadGroups", "");
	mysql_function_query(mysql, "SELECT * FROM `kvartiry`",true, "LoadKV", "");
	mysql_function_query(mysql, "SELECT * FROM `houses`",true, "LoadHouses", "");
	mysql_function_query(mysql, "SELECT * FROM `business`",true, "LoadBusiness", "");
	mysql_function_query(mysql, "SELECT * FROM `gangzone`",true, "LoadGZ", "");
	//
    printf("MySQL загрузился за %i ms", GetTickCount() - currenttime);
    SendRconCommand("ackslimit 10000");
	SendRconCommand("messageholelimit 10000");

	EnableAntiCheat(39, 0);
	EnableAntiCheat(3, 0);
	EnableAntiCheat(6, 0);
    return true;
}
public OnGameModeInit()
{
	new currenttime = GetTickCount();
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	Iter_Clear(Admin);
	SetGameModeText(GAMEMODENAME);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	gstream = SvCreateGStream(COLOR_GREEN, "GVC");
	SvDebug(SV_FALSE);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	ClearCapture();
		
	CheckCarHP = SetTimer("CheckCarHealth", 1000, 1);
	SetTimer("SecondTimer",1000,true);
	SetTimer("MinutTimer",1000*60,true);
	SetTimer("ChangeServer0", 500, false);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	SetNameTagDrawDistance(30.0);
	LimitPlayerMarkerRadius(70.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	ShowPlayerMarkers(2);
   	SetGravity(0.008);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	LoadTextDraws();
	LoadOrgCars();
	LoadStaticCars();
	OtherMapping();
	ConnectMySQL();

	new playerid, tmpobjid;
	#include <Mapping/BusaevoNew>
    #include <Mapping/int_vchmagaz>
	//инты
	#include <Mapping/int_mvd>
	#include <Mapping/new_int_mvd_dejur>
	#include <Mapping/int_padik>
	#include <Mapping/int_bank>
	#include <Mapping/int_voenkom>
	#include <Mapping/int_rk>
	#include <Mapping/int_palata>
	#include <Mapping/int_crb>
	#include <Mapping/int_ordinator>
	#include <Mapping/int_kazino>
	#include <Mapping/int_carschool>
	#include <Mapping/int_vchstab>
	#include <Mapping/int_vchkazarma>
	#include <Mapping/int_vchstolovaya>
	#include <Mapping/int_kazna>
	#include <Mapping/int_meriya>
	#include <Mapping/int_kv>
	#include <Mapping/int_opg>
	#include <Mapping/int_garage>
	#include <Mapping/int_shopluk>
	//опг
	#include <Mapping/Gopotrespa>
	#include <Mapping/opg_skinhead>
	//южка
	#include <Mapping/new_kazino>
	#include <Mapping/most_yj>
	#include <Mapping/most>
	#include <Mapping/uyzjka>
	#include <Mapping/avtoschool_ext>
	#include <Mapping/dalnoboy>
	#include <Mapping/ferma>
    #include <Mapping/casino>
	//батырево
 	#include <Mapping/baty_mateo>
	#include <Mapping/map_mateo>
	#include <Mapping/new_shahta>
	#include <Mapping/int_shahta>
	//остальное
	#include <Mapping/derevya>
    #include <Mapping/MAP>

	//NEW MAPPING
	#include <Mapping/vch> // база вч лытка
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	SelectSkin = CreateMenu("Victim", 1, 50.0, 160.0, 90.0);
	SetMenuColumnHeader(SelectSkin, 0, "Choose skin");
	AddMenuItem(SelectSkin,0,"> Next");
	AddMenuItem(SelectSkin,0,"< Back");
	AddMenuItem(SelectSkin,0,"Select");
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

	new hour, minute, second;
	gettime(hour, minute, second);
	SetWorldTime(hour);
	
	for(new i = 0; i < MAX_VEHICLES; i++) 
	{
		ClearCarData(i);
		CarInfo[i][cFuel] = 50;
	}
	//FMT
	fmt_toggle_crp_mode(true);
	fmt_toggle_dialog_callback(true);
	//FMT
	restartserver = 0;
	BusinessUpdate = 0;

	capture_OnGameModeInit();
	//stamina_OnGameModeInit();
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ РАБОТЫ ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	MineClothes = CreatePickup(1275, 23, 2330.7954, -1453.4937, 1137.4415, -1); // шахта закончить/начать 
	MinePoint_1 = CreatePickup(19133, 23, 2383.3367,-1440.9891,1137.3475, -1); // шахта место добычи
	MinePoint_2 = CreatePickup(19133, 23, 2364.8472,-1438.0321,1137.3826, -1); // шахта место добычи
	MinePoint_3 = CreatePickup(19133, 23, 2382.2844,-1432.3588,1137.5203, -1); // шахта место добычи
	MinePoint_4 = CreatePickup(19133, 23, 2372.6978,-1423.6947,1137.5745, -1); // шахта место добычи
	MineDropOre = CreatePickup(19135, 23, 2318.4268,-1450.5154,1137.4485, -1); // шахта место сдачи
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	army_sklad_text = CreateDynamic3DTextLabel("Loading..", -1, 1567.5477,1823.2529,15.6548, 20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	Create3DTextLabel("{FFFFFF}Помощь для новичков", -1, 2748.1580,-2458.2456,21.6890, 10.0, 0);

	PickupAutoSchool = CreateDynamicPickup(1239, 23, 1915.1434, 2232.8154, 16.2557, 0);
	help_spawn = CreateDynamicCP(2748.1580,-2458.2456,21.6890,1.0,0,0,-1,5.0);

	police_barrier_status[0] = GATES_CLOSED;
	police_barrier_status[1] = GATES_CLOSED;

	for(new i;i < sizeof(Bankomats); i ++) CreateDynamicPickup(1212, 1, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2], -1);
	CreateObject(2942, 1796.85, 2503.71, 15.46,   0.00, 0.00, 127.04); // Банкомат Спавн

	CreateDynamicMapIcon(-452.2754,-1488.7148,56.5516, 20, -1, 0, -1, -1, 400.0);// Военкомат
	CreateDynamicMapIcon(2110.635498,1816.722412,11.805241, 22, -1, 0, -1, -1, 400.0);// болька
	CreateDynamicMapIcon(1798.9729, 2495.8669, 15.9816, 11, -1, 0, -1, -1, 400.0);// Автобусник
	CreateDynamicMapIcon(1795.1661,2039.2810,15.8942, 52, -1, 0, -1, -1, 400.0);// банк Батырёво
	CreateDynamicMapIcon(2325.5154,-1803.9813,22.4540, 55, -1, 0, -1, -1, 400.0);// автосалон
	CreateDynamicMapIcon(2313.8247,-1924.8029,22.4338, 25, -1, 0, -1, -1, 400.0);// казино
	CreateDynamicMapIcon(2379.2959,-932.5500,2.0722, 14, -1, 0, -1, -1, 400.0);// ферма
	CreateDynamicMapIcon(1434.416992,2371.655273,13.341032, 59, -1, 0, -1, -1, 400.0);// скинхеды
	CreateDynamicMapIcon(2215.5708,-2597.6665,21.9600, 58, -1, 0, -1, -1, 400.0);// гопота
	CreateDynamicMapIcon(-370.1530,-1214.1766,41.0700, 60, -1, 0, -1, -1, 400.0);// кавказ
	CreateDynamicMapIcon(1966.9902,-2604.1121,10.8149, 51, -1, 0, -1, -1, 400.0);// дальнобой
	CreateDynamicMapIcon(2416.2463,-1848.5751,21.9369, 30, -1, 0, -1, -1, 400.0);// мусарная
	CreateDynamicMapIcon(2196.3562,-1925.6718,18.8125, 19, -1, 0, -1, -1, 400.0);// коцертная сцена

	SkinPost = CreateObject(968,1447.3074, 2368.4189, 13.3830, 0.00, 90.00, 91.02);
	GopotaPost = CreateObject(968,2221.4264, -2578.8955, 21.6831, 0.30, -90.00, -1.56);
 	KavkazPost = CreateObject(968,-384.2381, -1219.8264, 40.8303,0.00, 90.00, -37.02);
	ArmyVorota = CreateObject(988, 1892.07, 1719.18, 15.69,   0.00, 0.00, 92.00);
	ArmyVorota1 = CreateObject(988, 1891.89, 1724.66, 15.69,   0.00, 0.00, 92.00);
	return printf("OnGameModeInit загрузился за %i ms", GetTickCount() - currenttime);
}
public OnGameModeExit()
{
	SaveServer();
    if (gstream) SvDeleteStream(gstream);
	KillTimer(CheckCarHP);
	DisconnectMySQL();
	return 1;
}
stock DisconnectMySQL()
{
    mysql_close(mysql);
}
public OnPlayerRequestClass(playerid, classid) 
{
	if(IsPlayerLogged{playerid})
	{
		SettingSpawn(playerid);
		SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
	}
	return 0;
}
public OnPlayerConnect(playerid)
{	
	GetPlayerName(playerid, PI[playerid][pName], MAX_PLAYER_NAME);
	GetPlayerIp(playerid,PI[playerid][pLoginIP], 32);
	getdate(PI[playerid][pLogDateYear], PI[playerid][pLogDateMonth], PI[playerid][pLogDateDat]);

	PI[playerid][data_PLAYER_TIMER_ID] = SetTimerEx("PlayerUpdate", 1000, true, "d", playerid);
	
    SetPlayerColor(playerid, 0xB5BBBA00);

	if (SvGetVersion(playerid) == SV_NULL) SCM(playerid, COLOR_HINT, "[Голосовой чат]: {FFFFFF}у Вас отсутствует голосовой чат, проверьте целостность файлов игры");
    else if (SvHasMicro(playerid) == SV_FALSE) SCM(playerid, COLOR_HINT, "[Голосовой чат]: {FFFFFF}микрофон не обноружен, установите его в настройках {FFFF33}(F11)");
    else if ((lstream[playerid] = SvCreateDLStreamAtPlayer(40.0, SV_INFINITY, playerid, 0xff0000ff, "Local")))
    {
		if (gstream) SvAttachListenerToStream(gstream, playerid);
        SvAddKey(playerid, 0x58);
        SvAddKey(playerid, 0x5A);
    }
	//
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"BASEBALL");
	//
	ArmyStorageZone = CreateDynamicCircle(1567.5477,1823.2529, 3.0, 0, 0, -1);

	ClearPlayerData(playerid);

	mysql_string[0] = EOS, f(mysql_string, 150, "SELECT `ID`, `Password`, `VkontakteID` FROM accounts WHERE Name = '%s' LIMIT 1;", getName(playerid));
    mysql_tquery(mysql, mysql_string, "GetPlayerDataMysql", "d", playerid);

	RemoveBuild(playerid);
	LoadPlayerTextDraws(playerid);
	return 1;
}
stock CheckStatus(playerid)
{
	SetPlayerSkinAC(playerid, 23);
	TogglePlayerControllable(playerid, false);
	SetPlayerVirtualWorld(playerid, playerid+10);
	SetPlayerPos(playerid, 1835.58, 2073.23, 16.06+5);
	InterpolateCameraLookAt(playerid, 1819.755981, 2093.590820, 20.097853, 1819.755981, 2093.590820, 20.097853, 150000, CAMERA_MOVE);

	mysql_string[0] = EOS, f(mysql_string, 76, "SELECT * FROM `banlist` WHERE `name` = '%s' LIMIT 1", getName(playerid));
    mysql_tquery(mysql, mysql_string, "CheckBan", "d", playerid);
	return 1;
}
callback: GetPlayerDataMysql(playerid) 
{
	if(cache_get_row_count(mysql) > 0) {
		PI[playerid][pID] = cache_get_row_int(0, 0, mysql);
	}
	else {
		PI[playerid][pID] = -1;
	}

	printf("Player %s (ID: %d, ADMIN: %d)", PI[playerid][pName], PI[playerid][pID], PI[playerid][pAdmin]);

	CheckStatus(playerid);
}
public OnPlayerEnterDynamicArea(playerid, areaid) 
{
	if(areaid == ArmyStorageZone) 
	{
		if(ArmyStorage == 1) TimetTheftCartridges[playerid] = SetTimerEx("TheftCartridges", 2000, true, "d", playerid);
		else return SendClientMessage(playerid, COLOR_GREY, !"Склад организации 'Воинская часть' закрыт игровым мастером");
    }
	return 1;
}
public OnPlayerEnterDynamicCP(playerid,checkpointid) 
{
    if(checkpointid == help_spawn) return ShowPlayerDialog(playerid, dialog_SPAWNHELP, DIALOG_STYLE_LIST, "{ee3366}Помощь", "С чего начать играть?", "Выбрать", "Отмена");
 	if(checkpointid == army_sklad) return 1;
	return 1;
}
public OnPlayerDisconnect(playerid, reason) 
{
	cef_destroy_browser(playerid, CEF_INTERFACE_BROWSER_ID);
	capture_OnPlayerDisconnect(playerid);
	//==============================================//
    new szDisconnectReason[3][] = {
        "Таймаут/Краш",
        "Выход",
        "Кик/Бан"
    };
	if(PI[playerid][pAdmin] >= 1) 
	{
		SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] вышел с сервера. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,szDisconnectReason[reason]);
		Iter_Remove(Admin, playerid);
	}
	if(PI[playerid][pAdminStatus] == 1) if(PI[playerid][pAdmin] == 0) return PI[playerid][pAdminStatus] = 0;
	//==============================================//
    if(lstream[playerid])
    {
        SvDeleteStream(lstream[playerid]);
        lstream[playerid] = SV_NULL;
    }
	//==============================================//
	DeletePVar(playerid, "HintHutton");
	DeletePVar(playerid, "DeathOnCapture");
	DeletePVar(playerid, "RegStatus");
	if(GetPVarType(playerid, "ConnectPTimer")) KillTimer(GetPVarInt(playerid, "ConnectPTimer"));
    DeletePVar(playerid,"PlayerCuffed");
	//==============================================//
	if(PI[playerid][pTempJob] == 1) 
	{
		DestroyVehicle(dalnoboy_trayler[playerid]);
        DestroyVehicle(dalnoboy_car[playerid]);
        return KillTimer(dalnaboy_check_pricep[playerid]);
    }
    if(lstream[playerid]) 
	{
		SvDeleteStream(lstream[playerid]);
		lstream[playerid] = SV_NULL;
    }
	PI[playerid][data_schooltestlevel] = 0;
    if(GetPVarInt(playerid,"PlayerCuffed") == 1) 
	{
		if(PI[playerid][pWanted] >= 1)
		{
			PI[playerid][pJail] = 1;
			PI[playerid][pJailTime] = 1800;
			PI[playerid][pWanted] = 0;
			SendClientMessageToAllf(COLOR_TOMATO,"%s вышел из игры при задержании (+30 минут ареста)", PI[playerid][pName]);
		}
 	}
	if(PI[playerid][pInAutoSalon] == true) 
	{
 		DestroyVehicle(PI[playerid][pAutoSalonCar]);
		PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
		HideAutoSalonMenu(playerid);
	}
 	if(PI[playerid][data_OPENCASINO] == true) KillTimer(casino_timer[playerid]);
	if(PI[playerid][pRentMoto] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][pRentMoto]);
	if(PI[playerid][pLoadVehicleID] != INVALID_VEHICLE_ID) 
	{
		ClearVehicleData(PI[playerid][pLoadVehicleID]);
		DestroyVehicle(PI[playerid][pLoadVehicleID]);
		SaveOwnableCar(PI[playerid][pLoadVehicleID]);
		LoadedOwnable--;
	}
	//==============================================//
    KillTimer(PI[playerid][data_PLAYER_TIMER_ID]);
	KillTimer(PI[playerid][LoadCefInformation]);
	//==============================================//
	SavePlayerData(playerid);
	UpdatePlayerDataInt(playerid, "Online", 0, 18220);
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{

    PI[playerid][data_MASK_M] = 0;

    PI[playerid][data_schooltestlevel] = 0;

	if(!PI[playerid][pJail] && !PI[playerid][pDemorgan] && GetPVarInt(playerid, "DeathOnCapture") == 0)
	{
		if(PI[playerid][pMember] == 2) 
		{
			SendClientMessagef(playerid, COLOR_GREEN, !"Ваш персонаж погиб. Сейчас вас ожидает процесс восстановления в казарме.");
			PlayerHospital(playerid);
		}
		else PlayerHospital(playerid);
		TogglePlayerControllable(playerid, true);
	}
	PI[playerid][data_MASK_M] = 0;
	if(animan{playerid}) animan{playerid} = false;
	PI[playerid][data_schooltestlevel] = 0;
    if(playerid != 65535 && killerid != 65535) 
	{
		if(IsPlayerCops(killerid) && PI[playerid][pWanted] != 0) 
		{
			SendFractionMessagef(PI[killerid][pMember], COLOR_YELLOW, "[Всем постам] %s %s  арестовал подозреваемого %s", rang_police[PI[killerid][pRang]-1][frName],PI[killerid][pName],PI[playerid][pName]);
			PI[playerid][pJail] = 1;
	 		PI[playerid][pJailTime] = 600*PI[playerid][pWanted];
	 		PI[playerid][pWanted] = 0;
			UnfreezePlayer(playerid);
			SetPlayerWantedLevel(playerid,PI[playerid][pWanted]);
			PlayerSpawn(playerid);
			SetPlayerSpecialAction(playerid, 0);
			RemovePlayerAttachedObject(playerid, 5);
			DeletePVar(playerid,"PlayerCuffed");
			GivePlayerMoneyLog(killerid,3000*PI[playerid][pWanted]);
			new pay[20];
			format(pay,sizeof(pay),"+%dР",3000*PI[playerid][pWanted]);
			cef_emit_event(killerid, "show-notify-no-img", CEFSTR("Премия за арест преступника"), CEFSTR("418055"), CEFSTR(pay));
		}
		else if(GangWarStatus > 0)  
		{
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) && IsPlayerToKvadrat(killerid, 1449.5,-1355, 1591.5, -1133)) 
			{
				if(PI[playerid][pMember] == Command[0])  
				{
					if(PI[killerid][pMember] == Command[1]) 
					{
						new gun = GetPlayerWeapon(killerid);

						global_str[0] = EOS, f(global_str, sizeof global_str, "Вы убили игрока %s[%d] (%s)", PI[playerid][pName], playerid, weapon_names[gun]);
						cef_emit_event(killerid, "show-capture-kill", CEFSTR(global_str));

						SCM(killerid, COLOR_YELLOW, !"За участие в стреле Вы получите вознаграждение в следующий PayDay");

						PI[playerid][pPayDayMoney] += 1500;
						CommandKill[1]++;

						SetPVarInt(playerid, "DeathOnCapture", 1);
						SetPlayerHealthAC(playerid, 176);

						for(new i; i < MAX_PLAYERS; i++) 
						{
							if(PI[i][pMember] == Command[0] || PI[i][pMember] == Command[1])
							{
								cef_emit_event(i, "insert-to-kill", CEFSTR(PI[killerid][pName]), CEFSTR(ColorTeam[PI[killerid][pMember]]), CEFINT(gun), CEFSTR(PI[playerid][pName]), CEFSTR(ColorTeam[PI[playerid][pMember]]));
								printf("cef_emit_event(i, 'nsert-to-kill', CEFSTR(%s), CEFSTR(%s), CEFINT(%d), CEFSTR(%s), CEFSTR(%s)", 
									PI[killerid][pName], ColorTeam[PI[killerid][pMember]], gun, PI[playerid][pName], ColorTeam[PI[playerid][pMember]]);
							}
						}
						if(PI[playerid][pMember] == Command[0]) PlayerSpawn(playerid);
						return true;
					}
				}
				if(PI[playerid][pMember] == Command[1]) 
				{
					if(PI[killerid][pMember] == Command[0]) 
					{
						new gun = GetPlayerWeapon(killerid);

						global_str[0] = EOS, f(global_str, sizeof global_str, "Вы убили игрока %s[%d] (%s)", PI[playerid][pName], playerid, weapon_names[gun]);
						cef_emit_event(killerid, "show-capture-kill", CEFSTR(global_str));

						SCM(killerid, COLOR_YELLOW, !"За участие в стреле Вы получите вознаграждение в следующий PayDay");

						PI[playerid][pPayDayMoney] += 1500;
						CommandKill[0]++;

						SetPVarInt(playerid, "DeathOnCapture", 1);
						SetPlayerHealthAC(playerid, 176);

						for(new i; i < MAX_PLAYERS; i++) 
						{
							if(PI[i][pMember] == Command[0] || PI[i][pMember] == Command[1])
							{
								cef_emit_event(i, "insert-to-kill", CEFSTR(PI[killerid][pName]), CEFSTR(ColorTeam[PI[killerid][pMember]]), CEFINT(gun), CEFSTR(PI[playerid][pName]), CEFSTR(ColorTeam[PI[playerid][pMember]]));
								printf("cef_emit_event(i, 'nsert-to-kill', CEFSTR(%s), CEFSTR(%s), CEFINT(%d), CEFSTR(%s), CEFSTR(%s)", 
									PI[killerid][pName], ColorTeam[PI[killerid][pMember]], gun, PI[playerid][pName], ColorTeam[PI[playerid][pMember]]);
							}
						}
						if(PI[playerid][pMember] == Command[1]) PlayerSpawn(playerid);
						return true;
					}
				}
			}
		}
		else if(!IsPlayerCops(killerid) && PI[killerid][pMember] != 2) 
		{
		    if(PI[killerid][pWanted] < 6) 
			{
				PI[killerid][pWanted]++;
				SetPlayerWantedLevel(killerid, PI[killerid][pWanted]);
				SCMf(killerid, COLOR_TOMATO, "Ваш уровень розыска повышен за убийство игрока %s[%d]",PI[playerid][pName], playerid);
				if(PI[killerid][pRespect] > -100) PI[killerid][pRespect]--;
				if(PI[killerid][pPassiveMode] == 1)
				{
					SCM(killerid, COLOR_HINT, !"[Пассивный Режим] {FFFFFF}Пассивный Режим был выключен! Причина: Убийство человека!");
					PI[killerid][pPassiveMode] = 0;
					PassiveModeOff(killerid);
				}
			}
		}
	}
	if(GetPVarInt(playerid, "DeathOnCapture") == 0) 
	{
		if(PI[playerid][pJail] == 0) 
		{
			if(PI[playerid][pDemorgan] == 0) 
			{
				PI[playerid][pHospital] = 1;
				cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы попали в больницу"));
			}
		}
		PI[playerid][pHealthPoints] = 5;
	}

    ResetWeaponAll(playerid);

	if(!IsPlayerLogged{playerid}) return AC_Kick(playerid, 5);

 	foreach(new i:Player) if(PI[i][pAdmin] >= 1) SendDeathMessageToPlayer(i, killerid, playerid, reason);
	return 1;
}

public OnVehicleSpawn(vehicleid) return DestroyVehicle(vehicleid);
public OnVehicleDeath(vehicleid, killerid) return RespawnVehicles();

public OnPlayerText(playerid, text[])
{
	if(!IsPlayerLogged{playerid}) return false;

    if(TextReset[playerid] > 0)
	{
  		SCM(playerid, COLOR_BLACK, !"Пожалуйста, подождите пару секунд...");
		return 0;
	}

	if(PI[playerid][data_MUTE] == 1)
	{
		SCM(playerid, COLOR_GREY, !"Ваш чат заблокирован. Посмотреть время до разблокировки (/time)");
		return false;
	}
	if(CheckString(text)) PlayerGetsChatBan(playerid, text);
	
	SetTimerEx("ClearData", 1000,0,"d", playerid);
	TextReset[playerid] = 1;

 	NotReklama(playerid, text);
	if(GetPVarInt(playerid, "SpecBool") == 1)
	{
	    SendAdminsMessagef(COLOR_BLUE, "[%s #%d] %s[%d]: %s", AdminName[PI[playerid][pAdminNumber]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, text);
	}
	if(PI[playerid][pAdminStatus] != 0) 
	{
  		global_str[0] = EOS, f(global_str, 160, "Игровой Мастер: {FFFFFF}%s", text);
		ProxDetector(30.0, playerid, global_str, 0xDD3366FF, 0xDD3366FF, 0xDD3366FF, 0xDD3366FF ,0xDD3366FF);
		SetPlayerChatBubble(playerid, text, 0x81a4cdFF, 20.0, 3000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) 
		{
	 		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
			PI[playerid][data_ANIM] = true;
 		}
		return 0;
	}
	if(PI[playerid][data_CALL] != -1 && PI[PI[playerid][data_CALL]][data_CALL] == playerid) 
	{
        SCMf(PI[playerid][data_CALL], COLOR_YELLOW, "[Звонок]%s: %s",PI[playerid][pName],text);
		SCMf(playerid, COLOR_GREY, "[Звонок] %s: %s",PI[PI[PI[playerid][data_CALL]][data_CALL]][pName],text);
		return 0;
 	}
 	if(!strcmp(text,"xD",true)) 
	{
		f(global_str, 50, "%s валяется от смеха", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "валяется от смеха", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"(",true)) 
	{
		f(global_str, 36, "%s грустит", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "грустит", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"((",true)) 
	{
		f(global_str, 50, "%s сильно расстроился", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "сильно расстроился", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"чВ",true)) 
	{
		f(global_str, 48, "%s валяется от смеха", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "валяется от смеха", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,")",true)) 
	{
		f(global_str, 39, "%s улыбается", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "улыбается", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"))",true)) 
	{
		f(global_str, 39, "%s смеётся", PI[playerid][pName]);
		ProxDetector(20.0, playerid, global_str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "смеётся", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(PI[playerid][data_MASK_M] == 1) 
	{
		if(PI[playerid][data_VIP] != 0) 
		{
			f(global_str, 150, "- %s {121212}(%s)[%d] {FFA500}["VIP_TAG"]", text, PI[playerid][pName], playerid);
			ProxDetector(30.0, playerid, global_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) 
			{
				ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
				if(PI[playerid][data_ANIM] == false) SetTimerEx("AnimationOff", 1400, 0, "d", playerid);
				PI[playerid][data_ANIM] = true;
			}
			return 0;
		}
		else 
		{
			f(global_str, 150, "- %s {121212}(%s)[%d]", text, PI[playerid][pName], playerid);
			ProxDetector(30.0, playerid, global_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) 
			{
				ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
				if(PI[playerid][data_ANIM] == false) SetTimerEx("AnimationOff", 1400, 0, "d", playerid);
				PI[playerid][data_ANIM] = true;
			}
			return 0;
		}
	}
	if(PI[playerid][data_VIP] != 0) 
	{
	    f(global_str, 150, "- %s %s(%s)[%d] {FFA500}["VIP_TAG"]", text, PLAYER_COLOR_CHAT[PI[playerid][pMember]][COLOR], PI[playerid][pName], playerid);
		ProxDetector(30.0, playerid, global_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
		SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) 
		{
	 	    ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PI[playerid][data_ANIM] == false) SetTimerEx("AnimationOff", 1400, 0, "d", playerid);
			PI[playerid][data_ANIM] = true;
	 	}
	 	return 0;
	}
    f(global_str, 150, "- %s %s(%s)[%d]", text, PLAYER_COLOR_CHAT[PI[playerid][pMember]][COLOR], PI[playerid][pName], playerid);
	ProxDetector(30.0, playerid, global_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
	SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) 
	{
 	    ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
		if(PI[playerid][data_ANIM] == false) SetTimerEx("AnimationOff", 1400, 0, "d", playerid);
		PI[playerid][data_ANIM] = true;
 	}
	return 0;
}
public OnPlayerCommandText(playerid, cmdtext[]) return 0;
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) 
{
	if(PI[playerid][pRentMoto] != INVALID_VEHICLE_ID) 
	{
		if(vehicleid == PI[playerid][pRentMoto])
		{
			return KillTimer(RentMotoTimerToDetroy[playerid]);
		}
	}
	//if(!IsAPlane(vehicleid) && !IsAVelik(vehicleid)) ShowPlayerSpeedometer(playerid); 
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid) 
{
	if(PI[playerid][pRentMoto] != INVALID_VEHICLE_ID) 
	{
	    if(vehicleid == PI[playerid][pRentMoto]) 
		{
			SendClientMessage(playerid, COLOR_GREY, !"У Вас есть 90 секунд, чтобы сесть на мопед. Иначе аренда завершится");
			RentMotoTimerToDetroy[playerid] = SetTimerEx("ArendMotoDestroy", 90000, false, "i", playerid);
		}
	}
	//if(!IsAPlane(vehicleid) && !IsAVelik(vehicleid)) HidePlayerSpeedometer(playerid);
    GetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate) 
{
    new carid = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER) 
	{
		if(!IsAPlane(carid) && !IsAVelik(carid)) ShowPlayerSpeedometer(playerid); 
	}
	if(newstate == PLAYER_STATE_ONFOOT) if(!IsAPlane(carid) && !IsAVelik(carid)) HidePlayerSpeedometer(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
	{
        if(PI[playerid][pDriveLicense] == 0 && PI[playerid][data_ASH_TEST] == 0) 
		{
            if(!IsAVelik(carid)) 
			{
				SCM(playerid, COLOR_GREY, !"У Вас нет водитеських прав");
             	RemovePlayerFromVehicle(playerid);
             	HidePlayerSpeedometer(playerid);
 			}
        }
        if(carid == gov_car[0] || carid == gov_car[1] || carid == gov_car[2] || carid == gov_car[3] || carid == gov_car[4] ||
		carid == gov_car[5] || carid == gov_car[6] || carid == gov_car[7]) {
	        if(PI[playerid][pMember] != 1) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт Вам недоступен"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == army_car[0]) {
	        if(PI[playerid][pMember] != 2) {
	        	if(PI[playerid][pRang] < 2) {
					SCM(playerid, COLOR_GREY,"Этот транспорт можно использовать с 2 ранга"); HidePlayerSpeedometer(playerid);
             		RemovePlayerFromVehicleAC(playerid);
             		return 1;
				}
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации Войсковая часть"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == army_car[1] || carid == army_car[2] || carid == army_car[3] || carid == army_car[4] || carid == army_car[5] || carid == army_car[6] || carid == army_car[7] || carid == army_car[8]) 
		{
	        if(PI[playerid][pMember] != 2) 
			{
	            SCM(playerid, COLOR_GREY, !"Этот транспорт пренадлежит организации Кавказцы"); 
				HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == police_car[0] || carid == police_car[1] ||carid == police_car[2] ||
		carid == police_car[3] || carid == police_car[4] || carid == police_car[5] || carid == police_car[6] ||
		carid == police_car[7]) {
	        if(PI[playerid][pMember] != 3) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации Кавказцы"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == hospital_car[0] || carid == hospital_car[1] || carid == hospital_car[2] || carid == hospital_car[3] ||
		carid == hospital_car[4] || carid == hospital_car[5] || carid == hospital_car[6] || carid == hospital_car[7]) {
	        if(PI[playerid][pMember] != 4) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации БЦРБ"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == skinhead_car[0] || carid == skinhead_car[1] || carid == skinhead_car[2] || carid == skinhead_car[3]
		|| carid == skinhead_car[4] || carid == skinhead_car[5] || carid == skinhead_car[6] || carid == skinhead_car[7]) {
	        if(PI[playerid][pMember] != 5) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации Скинхеды"); HidePlayerSpeedometer(playerid);
             	RemovePlayerFromVehicleAC(playerid);
				return 1;
	        }
	    }
	    if(carid == skinhead_car[3] || carid == skinhead_car[4]) {
	        if(PI[playerid][pRang] < 5) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт можно использовать с 5 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == skinhead_car[6]) {
	        if(PI[playerid][pRang] < 8) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 8 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == skinhead_car[5]) {
	        if(PI[playerid][pRang] < 6) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 6 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == skinhead_car[7]|| carid == skinhead_car[6]) {
	        if(PI[playerid][pRang] < 9) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 9 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == gopota_car[0] || carid == gopota_car[1] || carid == gopota_car[2] || carid == gopota_car[3]
		|| carid == gopota_car[4] || carid == gopota_car[5] || carid == gopota_car[6] || carid == gopota_car[7]) {
	        if(PI[playerid][pMember] != 6) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации Гопота"); HidePlayerSpeedometer(playerid);
             	RemovePlayerFromVehicleAC(playerid);
				return 1;
	        }
	    }
	    if(carid == gopota_car[3] || carid == gopota_car[4]) {
	        if(PI[playerid][pRang] < 5) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт можно использовать с 5 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == gopota_car[6]) {
	        if(PI[playerid][pRang] < 8) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 8 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == gopota_car[5]) {
	        if(PI[playerid][pRang] < 6) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 6 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == gopota_car[7]|| carid == gopota_car[6]) {
	        if(PI[playerid][pRang] < 9) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 9 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == kavkaz_car[0] || carid == kavkaz_car[1] || carid == kavkaz_car[2] || carid == kavkaz_car[3]
		|| carid == kavkaz_car[4] || carid == kavkaz_car[5] || carid == kavkaz_car[6] || carid == kavkaz_car[7]) {
	        if(PI[playerid][pMember] != 7) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт пренадлежит организации Кавказцы"); HidePlayerSpeedometer(playerid);
             	RemovePlayerFromVehicleAC(playerid);
				return 1;
	        }
	    }
	    if(carid == kavkaz_car[3] || carid == kavkaz_car[4]) {
	        if(PI[playerid][pRang] < 5) {
	            SCM(playerid, COLOR_GREY,"Этот транспорт можно использовать с 5 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == kavkaz_car[6]) {
	        if(PI[playerid][pRang] < 8) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 8 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == kavkaz_car[5]) {
	        if(PI[playerid][pRang] < 6) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 6 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == kavkaz_car[7]|| carid == kavkaz_car[6]) {
	        if(PI[playerid][pRang] < 9) {
	            SCM(playerid, COLOR_GREY,"Данный транспорт доступен с 9 ранга"); HidePlayerSpeedometer(playerid);
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
    }
	return 1;
}
public OnPlayerEnterCheckpoint(playerid) 
{
	if(bombplayer[playerid] == 1 && PlayerToPoint(5.0, playerid, GetPVarFloat(playerid, "bomb_pos_x"),GetPVarFloat(playerid, "bomb_pos_y"),GetPVarFloat(playerid, "bomb_pos_z"))) 
	{
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "bomb_pos_x");
	    DeletePVar(playerid, "bomb_pos_y");
	    DeletePVar(playerid, "bomb_pos_z"); 
		bombplayer[playerid] = 0;
		ApplyAnimation(playerid,"BOMBER","BOM_PLANT",4.0, 0,0,0,0,0); 
		SCM(playerid, COLOR_YELLOW,"Вы заминировали забор. Он взорвётся через {3377cc}20 сек{FFFF00}, отойдите от него подальше!");
		SetTimerEx("BombVCH", 20000, false, "i", playerid);
	}
    if(PlayerToPoint(5.0, playerid, GetPVarFloat(playerid, "gps_pos_x"),GetPVarFloat(playerid, "gps_pos_y"),GetPVarFloat(playerid, "gps_pos_z"))) 
	{
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "gps_pos_x");
	    DeletePVar(playerid, "gps_pos_y");
	    DeletePVar(playerid, "gps_pos_z");
     	return SCM(playerid, COLOR_GREEN, !"Вы достигли точки назначения");
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid) return 1;
public OnPlayerEnterRaceCheckpoint(playerid) 
{
	if(PlayerToPoint(10.0, playerid, -2351.3767,258.0399,23.6756) ||
	PlayerToPoint(10.0, playerid, 2978.3062,-720.5325,12.7500) ||
	PlayerToPoint(10.0, playerid, 2325.0569,-264.0050,1.6073) ||
	PlayerToPoint(10.0, playerid, 1976.2108,1652.2156,15.9200) ||
	PlayerToPoint(10.0, playerid, -442.7106,-1575.0638,40.9470)) 
	{
		if(PI[playerid][pTempJob] == 1) 
		{
		    if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_GREY, !"Вы не доставили прицеп");
			SCM(playerid, COLOR_YELLOW, !"Вы доставили груз, работа была завершена.");
			DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
            GivePlayerMoneyLog(playerid, 95000);
            PI[playerid][pTempJob] = 0;
            DisablePlayerRaceCheckpoint(playerid);
        	KillTimer(dalnaboy_check_pricep[playerid]);
	        return 1;
		}
	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) return 1;
public OnRconCommand(cmd[]) return 1;
public OnPlayerRequestSpawn(playerid) 
{
	if(!IsPlayerLogged{playerid})
	{
	    SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Для авторизации на нашем сервере введите пароль");
	    Kick(playerid);
	    return 0;
	}
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid) 
{
    if(!IsValidDynamicPickup(pickupid) || pPickupID[playerid]) return 0;
    pPickupID[playerid] = pickupid;
    SetPVarInt(playerid,"pickup",pickupid);
	
	for(new g = 0; g < TotalBusiness; g++) 
	{
		if(pickupid == BizInfo[g][data_PICKENTER]) 
		{
			if(BizInfo[g][bSealedDays] > 0) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"Вы не можете зайти в этот бизнес, так-как он опечатан");
			
			BizInfo[g][bClient]++;
			SetPVarInt(playerid, "business", g);

			if(BizInfo[g][data_LOCK] == 0 || BizInfo[g][bOwned] != 1) 
			{
                if(BizInfo[g][data_TYPE] == 2) 
				{
					SetPlayerFacingAngle(playerid, 178.0463);
       				SetCameraBehindPlayer(playerid);
					SetPlayerPosAC(playerid,578.4819,84.4839,382.6700);
				}
   				if(BizInfo[g][data_TYPE] == 3) SetPlayerPosAC(playerid,204.5834,870.3509,1019.1500), SetCameraBehindPlayer(playerid);
				if(BizInfo[g][data_TYPE] == 6) 
				{
					if(GetPVarInt(playerid,"kdpickup") > gettime()) return 1;
					return ShowPlayerDialog(playerid, 9229, DIALOG_STYLE_MSGBOX, !"{ee3366}Автосалон", !"{FFFFFF}Вы действительно хотите попасть в автосалон?", "Да", "Нет");
				}
				else 
				{
					SetPlayerInterior(playerid, BizInfo[g][data_INT]);
					SetPlayerVirtualWorld(playerid, BizInfo[g][data_VW]);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				}
            }
            else if(BizInfo[g][data_TYPE] != 1) cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Этот бизенес закрыт"));
        }
        if(pickupid == BizInfo[g][data_PICKEXIT]) 
		{
	        SetPlayerPosAC(playerid,BizInfo[g][data_TPEXITX], BizInfo[g][data_TPEXITY], BizInfo[g][data_TPEXITZ]);
	        SetPlayerFacingAngle(playerid, BizInfo[g][data_ANGLE]);
	        SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
			DeletePVar(playerid, "business");
		}
    }
	for(new kv = 0; kv < TotalKV; kv++) 
	{
		if(pickupid == KV_DATA[kv][data_PICK_ENTER])
		{
	        SetPVarInt(playerid, "padik", kv);
			SetPlayerPosAC(playerid, 36.0538,1923.8887,1113.7346);
			SetPlayerFacingAngle(playerid, 179.8331);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]);
			SetCameraBehindPlayer(playerid);
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		}
		if(pickupid == KV_DATA[kv][data_PICK_EXIT]) 
		{
            SetPlayerPosAC(playerid, KV_DATA[kv][data_CAR_POSX], KV_DATA[kv][data_CAR_POSY], KV_DATA[kv][data_CAR_POSZ]);
			SetPlayerFacingAngle(playerid, KV_DATA[kv][data_CAR_POSA]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		}
	}
	if(pickupid == metall_buy) ShowPlayerDialog(playerid, 9189, DIALOG_STYLE_INPUT, "{ee3366}Покупка металла", "{FFFFFF}Введите колличество металла, которое Вы хотите купить:\n{ffff99}Стоимость 1 кг: 30 руб", "Купить", "Закрыть");
	if(pickupid == drugs_buy) ShowPlayerDialog(playerid, dialog_DRUGBUY, DIALOG_STYLE_INPUT, "{ee3366}Покупка веществ", "{FFFFFF}Введите колличество веществ, которое Вы хотите купить:\n{ffff99}Стоимость 1 г: 50 руб", "Купить", "Закрыть");
	//информационные пикапы
	
	//информационный пикап ВЧ
	if(pickupid == VCHinfo) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ee3366}Информация о призыве", "\
		{ffff99}1. Название организации\n\
		{ffffff}Войсковая часть\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 2 уровень персонажа\n\
		{ffffff}- 8 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Военкомат в пгт. Бусаево", "Закрыть", "");
	}
	//информационный пикап ВЧ-1
	if(pickupid == VCHinfo1) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ee3366}Информация о призыве", "\
		{ffff99}1. Название организации\n\
		{ffffff}Войсковая часть\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 2 уровень персонажа\n\
		{ffffff}- 8 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Военкомат в пгт. Бусаево", "Закрыть", "");
	}
	//информационный пикап БЦРБ
	if(pickupid == CRBinfo) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ee3366}Информация о собеседование", "\
		{ffff99}1. Название организации\n\
		{ffffff}БЦРБ\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 3 уровень персонажа\n\
		{ffffff}- 8 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Больница пгт.Батырево", "Закрыть", "");
	}
	//информационный пикап Правительства области
	if(pickupid == Pravoinfo) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ee3366}Информация о собеседование", "\
		{ffff99}1. Название организации\n\
		{ffffff}Правительство области\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 4 уровень персонажа\n\
		{ffffff}- 20 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Мерия в г. Южном", "Закрыть", "");
	}
	if(pickupid == Pravoinfo1) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{ee3366}Информация о собеседование", "\
		{ffff99}1. Название организации\n\
		{ffffff}Правительство области\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 4 уровень персонажа\n\
		{ffffff}- 20 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Мерия в г. Южном", "Закрыть", "");
	}
	//информационный пикап Министерства Внутренних Дел (МВД)
	if(pickupid == MVDinfo) {
        return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о собеседование", "\
		{ffff99}1. Название организации\n\
		{ffffff}Полиция\n\
		\n\
		{ffff99}2. Критерии для вступление в организацию\n\
		{ffffff}- Не состоять в других организациях\n\
		{ffffff}- Отсутствие предупреждений\n\
		{ffffff}- 5 уровень персонажа\n\
		{ffffff}- 20 ед. законопослушности\n\
	 	{ffffff}- Отсутствие розыска\n\
	 	{ffffff}- Наличие военного билета\n\
	 	{ffffff}- Наличие медицинской справки\n\
	 	\n\
	 	{ffff99}3. Время проведения\n\
        {ffffff}Следите за новостями в области\n\
		{ff0000}\n\
		{ffff99}4. Место проведения\n\
	 	{ffffff}Здание организации", "Закрыть", "");
    }
	if(pickupid == CRBPickCard) 
	{
		if(PI[playerid][data_MEDCARD] != 0) return SCM(playerid, COLOR_GREY, !"У Вас уже есть медицинская карта");
		ShowPlayerDialog(playerid, dialog_CARDBUY, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка медицинской карты", "\
		{FFFFFF}Вы действительно хотите преобрести медицинскую карту за {FFFF99}750 рублей?", "Да", "Нет");
	}
	for(new h = 0; h < TotalHouses; h++) 
	{
		if(HOUSE_DATA[h][data_PICKUPENTER] == pickupid) 
		{
			SetPVarInt(playerid, "house", h);
	       	if(HOUSE_DATA[h][data_OWNED] == 1) 
			{
		  		return ShowPlayerDialogf(playerid, dialog_ENTER_HOUSE, DIALOG_STYLE_MSGBOX, !"{ee3366}Дом куплен", "Войти", "Отмена", "{FFFFFF}Номер дома: %d\nВладелец: {3274c7}%s\nНазвание: Морской\nСтоимость: %d руб\nКварплата: 1499 руб / день", h+1, HOUSE_DATA[h][data_OWNER], HOUSE_DATA[h][data_PRICE], HOUSE_DATA[h][data_DAY]);
			}
	    	else 
			{
		     	return ShowPlayerDialogf(playerid, 7900, DIALOG_STYLE_MSGBOX, !"{ee3366}Дом продаётся", "Купить", "Отмена", "{FFFFFF}Номер дома: %d\nНазвание: Морской\nСтоимость: %d рублей\nКварплата: 1499 руб / день",h+1,HOUSE_DATA[h][data_PRICE]);
			}
		}
	}
	if(pickupid == AutoSchool_Info) 
	{
		ShowPlayerDialog(playerid, dialog_schoolinfo, DIALOG_STYLE_MSGBOX, !"{ee3366}Справочник", "\
		{FFFFFF}Общие правила ПДД:\n\n\
		1. Максимальная скорость в неселенных пунктах - 60 км/час\n\
		2. Если Вас остановил инспектор ДПС, Вы должны остановится, спросить удостоверение инспектора и предъявить права и документы на Ваше ТС.\n\
		3. Обгон разрешен если:\n\
		3.1. Водитель не загромождает Вам обзор встречной полосы\n\
		3.2. Скорость водителя обгоняемого ТС, не выше чем 100 км/час.\n\
		4. Водителю ТС запрещается водить транспорт будучи не трезвым.\n\n\
		Желаем Вам удачи, приятной игры на {FFA500}"NAMESERVER"", "Закрыть", "");
		return 1;
	}
	if(pickupid == AutoSchool_Test) 
	{
	    if(PI[playerid][pDriveLicense] == 1) return SCM(playerid, COLOR_LIGHTGREY, !"У Вас уже есть водительские права");
	    PI[playerid][data_schooltestlevel] = 0;
		return ShowPlayerDialog(playerid, dialog_schooltest, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"{FFFFFF}Вы действительно хотите сдать экзамен на водительские права?", "Да", "Нет");
	}
	if(pickupid == Dalnoboy_pickup) 
	{
	    if(PI[playerid][pDriveLicense] != 1) return SCM(playerid, COLOR_GREY, !"У Вас нет водительских прав");
	    if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_GREY, !"Работа дальнобойщика доступна с 3-го уровня");
	    if(PI[playerid][pTempJob] == 2) return SCM(playerid, COLOR_GREY, !"Вы уже работаете дальнобойщиком");
	    PI[playerid][data_schooltestlevel] = 0;
		return ShowPlayerDialog(playerid, dialog_dalnoboy, DIALOG_STYLE_MSGBOX, !"{ee3366}Дальнобойщики", !"{FFFFFF}Вы действительно хотите устроиться на работу дальнобойщиком?", "Да", "Нет");
	}
	if(pickupid == PAR_vhod) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2134.3328,-1969.9320,258.1160);
		SetPlayerFacingAngle(playerid, 269.9082);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == AutoSchool_Enter) 
	{
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 2260.9907,2718.0132,1122.4604);
		SetPlayerFacingAngle(playerid, 179.4687);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == AutoSchool_Exit) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1846.1957,1451.5331,10.0355);
		SetPlayerFacingAngle(playerid, 86.71);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodMeriya) 
	{
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 1158.0021,2572.6350,1112.4800);
		SetPlayerFacingAngle(playerid, 179.0270);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodMeriya) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1824.3256,2095.8198,15.8522);
		SetPlayerFacingAngle(playerid, 270.6051);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodPravoKrisha) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1906.9309,-2219.6975,43.2401);
		SetPlayerFacingAngle(playerid, 181.6943);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodPravoKrisha) 
	{
	    SetPlayerVirtualWorld(playerid, -1);
	    SetPlayerInterior(playerid, -1);
	    SetPlayerPos(playerid, -31.8093,1815.1261,-35.9791);
		SetPlayerFacingAngle(playerid, 267.0909);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodLiftMeriya) 
	{
		if(PI[playerid][pMember] != 1) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Правительства");
	    SetPlayerVirtualWorld(playerid, 13);
	    SetPlayerInterior(playerid, 13);
	    SetPlayerPos(playerid, -35.3435,1814.9761,-35.9791);
		SetPlayerFacingAngle(playerid, 269.7230);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodLiftMeriya) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1907.5306,-2233.1201,11.2457);
		SetPlayerFacingAngle(playerid, 178.2872);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodKaznaPickup) 
	{
		if(PI[playerid][pMember] == 1) 
		{
			if(PI[playerid][pRang] == 10) 
			{
			    SetPlayerVirtualWorld(playerid, 13);
			    SetPlayerInterior(playerid, 13);
			    SetPlayerPos(playerid, -1359.5652,1240.2517,2102.4299);
				SetPlayerFacingAngle(playerid, 268.3569);
				SetCameraBehindPlayer(playerid);
				Freeze(playerid);
			}
		}
		else return SCM(playerid, COLOR_GREY, !"В это помещение может войти только Губернатор");
		return 1;
	}
	if(pickupid== VihodKaznaPickup) 
	{
	    SetPlayerVirtualWorld(playerid, 13);
	    SetPlayerInterior(playerid, 13);
	    SetPlayerPos(playerid, 1149.9795,2565.3928,1112.4800);
		SetPlayerFacingAngle(playerid, 271.4862);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == Kazna_GiveMoney) 
	{
		if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, "Казна города доступна лидеру организаций и его заместителям");
		ShowPlayerDialog(playerid, 3456, DIALOG_STYLE_MSGBOX, !"{ee3366}Казна", "{FFFFFF}Вы можете взять 5000 рублей из общей казны.\nОбратите внимание на то, что Вам разрешено брать лишь 5000 рублей в час", "Выбрать", "Закрыть");
	}
	if(pickupid == VhodArmy1) 
	{
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 2491.6360, 212.7043, 1502.4700);
		SetPlayerFacingAngle(playerid, 359.0);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodArmy2) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -457.1503,-1493.2516,41.0700);
		SetPlayerFacingAngle(playerid, 139.1754);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodArmyKazarmy) {
        if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"Вход в казармы доступен только военным");
	    SetPlayerVirtualWorld(playerid, -5);
	    SetPlayerInterior(playerid, -5);
	    SetPlayerPos(playerid, 742.7545,1510.1522,2002.1899);
		SetPlayerFacingAngle(playerid, 0.8219);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodArmyKazarmy) 
	{
		if(PI[playerid][pHospital] == 1) return SCM(playerid, COLOR_GREY, !"Вы должны пройти курс восстановления");
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -2586.5718,315.1530,12.2297);
		SetPlayerFacingAngle(playerid, 0.4595);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid  == VhodArmyStolovaya) 
	{
		if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"Вход в столовую доступен только военным");
	    SetPlayerVirtualWorld(playerid, -6);
	    SetPlayerInterior(playerid, -6);
	    SetPlayerPos(playerid, -2434.6191,1808.5900,2053.4800);
		SetPlayerFacingAngle(playerid, 180.2651);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodArmyStolovaya) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -2563.5996,356.2647,12.2297);
		SetPlayerFacingAngle(playerid, 89.4610);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vhodtirkavkaz)
	{
	    SetPlayerVirtualWorld(playerid, -5);
	    SetPlayerInterior(playerid, -5);
	    SetPlayerPos(playerid, -146.5389,1816.7775,-5.9800);
		SetPlayerFacingAngle(playerid, 181.4917);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vihodtirkavkaz) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -358.2168,-1182.2168,41.0009);
		SetPlayerFacingAngle(playerid, 144.0298);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vhodtirgopota) {
	    SetPlayerVirtualWorld(playerid, -4);
	    SetPlayerInterior(playerid, -4);
	    SetPlayerPos(playerid, -146.5389,1816.7775,-5.9800);
		SetPlayerFacingAngle(playerid, 181.4917);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vihodtirgopota) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2251.6357,-2595.9426,21.9417);
		SetPlayerFacingAngle(playerid, 91.4771);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vhodtirskinhed) {
	    SetPlayerVirtualWorld(playerid, -3);
	    SetPlayerInterior(playerid, -3);
	    SetPlayerPos(playerid, -146.5389,1816.7775,-5.9800);
		SetPlayerFacingAngle(playerid, 181.4917);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vihodtirskinhed) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1401.2567,2396.5078,13.3801);
		SetPlayerFacingAngle(playerid, 176.5042);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vhodtirvch) 
	{
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 3);
	    SetPlayerPos(playerid, -146.5389,1816.7775,-5.9800);
		SetPlayerFacingAngle(playerid, 181.4917);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vihodtirvch) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,-2637.2041,312.9039,11.0944);
		SetPlayerFacingAngle(playerid, 92.3226);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vhodtirpravo) {
	    SetPlayerVirtualWorld(playerid, -1);
	    SetPlayerInterior(playerid, -1);
	    SetPlayerPos(playerid, -146.5389,1816.7775,-5.9800);
		SetPlayerFacingAngle(playerid, 181.4917);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == 	vihodtirpravo) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1908.1782,-2205.6362,11.2457);
		SetPlayerFacingAngle(playerid, 0.7915);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == EatPolice || pickupid == EatPolice1 || pickupid == ArmyStolovaya) return ShowPlayerDialog(playerid, 3898, DIALOG_STYLE_LIST, "{ee3366}Пищевой автомат", "1. Кока Кола\n2. Шоколадка сникерс\n3. Энергетик '"ENERGO"'", "Выбрать", "Закрыть");
	if(pickupid == VihodVoenkomat) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1915.7534,2302.0249,15.5697);
		SetPlayerFacingAngle(playerid, 120.3523);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == vhodbank) {
	    SetPlayerVirtualWorld(playerid, 92);
	    SetPlayerInterior(playerid, 92);
	    SetPlayerPos(playerid, 1536.0514,1811.5703,578.6213);
		SetPlayerFacingAngle(playerid, 359.6876);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == vihodbank) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1794.86,2041.26,15.87);
		SetPlayerFacingAngle(playerid, 357.97);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == kazino_vhod) {
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 2335.5183,1765.2386,-13.9100);
		SetPlayerFacingAngle(playerid, 85.7861);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == kazino_vihod) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2320.8064,-1926.4344,22.0800);
		SetPlayerFacingAngle(playerid, 358.0995);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == palata_vhod) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 2);
	    SetPlayerPos(playerid, 1326.9725,2505.1501,1002.1400);
		SetPlayerFacingAngle(playerid, 267.5599);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == palata_vihod) 
	{
		if(PI[playerid][pHospital] == 1) return SCM(playerid, COLOR_GREY, !"Вы должны пройти курс восстановления");
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -689.3057,1619.0341,1002.0200);
		SetPlayerFacingAngle(playerid, 0.1491);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == ordinatorskaya_vhod) {
  		if(PI[playerid][pMember] != 4) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником БЦРБ");
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 2);
  		SetPlayerPos(playerid, -2848.6548,2814.5430,1002.1600);
		SetPlayerFacingAngle(playerid, 269.7516);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == ordinatorskaya_vihod) {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
  		SetPlayerPos(playerid, -688.8541,1662.8464,1002.0200);
		SetPlayerFacingAngle(playerid, 180.3450);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == BCRDEnter_1)
    {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);

  		SetPlayerPos(playerid, -682.8159,1632.3666,1002.0200);
		SetPlayerFacingAngle(playerid, 88.3299);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
   	if(pickupid == BCRDExit || pickupid == BCRDExit1)
    {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);

  		SetPlayerPos(playerid, 2106.4307,1821.9447,12.2925);
		SetPlayerFacingAngle(playerid, 89.1651);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
    if(pickupid == shahtavhod)
    {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);

  		SetPlayerPos(playerid, 2341.5740,-1457.6053,1137.4415);
		SetPlayerFacingAngle(playerid, 92.2597);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
   	if(pickupid == shahtavihod)
    {
		if(PI[playerid][pTempJob] == 2) return SendClientMessage(playerid, COLOR_GREY, !"Для начала закончите рабочий день");
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);

  		SetPlayerPos(playerid, 2784.9275,2708.0662,16.7200);
		SetPlayerFacingAngle(playerid, 190.025);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
   	if(pickupid == BCRDExit1)
    {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);

  		SetPlayerPos(playerid, 2107.490722,1820.998901,12.220000);
		SetPlayerFacingAngle(playerid, 89.012710);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
    if(pickupid == opgintvhod_offklub) {
        if(PI[playerid][pMember] != 7) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Кавказ");
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    
  		SetPlayerPos(playerid, -2126.8423,2391.8218,1501.8101);
		SetPlayerFacingAngle(playerid, 358.7969);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		return Freeze(playerid);
    }
  	if(pickupid == opgintvihod_offklub) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, -367.1523,-1215.7554,41.07);
		SetPlayerFacingAngle(playerid, 142.0374);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvhod_gopota) {
    	if(PI[playerid][pMember] != 6) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Гопота");
	    SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerInterior(playerid, 2);
  		SetPlayerPos(playerid, -2126.8423,2391.8218,1501.8101);
		SetPlayerFacingAngle(playerid, 358.7969);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvihod_gopota) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, 2216.0371,-2594.6599,21.9600);
		SetPlayerFacingAngle(playerid, 357.6554);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvhod_skinhead) 
	{
    	if(PI[playerid][pMember] != 5) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Скинхедов");
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 3);
  		SetPlayerPos(playerid, -2126.8423,2391.8218,1501.8101);
		SetPlayerFacingAngle(playerid, 358.7969);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvihod_skinhead) 
	{
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, 2318.6675,1767.7380,1.1716);
		SetPlayerFacingAngle(playerid, 272.9109);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == skinhead_sklad && PI[playerid][pMember] == 5) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{ee3366}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
	if(pickupid == gopota_sklad && PI[playerid][pMember] == 6) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{ee3366}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
	if(pickupid == kavkaz_sklad && PI[playerid][pMember] == 7) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{ee3366}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
    if(pickupid == vxoddchmvd0) {
		if(PI[playerid][pMember] != 3) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Полиции");
        SetPlayerVirtualWorld(playerid, -1);
        SetPlayerInterior(playerid, -1);
        SetPlayerPos(playerid, 137.5166,1895.2310,-31.9697);
        SetPlayerFacingAngle(playerid, 169.2762);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == vxoddchmvd1) {
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 0);
        SetPlayerPos(playerid, 2418.7007,-1809.6227,21.9341);
        SetPlayerFacingAngle(playerid, 1.3724);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == VhodSportzalPolice) {
		if(PI[playerid][pMember] != 3) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Полиции");
        SetPlayerVirtualWorld(playerid, -1);
        SetPlayerInterior(playerid, -1);
        SetPlayerPos(playerid, 140.6302,1981.2865,-16.3778);
        SetPlayerFacingAngle(playerid, 267.6423);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == VihodSportzalPolice) {
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 0);
        SetPlayerPos(playerid, 2384.8337,-1799.6332,21.9341);
        SetPlayerFacingAngle(playerid, 173.3940);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
	if(pickupid == MeriyaGarageVhod) {
	    if(PI[playerid][pMember] != 1) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Правительство");
 		SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == MeriyaGarageVihod) {
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1874.0914,-2211.9246,11.2510);
		SetPlayerFacingAngle(playerid, 179.2040);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == MagazNaVh ) 
	{
	    if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Войсковой Части");
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -1412.4888,383.8317,419.1073);
		SetPlayerFacingAngle(playerid, 357.1213);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodMagazNaVh) 
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -2606.4041,356.3741,12.2297);
		SetPlayerFacingAngle(playerid, 268.8409);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == Pravo_givegun_pickup) 
	{
		if(PI[playerid][pMember] != 1) return SCM(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, dialog_GIVEGUNPRAVO, DIALOG_STYLE_LIST, "{ee3366}Получение оружия", "1. Desert Eagle\n2. Тайзер\n3. AKС-74У", "Получить", "Отмена");
	}
	if(pickupid == ArmyShop) 
	{
		if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"У Вас нет доступа к армейскому магазину");
		ShowArmyShop(playerid);
	}
	if(pickupid == MVDGarageVhod) {
	    if(PI[playerid][pMember] != 3) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником Полиции");
 		SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == MVDGarageVihod) {
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2438.2107,-1799.6512,21.9369);
		SetPlayerFacingAngle(playerid, 88.3939);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == CRBGarageVhod)
	{
	    if(PI[playerid][pMember] != 4) return SCM(playerid, COLOR_GREY, !"Вы не являетесь сотрудником БЦРБ");
 		SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == CRBGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2141.0293,1806.8695,12.2200);
		SetPlayerFacingAngle(playerid, 181.3150);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VchGarageVhod)
	{
	    if(PI[playerid][pMember] != 8)
        if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"Вы не являетесь Сотрудником Воинской части");
 		SetPlayerVirtualWorld(playerid, 4);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VchGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -2754.8423,351.2632,10.9850);
		SetPlayerFacingAngle(playerid, 269.9922);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
    if(pickupid == GopotaGarageVhod)
    {
	    if(PI[playerid][pMember] != 6) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Гопота");
 		SetPlayerVirtualWorld(playerid, 5);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == GopotaGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2241.0183,-2585.5557,21.9600);
		SetPlayerFacingAngle(playerid, 91.1827);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
    if(pickupid == SkinheadGarageVhod)
    {
	    if(PI[playerid][pMember] != 5) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Скинхеды");
 		SetPlayerVirtualWorld(playerid, 6);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == SkinheadGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2328.1133,1780.2886,1.1716);
		SetPlayerFacingAngle(playerid, 184.8406);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == OffClubGarageVhod)
	{
	    if(PI[playerid][pMember] != 7) return SCM(playerid, COLOR_GREY, !"Вы не являетесь участником ОПГ Кавказцы");
 		SetPlayerVirtualWorld(playerid, 7);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -166.5044,627.3314,-50.1706);
		SetPlayerFacingAngle(playerid, 271.0976);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == OffClubGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,  -362.8336,-1226.7737,41.1000);
		SetPlayerFacingAngle(playerid, 50.1508);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	// МВД #2
    if(pickupid == VhodUchastokMVD0) {
        SetPlayerVirtualWorld(playerid, -1);
        SetPlayerInterior(playerid, -1);
        SetPlayerPos(playerid, 126.3267,1853.6423,-31.9775);
        SetPlayerFacingAngle(playerid, 353.6208);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == VhodUchastokMVD1) {
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 0);
        SetPlayerPos(playerid, 2401.9204,-1846.5687,21.9369);
        SetPlayerFacingAngle(playerid, 175.3953);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
	if(pickupid == MVD_givegun_pickup) 
	{
		if(PI[playerid][pMember] != 3) return SCM(playerid, COLOR_GREY, !"У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, dialog_GIVEGUNMVD, DIALOG_STYLE_LIST, "{ee3366}Государственный склад", "1. Взять аптечки\n2. Взять оружие", "Взять", "Закрыть");
	}
	if(pickupid == vch_givegun_pickup) 
	{
		if(PI[playerid][pMember] != 2) return SCM(playerid, COLOR_GREY, !"У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, 7621, DIALOG_STYLE_LIST, "{ee3366}Оружейный склад", "1. Лопата\t\t1+\t1\n2. Бронижелет\t\t2+\t-\n3. Desert Eagle\t\t1+\t35\n4. AKC-74Y\t\t1+\t90\n5. AK-47\t\t2+\t90\n6. Country Rifle\t\t3+\t10", "Взять", "Закрыть");
	}
    if(pickupid == PickupAutoSchool) 
	{
	    if(PI[playerid][pDriveLicense] == 1) return SCM(playerid, COLOR_GREY, !"У Вас уже есть водительские права");
		if(PI[playerid][data_ASH_TEST] == 1) return SCM(playerid, COLOR_GREY, !"Вы уже проходите тест");
        ShowPlayerDialog(playerid, dialog_ASH_TEST, DIALOG_STYLE_MSGBOX, !"{ee3366}Экзамен по вождению", "Вы желаете получить водительские права?\nСтоимость экзамена: 5000 рублей", "Начать", "Отмена");
		return 1;
	}
	return 1;
}
public OnQueryError(errorid, error[], callback[], query[], connectionHandle) return print(error);

callback: CBugFreezeOver(playerid) {
	TogglePlayerControllable(playerid, true);
	pCBugging[playerid] = false;
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row) 
{
	if(console_Debbug == 1) printf("%s OnPlayerSelectedMenuRow", PI[playerid][pName]);
    if(GetPlayerMenu(playerid) == SelectSkin) 
	{
   		switch(row) 
		{
      		case 0: 
			{
      		    if(PI[playerid][pSex] == 1) 
				{
					PI[playerid][pChangeSkin]++;
		 			if(PI[playerid][pChangeSkin] >= 5) PI[playerid][pChangeSkin] = 0;
					SetPlayerSkinAC(playerid, PedMale[PI[playerid][pChangeSkin]]);
		 		}
		  		else 
				{
					PI[playerid][pChangeSkin]++;
		 			if(PI[playerid][pChangeSkin] >= 6) PI[playerid][pChangeSkin] = 0;
					SetPlayerSkinAC(playerid, PedFeMale[PI[playerid][pChangeSkin]]);
		 		}
                ShowMenuForPlayer(SelectSkin, playerid);
            }
            case 1: 
			{
            	if(PI[playerid][pSex] == 1) 
				{
		  			PI[playerid][pChangeSkin]--;
		  			if(PI[playerid][pChangeSkin] <= -1) PI[playerid][pChangeSkin] = 4;
		            SetPlayerSkinAC(playerid, PedMale[PI[playerid][pChangeSkin]]);
				}
				else 
				{
		    		PI[playerid][pChangeSkin]--;
			     	if(PI[playerid][pChangeSkin] <= -1) PI[playerid][pChangeSkin] = 5;
			 		SetPlayerSkinAC(playerid, PedFeMale[PI[playerid][pChangeSkin]]);
		      	}
                ShowMenuForPlayer(SelectSkin, playerid);
            }
        }
    }
	return 1;
}
public OnPlayerExitedMenu(playerid) return 1;
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) return 1;
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) 
{
	mine_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
	nosov_OnPlayerKeyStateChange(playerid, newkeys);

	if(PRESSED(KEY_WALK)) 
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
		{
		   new veh = GetPlayerVehicleID(playerid);
		   new engine1,lights1,alarm1,doors_text1,bonnet1,boot1,objective1;
		   GetVehicleParamsEx(veh,engine1,lights1,alarm1,doors_text1,bonnet1,boot1,objective1);

		   if(CarInfo[veh][cLamp] == 0) 
		   {
		      SetVehicleParamsEx(veh,engine1,VEHICLE_PARAMS_ON,alarm1,doors_text1,bonnet1,boot1,objective1);
		      CarInfo[veh][cLamp] = 1;
		   }
		   else {
		      SetVehicleParamsEx(veh,engine1,VEHICLE_PARAMS_OFF,alarm1,doors_text1,bonnet1,boot1,objective1);
		      CarInfo[veh][cLamp] = 0;
		   }
		}
	    for(new h = 0; h < TotalHouses; h++)
		{
	    	if(PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ]) && GetPlayerVirtualWorld(playerid) == HOUSE_DATA[h][data_ID]) 
			{
	            ShowPlayerDialog(playerid, dialog_EXIT_HOUSE, DIALOG_STYLE_MSGBOX, !"{ee3366}Дом", "{FFFFFF}Вы желаете покинуть дом?", "Выйти", "Отмена");
	            return 1;
	        }
		}
		for(new k = 0; k < 6; k++)
		{
		    new kv = GetPVarInt(playerid, "padik");
		    if(PlayerToPoint(1.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]) && GetPlayerVirtualWorld(playerid) == KV_DATA[kv][data_ID])
			{
			    if(KV_DATA[kv][data_LOCK][k] == 1) return cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Эта квартира закрыта"));
	            SetPlayerPosAC(playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]);
				SetPlayerFacingAngle(playerid, 0.0);
				SetPlayerInterior(playerid, k+1);
				SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]+k);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
	            return true;
			}
			else if(PlayerToPoint(1.0, playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]) && GetPlayerVirtualWorld(playerid) == KV_DATA[kv][data_ID]+k)
			{
				SetPlayerPosAC(playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]);
				SetPlayerFacingAngle(playerid, 0.0);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				return true;
			}
		}
	}
 	if ((newkeys & KEY_AIM) && (newkeys & KEY_WALK))
	{
		if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)
		{
	  		ShowTargetMenu(playerid);
		}
	}
	if(newkeys == 1 || PRESSED(1)) {
        new Weap[2];
        GetPlayerWeaponData(playerid, 4, Weap[0], Weap[1]);
        SetPlayerArmedWeapon(playerid, Weap[0]);
    }
    if(IsAtBankomat(playerid,0.5)) 
	{
		if(GetPVarInt(playerid,"kdpickupbank") > gettime()) return 1;
		SetPVarInt(playerid,"kdpickupbank",gettime() + 3);
		ShowPlayerDialogf(playerid, 8999, DIALOG_STYLE_LIST, !"{ee3366}Банкомат", !"Далее", !"Закрыть", "1. Банковская карта {FFFF99}(№ %d)\n2. Оплата имущества\n3. Медицинские услуги", PI[playerid][pID]);
	}
    if(!pCBugging[playerid] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT || !pCBugging[playerid] && GetPlayerState(playerid) == 1) {
		if(PRESSED(KEY_FIRE)) {
			switch(GetPlayerWeapon(playerid)) {
				case WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SNIPER: {
					ptsLastFiredWeapon[playerid] = gettime();
				}
			}
		}
		else if(PRESSED(KEY_CROUCH)) 
		{
			if((gettime() - ptsLastFiredWeapon[playerid]) < 1) 
			{
				TogglePlayerControllable(playerid, false);
				pCBugging[playerid] = true;
				KillTimer(ptmCBugFreezeOver[playerid]);  
				ptmCBugFreezeOver[playerid] = SetTimerEx("CBugFreezeOver", 950, false, "i", playerid);
			}
		}
	}
    if(PRESSED(KEY_SECONDARY_ATTACK)) 
	{
	    if(GetPVarInt(playerid, "select_skin") == 1) ShowMenuForPlayer(SelectSkin,playerid);
	    for(new i = 0; i < sizeof(casino_pos); i++) {
	 	    if(PlayerToPoint(0.2, playerid, casino_pos[i][0], casino_pos[i][1], casino_pos[i][2]) && PI[playerid][data_OPENCASINO] == false) {
			    new sd[25], st[25];
				casino_stavka[playerid] = 0;
				casino_update[playerid] = 0;
    			format(sd, sizeof(sd), "%d RUB", GetPlayerMoneyID(playerid));
    			format(st, sizeof(st), "%d RUB", casino_stavka[playerid]);
    			PlayerTextDrawSetString(playerid,casino_money[playerid][0],sd);
    			PlayerTextDrawSetString(playerid,casino_money[playerid][1],st);
    			PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
				PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
				PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
				PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
			    ShowCasinoGame(playerid);
			    SCM(playerid, COLOR_TOMATO, "Для выхода нажмите 'ESC'");
			    return 1;
			}
 		}
	}
    if(PRESSED(16)) 
	{
	    if(GetPVarInt(playerid, "UseAnim") == 1) 
		{
		    ClearAnim(playerid);
		    DeletePVar(playerid, "UseAnim");
		    return 1;
		}
	}
    if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
    || ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
    || ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
    && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) 
	{
    	PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
	}
	if(newkeys == 262144) 
	{
        if(PlayerToPoint(3.0, playerid, 2132.8718,1790.2057,12.0000) || PlayerToPoint(3.0, playerid, 1994.8816,976.9962,15.4012) || PlayerToPoint(3.0, playerid, 1789.6417,2493.6338,15.9816)) return ShowPlayerDialog(playerid, 3898, DIALOG_STYLE_LIST, "{ee3366}Торговец дед", "1. Кока Кола\n2. Шоколадка сникерс\n3. Энергетик '"ENERGO"'", "Выбрать", "Закрыть");
	}
	if(newkeys == 1024 && !IsPlayerInAnyVehicle(playerid) || newkeys == 2 && IsPlayerInAnyVehicle(playerid))
	{
		if(PI[playerid][pMember] == 4)
		{
			if(IsPlayerInRangeOfPoint( playerid, 3.0, 2121.3992,1794.0708,12.2849)) ///нажатие
			{
				if(GateMove == 0)
				{
					MoveObject(Gate, 2121.8877, 1804.1204, 12.8168, 2.5); ///открытие
					GateMove = 1;
				}
				else if(GateMove == 1)
				{
					MoveObject(Gate, 2121.8877, 1798.9204, 12.8168, 2.5,  0.00, 0.00, 90.12); ///закрытие
					GateMove = 0;
					BolkaVorotaTimer = SetTimer("BolkaVorotaClose", 7000, 0);
				}
			}
		}
	}
	if(newkeys == 1024 && !IsPlayerInAnyVehicle(playerid) || newkeys == 2 && IsPlayerInAnyVehicle(playerid))
	{
		if(PI[playerid][pMember] == 1)
		{
			if(IsPlayerInRangeOfPoint( playerid, 3.0, 1877.44, -2229.77, 11.25))///радиус нажатия
			{
				if(GatePravoMove == 0)
				{
					MoveObject(GatePravo, 1880.8799, -2228.7432, 11.9105, 2.5);//открытие
					GateMove = 1;
				}
				else if(GatePravoMove == 1)
				{
					MoveObject(GatePravo, 1872.5520, -2228.8486, 11.9105, 2.5,  0.00, 0.00, 0.00);///закрытие
					GatePravoMove = 0;
					PravoVorotaTimer = SetTimer("PravoVorotaClose", 7000, 0);
				}
			}
		}
	}
	if(newkeys == 2 && IsPlayerInAnyVehicle(playerid)) 
	{
		new carid = GetPlayerVehicleID(playerid);
		if(PI[playerid][pMember] == 1) 
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 1789.5536,2078.9685,15.8538)) 
			{
				if(carid == gov_car[0] || carid == gov_car[1] || carid == gov_car[2] || carid == gov_car[3] || carid == gov_car[4] ||
				carid == gov_car[5] || carid == gov_car[6] || carid == gov_car[7]) 
				{
					new vehicle = GetPlayerVehicleID(playerid);
	           		SetVehiclePos(vehicle, -164.6677,651.2881,-50.1762);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 1);
		 	        SetVehicleZAngle(vehicle, 181.0058);
		 	        SetPlayerPosAC(playerid, -164.6677,651.2881,-50.1762);
	         		SetPlayerVirtualWorld(playerid, 1);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706)) 
			{
				new vehicle = GetPlayerVehicleID(playerid);
				SetVehiclePos(vehicle, 1870.2343,-2214.6035,10.7737);
				LinkVehicleToInterior(vehicle, 0);
				SetVehicleVirtualWorld(vehicle, 0);
				SetVehicleZAngle(vehicle, 179.7689);
				SetPlayerPosAC(playerid, 1870.2343,-2214.6035,10.7737);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 2) 
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, -2754.5576,351.0330,10.5823)) 
			{
		 	    if(carid == army_car[0] || carid == army_car[1] ||
				carid == army_car[2] || carid == army_car[3] || carid == army_car[4] || carid == army_car[5] ||
				carid == army_car[6] || carid == army_car[7]) 
				{
					new vehicle = GetPlayerVehicleID(playerid);
	           		SetVehiclePos(vehicle, -164.6677,651.2881,-50.1762+2);
		 	        SetVehicleVirtualWorld(vehicle, 4);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleZAngle(vehicle, 181.0058);
	           		SetPlayerPosAC(playerid, -164.6677,651.2881,-50.1762+2);
	         		SetPlayerVirtualWorld(playerid, 4);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706))
			{
				new vehicle = GetPlayerVehicleID(playerid);
				SetVehiclePos(vehicle, -2748.1858,342.4038,11.5815);
				LinkVehicleToInterior(vehicle, 0);
				SetVehicleVirtualWorld(vehicle, 0);
				SetVehicleZAngle(vehicle, 272.7158);
				SetPlayerPosAC(playerid, 1-2748.1858,342.4038,11.5815);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 3) 
		{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -264.6449,-1565.3790,41.1352)) 
			{
				if(carid == police_car[0] || carid == police_car[1] ||carid == police_car[2] ||
				carid == police_car[3] || carid == police_car[4] || carid == police_car[5] || carid == police_car[6] ||
				carid == police_car[7]) 
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, -164.6677,651.2881,-50.1762);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 2);
		 	        SetVehicleZAngle(vehicle, 181.0058);
		 	        SetPlayerPosAC(playerid, -164.6677,651.2881,-50.1762);
	         		SetPlayerVirtualWorld(playerid, 2);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706)) 
			{
				new vehicle = GetPlayerVehicleID(playerid);
	 	        SetVehiclePos(vehicle, 2436.7822,-1794.5037,21.9369);
	 	        LinkVehicleToInterior(vehicle, 0);
	 	        SetVehicleVirtualWorld(vehicle, 0);
	 	        SetVehicleZAngle(vehicle, 90.7041);
	 	        SetPlayerPosAC(playerid, 2436.7822,-1794.5037,21.9369);
         		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 4) 
		{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 2148.02,1808.58,12.22)) 
			{
				if(carid == hospital_car[0] || carid == hospital_car[1] || carid == hospital_car[2] || carid == hospital_car[3] ||
				carid == hospital_car[4] || carid == hospital_car[5] || carid == hospital_car[6] || carid == hospital_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, -164.6677,651.2881,-50.1762);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 3);
		 	        SetVehicleZAngle(vehicle, 181.0058);
		 	        SetPlayerPosAC(playerid, -164.6677,651.2881,-50.1762);
	         		SetPlayerVirtualWorld(playerid, 3);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706)) 
			{
				new vehicle = GetPlayerVehicleID(playerid);
	 	        SetVehiclePos(vehicle, 2147.23,1804.75,12.29);
	 	        LinkVehicleToInterior(vehicle, 0);
	 	        SetVehicleVirtualWorld(vehicle, 0);
	 	        SetVehicleZAngle(vehicle, 176.13);
	 	        SetPlayerPosAC(playerid, 2147.23,1804.75,12.29);
         		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 5)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 2332.3850,1780.7386,0.7965))
	 	    {
				if(carid == skinhead_car[0] || carid == skinhead_car[1] || carid == skinhead_car[2] || carid == skinhead_car[3]
				|| carid == skinhead_car[4] || carid == skinhead_car[5] || carid == skinhead_car[6] || carid == skinhead_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 6);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 6);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 2324.2822,1776.3906,0.7965);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 184.6171);

		 	        SetPlayerPosAC(playerid, 2324.2822,1776.3906,0.7965);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 6)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 1369.5155,1715.0671,3.6247))
	 	    {
		 	    if(carid == gopota_car[0] || carid == gopota_car[1] || carid == gopota_car[2] || carid == gopota_car[3]
				|| carid == gopota_car[4] || carid == gopota_car[5] || carid == gopota_car[6] || carid == gopota_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 5);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 5);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle,2238.1350,-2589.9907,21.9561);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 87.3234);

		 	        SetPlayerPosAC(playerid, 2238.1350,-2589.9907,21.9561);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 7)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -562.5096,-1392.1708,41.1858))
	 	    {
		 	    if(carid == kavkaz_car[0] || carid == kavkaz_car[1] || carid == kavkaz_car[2] || carid == kavkaz_car[3]
				|| carid == kavkaz_car[4] || carid == kavkaz_car[5] || carid == kavkaz_car[6] || carid == kavkaz_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 7);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 7);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -165.3361,625.0273,-50.1706))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, -365.0266,-1222.8527,41.0954);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 53.2114);

		 	        SetPlayerPosAC(playerid, -365.0266,-1222.8527,41.0954);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][pMember] == 2) {
	 	    if(IsPlayerInRangeOfPoint(playerid, 15.0, 1891.87, 1724.55, 16.49)) {
	 	        MoveObject(ArmyVorota, 1892.07, 1714.18, 15.69, 2.5, 0.00, 0.00, 92.00);
	 	        MoveObject(ArmyVorota1,1891.89, 1728.66, 15.69, 2.5, 0.00, 0.00, 92.00);
	 	        ArmyVorotaTimer = SetTimer("ArmyVorotaClose", 10000, 0);
			}

	 	}
		switch(PI[playerid][pMember]) {
			case 5:
		    if(IsPlayerInRangeOfPoint(playerid, 15.0, 1447.3074, 2368.4189, 13.3830)) {
		        MoveObject(SkinPost,1447.3074, 2368.4189, 13.3830, 1, 0.00, 0.00, 90.00);
		        SkinPostTimer = SetTimer ("SkinPostClose", 6500, 0);
			}
		}
		switch(PI[playerid][pMember]) {
			case 6:
		    if(IsPlayerInRangeOfPoint(playerid, 15.0, 2217.1287,-2578.8123,21.9700)) {
		        MoveObject(GopotaPost, 2221.2864, -2578.8955, 21.5631, 1, 0.00, 0.00, 0.00);
		        GopotaPostTimer = SetTimer ("GopotaPostClose", 6500, 0);
			}
		}
		switch(PI[playerid][pMember]) {
			case 7:
		    if(IsPlayerInRangeOfPoint(playerid, 15.0, -384.1335, -1219.9216, 40.8303)) {
		        MoveObject(KavkazPost, -384.1335, -1219.9216, 40.8303, 1, 0.00, 0.00, -35.88);
		        KavkazPostTimer = SetTimer ("KavkazPostClose", 6500, 0);
			}
		}
	}
	if((newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK))) 
	{
	    if(PlayerToKvadrat(playerid,  1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
		PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
		PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
		PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
		PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
		PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) 
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) 
			{
		        if(PI[playerid][pMember] != 3) 
				{
	   				TogglePlayerControllable(playerid, false);
	 		 		SetTimerEx("UnfreezePlayer", 1300, false, "i", playerid);
					ClearAnimations(playerid);
					PlayerStayInGreenZone(playerid);
				}
			}
		}
		if(GetPlayerInterior(playerid) != 0) 
		{
  			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) 
			{
      			if(PI[playerid][pMember] != 3) 
				{
					TogglePlayerControllable(playerid, false);
			 		SetTimerEx("UnfreezePlayer", 1300, false, "i", playerid);
					ClearAnimations(playerid);
					PlayerStayInGreenZone(playerid);
				}
			}
		}
 	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
	{
        new carid = GetPlayerVehicleID(playerid);
        if(!IsAVelik(carid)) 
		{
			if(PRESSED(4)) 
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
				{
					switch(CarInfo[carid][cLamp]) 
					{
						case 0: {
							GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
							SetVehicleParamsEx(carid,engine,true,alarm,doors_text,bonnet,boot,objective);
							CarInfo[carid][cLamp] = 1;
						}
						case 1: 
						{
							GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
							SetVehicleParamsEx(carid,engine,false,alarm,doors_text,bonnet,boot,objective);
							CarInfo[carid][cLamp] = 0;
						}
					}
				}
				return 1;
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
	{
	    if(PlayerToPoint(10.0, playerid,  37.8415,305.3781,12.0264))
	    {
			if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данное действие Вам недоступно");
			if(police_barrier_status[0] == GATES_CLOSED) 
			{
			    PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
				MoveObject(police_barrier[0], 39.51, 308.39, 11.85+0.0004, 0.0004, 0.00, 0.00, 67.30);
	            police_barrier_status[0] = GATES_OPEN;
            }
            else 
			{
                PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
	            police_barrier_status[0] = GATES_CLOSED;
	            MoveObject(police_barrier[0], 39.51, 308.39, 11.85-0.0004, 0.0004, 0.00, 270.00, 67.30);
            }
			return 1;
		}
		else if(PlayerToPoint(10.0, playerid,  214.54, 1503.96, 11.75)) 
		{
			if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данное действие Вам недоступно");
			if(police_barrier_status[1] == GATES_CLOSED) 
			{
			    PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
				MoveObject(police_barrier[1], 214.54, 1503.96, 11.75+0.0004, 0.0004, 0.00, 0.00, 78.00);
	            police_barrier_status[1] = GATES_OPEN;
            }
            else 
			{
                PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
	            police_barrier_status[1] = GATES_CLOSED;
	            MoveObject(police_barrier[1], 214.54, 1503.96, 11.75-0.0004, 0.0004, 0.00, 270.00, 78.00);
            }
			return 1;
		}
	}
	return 1;
}
callback: VchSkladGateClose() 
{
    MoveObject(VchSkladGate, 1568.80, 1809.53, 16.25, 2.5, 0.0, 0.0, 90.0);
    KillTimer(VchSkladGateTimer);
    return 1;
}
public OnRconLoginAttempt(ip[], password[], success) 
{
    if(success || !success) 
	{
    	new YouIP[16];
     	for(new i = 0; i <= MAX_PLAYERS; i++) 
		{
       		if(IsPlayerConnected(i)) 
			{
     			GetPlayerIp(i, YouIP, sizeof(YouIP));
     			if(!strcmp(ip, YouIP, true)) 
				{
                   printf("[INFO] %s attemp is RCON",ip);
				   SendAdminsMessagef(COLOR_GREY, "<Warning> Игрок %s[%d] попытался войти в RCON и был заблокирован", getName(i), i);
                   Kick(i);
                   return 1;
               }
           }
       }
	}
	return 1;
}
callback: NoRoof(playerid) 
{
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID ) 
	{
        new Float:speed = GetVehicleSpeed(carid);
        new cm=GetVehicleModel(carid);
        switch(cm) 
		{
            case 430,446,452,453,454,472,473,484,493,595, 548:{return 1;}
            default:{}
        }
        if(speed > 5) 
		{
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            SetPlayerPos(playerid, slx+2.5, sly+2.5, slz+0.5);
            ApplyAnimation(playerid, "ped", "BIKE_fallR", 4.0, 0, 1, 0, 0, 0,0);
            SetTimerEx("anim2", 1100, 0, "d", playerid);
        }
    }
    return 1;
}
callback: anim2(playerid) return ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
public OnPlayerUpdate(playerid) 
{
	if(PI[playerid][data_MASK_M] != 0) SetPlayerColor(playerid, 0x33333300);
	else 
	{
 		new M = PI[playerid][pMember];
	    SetPlayerColor(playerid, PLAYER_COLOR_TEAM[M]);
	}
	if(PlayerToPoint(4.0, playerid, 1799.7273,2506.5293,15.8725) && GetPVarInt(playerid, "HintHutton") != 1)
	{
		SetPVarInt(playerid, "HintHutton", 1);
		cef_emit_event(playerid, "show-button", CEFSTR("LALT"), CEFSTR("ПОГОВОРИТЬ С НИКИТОЙ"));
	}
	if(!PlayerToPoint(4.0, playerid, 1799.7273,2506.5293,15.8725) && GetPVarInt(playerid, "HintHutton") == 1) 
	{
		cef_emit_event(playerid, "hide-button");
		SetPVarInt(playerid, "HintHutton", 0);
	}
	new PlayerInt = GetPlayerInterior(playerid);
	if(PlayerInt != 0) 
	{
	    SetPlayerWeather(playerid, 1);
	    SetPlayerTime(playerid, 12, 0);
	}
	else 
	{
		new hour, minute, second;
  		gettime(hour, minute, second);
	    SetPlayerWeather(playerid, WeatherServer);
	    SetPlayerTime(playerid, hour, 0);
	}
	NoRoof(playerid);
	if(pPickupID[playerid]) 
	{
        new pickupid = pPickupID[playerid];
        if(!IsValidDynamicPickup(pickupid)) pPickupID[playerid] = 0;
        else 
		{
            new Float:pos_x, Float:pos_y, Float:pos_z;
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_X, pos_x);
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Y, pos_y);
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Z, pos_z);
            if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos_x, pos_y, pos_z)) pPickupID[playerid] = 0;
        }
    }
	if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) 
	{
		new Float:vec[3];
		GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
		new bool:possible_crasher = false;
		for (new i = 0; !possible_crasher && i < sizeof(vec); i++)
		if (floatabs(vec[i]) > 10.0)
		possible_crasher = true;
		if (possible_crasher) 
		{ 
			if(console_Debbug == 1) printf("[server_log] %s is. Crasher.",PI[playerid][pLoginIP]);
			return 1;
		}
	}
	if(PI[playerid][data_AFK] > 60)
	{
		AutoKickCapture(playerid);
	}
    if(PI[playerid][data_AFK] > 1) SetPlayerChatBubble(playerid, "", -1, 20.0, 1100);//, ReloadCef(playerid);
    PI[playerid][data_AFK] = -1;
	return 1;
}
forward TazerEffect(damagedid);
public TazerEffect(damagedid)
{
    TogglePlayerControllable(damagedid, 1);
    ClearAnimations(damagedid);
    return 1;
}
public OnPlayerStreamOut(playerid, forplayerid) return 1;
public OnVehicleStreamIn(vehicleid, forplayerid) return 1;
public OnVehicleStreamOut(vehicleid, forplayerid) return 1; //tp
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) 
{
	static inputtextsave[256];
	inputtextsave[0] = EOS;

	mysql_escape_string(inputtext, inputtextsave);

	for new i; i < strlen(inputtextsave); i++ do
	{
		switch inputtextsave[i] do
		{
			case 'A'..'Z', 'a'..'z', 'А'..'Я', 'а'..'я', '0'..'9', ' ', '>', '<', '(', ')', '/', '+', '-','_', '?', '!', '.', ',', '@': continue;
			default: inputtextsave[i] = ' ';
		}
	}
	
	for new i; i < strlen(inputtextsave); i ++ do
	{
		if inputtextsave[i] == '%' *then inputtextsave[i] = '#';
		else if inputtextsave[i] == '{' && inputtextsave[i+7] == '}' *then strdel(inputtextsave, i, i+8);
	}
	while(strfind(inputtext,"~k",true) != -1) // фикс краша игроков через ~k~~SWITCH_DEBUG_CAM_ON~ (GXT CODE)
	{
		strdel(inputtext, strfind(inputtext, "~k", true), strfind(inputtext,"~k", true)+2);
	}

	if(console_Debbug == 1) 
	{
		printf("[OnDialogResponse] Player: %s, Dialog: %d, Response: %d, Inputtext: %s", PI[playerid][pName], dialogid, response, inputtext);
		printf("[OnDialogResponse] Player: %s, Dialog: %d, Response: %d, Inputtextsave: %s", PI[playerid][pName], dialogid, response, inputtextsave);
	}

	mine_OnDialogResponse(playerid, dialogid, response);
	admins_OnDialogResponse(playerid, dialogid, response, listitem); 
	qeust_OnDialogResponse(playerid, dialogid, response, listitem);
	business_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);
	bl_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);
	shop_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);
	capture_OnDialogResponse(playerid, dialogid, response, listitem);
	bank_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);

	switch(dialogid) 
	{
	    case dialog_REGISTER: 
		{
	    	if(!response)  
			{
				if(console_Debbug == 1) printf("[Register]: Player: %s, dialog_REGISTER returned.", PI[playerid][pName]);
				PlayerRegistration(playerid);
			}
			if(response) 
			{
			    if(strlen(inputtextsave) == 0) 
				{
					PlayerRegistration(playerid);
					if(console_Debbug == 1)  printf("[Register]: Player: %s, dialog_REGISTER (if(strlen(inputtext) == 0)) returned.", PI[playerid][pName]);
				}
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 30) 
				{
					 if(console_Debbug == 1) printf("[Register]: Player: %s, dialog_REGISTER (< 6 > 30) returned.", PI[playerid][pName]);
					 SCM(playerid, 0xFF6347FF, !"[Внимание]: {FFFFFF}Длина пароля должна быть от 6 до 30 символов"); 
					 PlayerRegistration(playerid);
				}
        		for(new i = strlen(inputtextsave); i != 0; --i)
				switch(inputtextsave[i]) 
				{
					case 'А'..'Я', 'а'..'я', ',', '`', '=': return SCM(playerid, 0xFF6347FF, !"[Внимание]: {FFFFFF}Разрешено использовать только латинские буквы и цифры"),PlayerRegistration(playerid);
				}
				GetPlayerIp(playerid,PI[playerid][pRegIP],32);
				strmid(PI[playerid][pPassword], inputtextsave, 0, strlen(inputtextsave), 30);

				if(console_Debbug == 1)  printf("[Register]: Player: %s, he have this [pPassword - %s] [inputtext - %s] [pRegIP - %s].", PI[playerid][pName], PI[playerid][pPassword], inputtext, PI[playerid][pRegIP]);
				if(console_Debbug == 1)  printf("[Register]: Player: %s, player going to next step, dialog_EMAIL. (pAdmin: %d, pID: %d)", PI[playerid][pName], PI[playerid][pAdmin], PI[playerid][pID]);

				ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{ee3366}Почта", "\
				{FFFFFF}Введите адрес Вашей {ee3366}электронной почты{FFFFFF}\n\
				Он нужен для восстановления доступа к аккаунту\n\
				В случае его взлома или если забудете пароль\n\n\
				{ee3366}Убедитесь в правильности ввода Вашей почты", "Далее", "");
			}
		}
		case dialog_EMAIL: 
		{
            if(response || !response) 
			{
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{ee3366}Почта", "\
																											{FFFFFF}Введите адрес Вашей {ee3366}электронной почты{FFFFFF}\n\
																											Он нужен для восстановления доступа к аккаунту\n\
																											В случае его взлома или если забудете пароль\n\n\
																											{ee3366}Убедитесь в правильности ввода Вашей почты", "Далее", "");
                if(strfind(inputtext, "@", true) == -1 || strfind(inputtext, "\n", true) != -1 || strfind(inputtext, ".", true) == -1) 
				{
	 				ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{ee3366}Почта", "\
																				  {FFFFFF}Введите адрес Вашей {ee3366}электронной почты{FFFFFF}\n\
																				  Он нужен для восстановления доступа к аккаунту\n\
																				  В случае его взлома или если забудете пароль\n\n\
				    															  {ee3366}Убедитесь в правильности ввода Вашей почты", "Далее", "");
                    return true;
                }
                strmid(PI[playerid][pEmail], inputtext, 0, strlen(inputtext), 50);
				if(console_Debbug == 1)  printf("[Register]: Player: %s, player going to final step. (pEmail: %s, inputtext: %s)", PI[playerid][pName], PI[playerid][pEmail], inputtext);
                ShowPlayerDialog(playerid, dialog_SEX, DIALOG_STYLE_MSGBOX, !"{ee3366}Выбор пола", "{FFFFFF}Выберете пол вашего персонажа", "Мужской", "Женский");
            }
        }
		case 398:
		{
			if(!response) return 1;
	        new carid = ShowCar[playerid][listitem];
			
			new Premium, Float: X, Float: Y, Float: Z, Cache: result, query[140];

			mysql_format(mysql, query, sizeof query, "SELECT * FROM ownable WHERE ID='%d'", carid);
			result = mysql_query(mysql, query, true);

			if(cache_num_rows())
			{

				X = cache_get_field_content_float(0, "Pos_X", mysql);
				Y = cache_get_field_content_float(0, "Pos_Y", mysql);
				Z = cache_get_field_content_float(0, "Pos_Z", mysql);

				Premium = cache_get_field_content_int(0, "Premium", mysql);
			}
			cache_delete(result);

			if(Premium == 0) 
			{
				if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID && AccessCar[playerid][listitem] == 1) 
					return SendClientMessage(playerid, COLOR_GREY, !"Доступ к машине ограничен, купите дом или квартиру чтобы загрузить это транспортное средство.");
			}

			SetPVarInt(playerid, "LoadCar", carid);

			if(PlayerToPoint(20.0, playerid, X, Y, Z)) 
			{
				ShowPlayerDialog(playerid, 400, DIALOG_STYLE_MSGBOX, !"{ee3366}Загрузка транспорта", "{FFFFFF}Вы находитесь рядом с парковкой Вашего транспорта.\n\n{FFFF99}Хотите загрузить его?", "Далее", "Назад");
			}
			else ShowPlayerDialog(playerid, 399, DIALOG_STYLE_MSGBOX, !"{ee3366}Отметить транспорт", "{FFFFFF}Вы находитесь слишком далеко от своего транспорта\n\n{FFFF99}Вы хотите его отметить на мини-карте?", "Далее", "Назад");
		}
		case 399:	
		{
	        if(!response) return DeletePVar(playerid, "LoadCar"), callcmd::cars(playerid);
	        if(response) 
			{
				new carid = GetPVarInt(playerid, "LoadCar");

				new Float: X, Float: Y, Float: Z, Cache: result, query[140];

				mysql_format(mysql, query, sizeof query, "SELECT * FROM ownable WHERE ID='%d'", carid);
				result = mysql_query(mysql, query, true);

				if(cache_num_rows())
				{
					X = cache_get_field_content_float(0, "Pos_X", mysql);
					Y = cache_get_field_content_float(0, "Pos_Y", mysql);
					Z = cache_get_field_content_float(0, "Pos_Z", mysql);
				}
				cache_delete(result);

				SetPVarFloat(playerid, "gps_pos_x", X);
				SetPVarFloat(playerid, "gps_pos_y", Y);
				SetPVarFloat(playerid, "gps_pos_z", Z);

	        	DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, X, Y, Z+1,5.0);
				DeletePVar(playerid, "LoadCar");
			}
		}
		case 400:	
		{
	        if(!response) return DeletePVar(playerid, "LoadCar"), callcmd::cars(playerid);
	        if(response) 
			{
				if(PI[playerid][pLoadVehicleID] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][pLoadVehicleID]);

				new carid = GetPVarInt(playerid, "LoadCar");
				new Cache: result, query[140];

				mysql_format(mysql, query, sizeof query, "SELECT * FROM ownable WHERE ID='%d'", carid);
				result = mysql_query(mysql, query, true);

				if(cache_num_rows())
				{

					PI[playerid][pLoadVehicleID] = CreateVehicle(\
																cache_get_field_content_int(0, "Model", mysql),
																cache_get_field_content_float(0, "Pos_X", mysql),  
																cache_get_field_content_float(0, "Pos_Y", mysql),  
																cache_get_field_content_float(0, "Pos_Z", mysql)+1, 
																cache_get_field_content_float(0, "Pos_A", mysql), 
																cache_get_field_content_int(0, "Color_1", mysql), 
																cache_get_field_content_int(0, "Color_2", mysql), 60000);

					CarInfo[PI[playerid][pLoadVehicleID]][cID] = cache_get_field_content_int(0, "ID", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cModel] = cache_get_field_content_int(0, "Model", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cPos_X] = cache_get_field_content_float(0, "Pos_X", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cPos_Y] = cache_get_field_content_float(0, "Pos_Y", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cPos_Z] = cache_get_field_content_float(0, "Pos_Z", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cPos_A] = cache_get_field_content_float(0, "Pos_A", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cColor_1] = cache_get_field_content_int(0, "Color_1", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cColor_2] = cache_get_field_content_int(0, "Color_2", mysql);
					cache_get_field_content(0, "Owner", CarInfo[PI[playerid][pLoadVehicleID]][cOwner], mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cLock] = cache_get_field_content_int(0, "Lock", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cCost] = cache_get_field_content_int(0, "Cost", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cNoPark] = cache_get_field_content_int(0, "NoPark", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cFuel] = cache_get_field_content_int(0, "Fuel", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cPremium] = cache_get_field_content_int(0, "Premium", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cTemp] = cache_get_field_content_int(0, "Temp", mysql);
					CarInfo[PI[playerid][pLoadVehicleID]][cKey] = cache_get_field_content_int(0, "Key", mysql);
				}
				cache_delete(result);
				//======================================
				if(CarInfo[PI[playerid][pLoadVehicleID]][cLock] == 1) SetVehicleParamsEx(PI[playerid][pLoadVehicleID], false,lights_text,alarm,true,bonnet,boot,objective);
				else SetVehicleParamsEx(PI[playerid][pLoadVehicleID], false,lights_text,alarm,false,bonnet,boot,objective);
				//======================================
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, CarInfo[PI[playerid][pLoadVehicleID]][cPos_X], CarInfo[PI[playerid][pLoadVehicleID]][cPos_Y], CarInfo[PI[playerid][pLoadVehicleID]][cPos_Z]+1,5.0);
				
				LoadedOwnable++;

				SetPVarFloat(playerid, "gps_pos_x", CarInfo[PI[playerid][pLoadVehicleID]][cPos_X]);
				SetPVarFloat(playerid, "gps_pos_y", CarInfo[PI[playerid][pLoadVehicleID]][cPos_Y]);
				SetPVarFloat(playerid, "gps_pos_z", CarInfo[PI[playerid][pLoadVehicleID]][cPos_Z]);

				SCM(playerid,  COLOR_GREY, !"Ваш транспорт загружен, место спавна отмечено на мини-карте");

				DeletePVar(playerid, "LoadCar");
		    }
			else SCM(playerid, COLOR_GREY, !"Транспорт был припаркован слишком далеко");
		}
		case 401: 
		{
			if(!response) return 1;
	        if(response) 
			{
	        	switch(listitem) 
				{
					case 0: CarPass(playerid, playerid);
					case 1: CarInformation(playerid);
					case 2: callcmd::lock(playerid);
					case 3: callcmd::key(playerid); // ключи
					case 4: 
					{
						ShowPlayerDialog(playerid, 404, DIALOG_STYLE_LIST, "{ee3366}Управление транспортом", "1. Открыть / закрыть багажник\n2. Открыть / закрыть капот", "Далее", "Назад");
					}
					case 5: ShowPlayerDialog(playerid, 403, DIALOG_STYLE_LIST, "{ee3366}Отбуксировать транспорт", "1. Отбуксировать к дому / квартире\n2. Отбуксировать к автосалону", "Далее", "Назад");
					case 6: 
					{
						if(PI[playerid][pLoadVehicleID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, !"У Вас не загружен не один автомобиль!");
						new Float:x, Float:y, Float:z;
						GetVehiclePos(PI[playerid][pLoadVehicleID], x, y, z);

						DisablePlayerCheckpoint(playerid);
						SetPlayerCheckpoint(playerid, x, y, z+1,5.0);

						SendClientMessage(playerid, COLOR_GREEN, !"Ваш транспорт отмечен у Вас на мини-карте!");
					}
					case 7: callcmd::park(playerid);
					case 8: callcmd::sellcar(playerid);
	        		case 9: ShowPlayerDialog(playerid, 402, DIALOG_STYLE_MSGBOX, !"{ee3366}Отметить транспорт", "{FFFFFF}Вы действительно хотите выгрузить свой личный транспорт?\n\nПри следующий загрузке, машина будет загружена на месте её парковки.", "Да", "Нет");
				}
	        }
	    }
	    case 402: 
		{
			if(!response) return 1;
	        if(response) 
			{
				if(PI[playerid][pLoadVehicleID] != INVALID_VEHICLE_ID) 
				{
					DestroyVehicle(PI[playerid][pLoadVehicleID]);

					ClearVehicleData(PI[playerid][pLoadVehicleID]);

					LoadedOwnable--;

					PI[playerid][pLoadVehicleID] = INVALID_VEHICLE_ID;
					SCM(playerid, COLOR_GREEN, !"Ваш личный транспорт выгружен");
				}
			}
	    }
	    case 403: 
		{
			if(!response) return 1;
	        if(response) 
			{
				switch(listitem) 
				{
				    case 0: 
					{
						if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) 
							return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");

						GivePlayerMoneyLog(playerid, 750);
						SendClientMessage(playerid, -1, "Напомните если забыл дописать :/");
				    }
				    case 1: GivePlayerMoneyLog(playerid, 1500), SetVehiclePos(PI[playerid][pLoadVehicleID], 2303.4094, -1822.8162, 22.2802);
				}
			}
	    }
	    case 404: // ДОПИСАТЬ
		{
			if(!response) return 1;
	        if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						new carid = GetPlayerVehicleID(playerid);
						GetVehicleParamsEx(carid, engine, lights_text, alarm, doors_text, bonnet, boot, objective);
						SetVehicleParamsEx(carid, engine, lights_text, alarm, doors_text, (bonnet == 1 ? 0 : 1), boot, objective);
					}
					case 1:
					{
						new carid = GetPlayerVehicleID(playerid);
						GetVehicleParamsEx(carid, engine, lights_text, alarm, doors_text, bonnet, boot, objective);
    					SetVehicleParamsEx(carid, engine, lights_text, alarm, doors_text, bonnet, (boot == 1 ? 0 : 1), objective);
					}
				}
			}
	    }
		case 5050: 
		{
			if(!response) return 1;
			if(response) 
			{
				switch(listitem) 
				{
					case 0: PromoCodeUse(playerid);
				}
			}
		}
		case 5060: 
		{
			if(!response) return callcmd::menu(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0: callcmd::referal(playerid);
					case 1: ShowMySQLReferals(playerid);
				}
			}
		}
		case 5051: 
		{
			if(!response) return 1;
			if(response) 
			{
				SCM(playerid, COLOR_GREY, !"Производим проверку...");
				f(global_str, 70, "SELECT * FROM `promocodes` WHERE `name`='%s'", inputtext);
				mysql_tquery(mysql, global_str, "MysqlPromoCheck", "i", playerid);
			}
		}
        case 778: 
		{
		    new string[32];
		    if (!response || strlen(inputtext) < 6)
      		return YgonSystem(playerid);
		    GetPVarString(playerid, "Взлом авто", string, 32);
		    if(strcmp(string, inputtext, true) == 0)
			{
 				if(strcmp(string, inputtext, true) == 0)
 				{
 					SCM(playerid, 0xFFFA00FF, "Авто успешно взломанно, отвезите его на метку");
 					SetPlayerRaceCheckpoint(playerid, 1, 2006.0352,-2581.2190,10.8149,179.6763,-2574.9075,21.9700, 6);
 					SetPVarInt(playerid, "авто взломан", 1);
					switch(random(2))
					{
					    case 0:
					    {
							PI[playerid][pWanted]++;
							SCM(playerid,COLOR_TOMATO, !"Вам был выдан розыск! Причина: угон траспорта");
							SetPlayerWantedLevel(playerid,PI[playerid][pWanted]);
						}
						case 1:
						{
							SCM(playerid, 0x22ff00AA, "Владельец Авто не заметил угона!");
							SCM(playerid, 0x22ff00AA, "Розыск не было выдан.");
						}
					}
 				}
      		}
		    if(strcmp(string, inputtext, true) != 0)
      		return SCM(playerid, 0xFFFA00FF, "Каптча-код введён неправльно!"), YgonSystem(playerid);
  		}
		case Dialog_OffPassiveMode: 
		{
		    if(!response) return 1;
		    if(response) 
			{
		        switch(listitem) 
				{
                    case 0: 
					{
                    	ShowPlayerDialog(playerid, 7821, DIALOG_STYLE_MSGBOX, !"{ee3366}Пассивный Режим", "{FFFFFF}Вы действительно хотите отключить пассивный режим?", "Выбрать", "Отмена");
                    }
				}
			}
		}
		case Dialog_PassiveMode: 
		{
		    if(!response) return 1;
		    if(response) 
			{
		        switch(listitem) 
				{
                    case 0: 
					{
                    	ShowPlayerDialog(playerid, 7820, DIALOG_STYLE_MSGBOX, !"{ee3366}Пассивный Режим", "{FFFFFF}Вы действительно хотите включить пассивный режим?", "Выбрать", "Отмена");
                    }
				}
			}
		}
		case 7820:
		{
		    if(!response) return 1;
			if(response)
			{
				SCM(playerid, COLOR_HINT, !"[Пассивный Режим] {FFFFFF}Вы включили пассивный режим");
				PI[playerid][pPassiveMode] = 1;
				PassiveModeEnabled(playerid);
			}
		}
		case 7821:
		{
		    if(!response) return 1;
			if(response)
			{
				SCM(playerid, COLOR_HINT, !"[Пассивный Режим] {FFFFFF}Вы выключили пассивный режим");
				PI[playerid][pPassiveMode] = 0;
				PassiveModeOff(playerid);
			}
		}
		case 9229: 
		{
			if(!response) return 1;
			if(response) 
			{
				SetPVarInt(playerid,"kdpickup",gettime() + 3);

				SCM(playerid, COLOR_TOMATO, !"Чтобы покинуть автосалон нажмите клавишу 'ESC'");
				PI[playerid][pChangerAutoSalon] = 0;
				SetPlayerPosAC(playerid,294.8927,1720.3408-20,11.8301);
				InterpolateCameraPos(playerid, 287.2545,1720.2989,13.1431, 287.2545,1720.2989,13.1431, 1000);
				InterpolateCameraLookAt(playerid, 287.2545,1720.2989,13.1431, 287.2545,1720.2989,13.1431, 1000);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				PI[playerid][pAutoSalonCar] = CreateVehicle(DealershipCars[PI[playerid][pChangerAutoSalon]][asModel], 294.8927,1720.3408,11.8301,22.2060, 0, 0, 36000);
				SetVehicleVirtualWorld(PI[playerid][pAutoSalonCar], playerid);
				SetPlayerVirtualWorld(playerid, playerid);
				ShowAutoSalonMenu(playerid);
				return 1;
			}
		}
		case 9888: 
		{
		    if(!response) return 1;
		    if(response) 
			{
		        switch(listitem) 
				{
		            case 0: 
					{
		                if(capturetime == 1) 
						{
							SCM(playerid, COLOR_GREENNEW, !"Вы выключили задержки на захваты территорий");
							capturetime = 0;
							return 1;
						}
						if(capturetime == 0) 
						{
							SCM(playerid, COLOR_GREENNEW, !"Вы включили задержки на захваты территорий");
							capturetime = 1;
							return 1;
						}
		            }
					case 1: 
					{
						if(GetPVarInt(playerid,"kdsaveplayer") > gettime()) return SCM(playerid, COLOR_GREENNEW, !"{FFFF00}[Anti-Lag]{00aa33} сохранять игроков можно только раз в 10 секунд");
						foreach(new pl:Player) SavePlayerData(pl);
						SCM(playerid, COLOR_GREENNEW, !"Вы сохранили все игроков которые были на сервере");
						SetPVarInt(playerid,"kdsaveplayer",gettime() + 10);
					}
					case 2: SendRconCommand("hostname "NAMESERVER" | Открытие сервера");
					case 3: SendRconCommand("hostname "NAMESERVER" | Первый сервер / Обновление");
				}
			}
		}
		case dialog_LOGIN: 
		{
			if(!strlen(inputtextsave)) 
			{
				SCM(playerid, 0xFF6347FF, !"[Внимание]: {FFFFFF}Введите пароль от этого аккаунта");
				return PlayerLogin(playerid);
			}
			if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 30) 
			{
				SCM(playerid, 0xFF6347FF, !"[Внимание]: {FFFFFF}Длина пароля должна быть от 6 до 30 символов");
				return PlayerLogin(playerid);
			}
			for(new i = strlen(inputtextsave); i != 0; --i) 
			{
				switch(inputtextsave[i]) 
				{
					case 'А'..'Я', 'а'..'я': 
					{
						SCM(playerid, 0xFF6347FF, !"[Внимание]: {FFFFFF}Разрешено использовать только латинские буквы и цифры");
						return PlayerLogin(playerid);
					}
				}
			}
			strmid(PI[playerid][pPassword], inputtextsave, 0, strlen(inputtextsave), 30);

			mysql_string[0] = EOS, f(mysql_string, 115, "SELECT * FROM `accounts` WHERE `Name` = '%s' AND `Password` = md5('%s')", PI[playerid][pName], inputtextsave);
			print(mysql_string);
			print(inputtextsave);
			print(PI[playerid][pName]);
			mysql_tquery(mysql, mysql_string, "LoadPlayerData", "i", playerid);

			if(console_Debbug == 1)  printf("[Login]: Player %s, pAdmin: %d, pID %d", PI[playerid][pName], PI[playerid][pAdmin], PI[playerid][pID]);
		}
  		case dialog_SEX: 
		{
  		    if(!response) PI[playerid][pSex] = 2;
  		    if(response) PI[playerid][pSex] = 1;
  		    ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, !"{ee3366}Реферальная система", !"\
			{FFFFFF}Если Вы узнали о нашем сервере от своего друга\n\
			то можете ввести его ник в нижнем окошке\n\n\
			{FFFF99}При достижении 3-го уровня Вы получите призы!", "Далее", "Пропустить");
  		}
		case dialog_REFERAL: 
		{
			if(!response)
			{
				strmid(PI[playerid][pReferal], "No Referal", 0, strlen("No Referal"), 24);
				SetPVarInt(playerid,"RegStatus", 1);
				AccountCreate(playerid);
			}
		    if(response) 
			{
		        for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) 
				{
					case 'А'..'Я', 'а'..'я', ',', '`', '=': 
					{
						SCM(playerid, COLOR_GREEN, !"Разрешено использовать только латинские буквы и цифры");
						ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, !"{ee3366}Реферальная система", !"\
						{FFFFFF}Если Вы узнали о нашем сервере от своего друга\n\
						то можете ввести его ник в нижнем окошке\n\n\
						{FFFF99}При достижении 3-го уровня Вы получите призы!", "Далее", "Пропустить");
						return 1;
					}
				}
		        if(strfind(inputtext, PI[playerid][pName], true) != -1) 
				{
					ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, !"{ee3366}Реферальная система", !"\
					{FFFFFF}Если Вы узнали о нашем сервере от своего друга\n\
					то можете ввести его ник в нижнем окошке\n\n\
					{FFFF99}При достижении 3-го уровня Вы получите призы!", "Далее", "Пропустить");
					return 1;
				}
				SCM(playerid, COLOR_GREY, !"Производим проверку...");
				mysql_string[0] = EOS, f(mysql_string, 69, "SELECT * FROM `accounts` WHERE `Name`='%s'", inputtext);
				mysql_tquery(mysql, mysql_string, "MysqlReferalCheck", "is", playerid, inputtext);
      		}
		}
		case 8009: 
		{
			if(!response) return ShowMainMenu(playerid);
            if(response) return ShowMainMenu(playerid);
        }
        case 9827: 
		{
            if(response) 
			{
                if(!IsPlayerLogged{playerid}) return 1;
				if(strlen(inputtext) == 0) return SCM(playerid, COLOR_GREY, !"Никнейм должен содержать как минимум 1 символ");
                SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] установил себе временный никнейм (%s)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, (inputtext));
                SetPlayerName(playerid, inputtext);
            }
        }
		case dialog_DONATE_4: {
			if(!response) return 1;
			if(response) {
				if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY, !"Сначала купите телефон");
				if(PI[playerid][pDonate] < 150) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки 4-х значного номера телефона требуется 150 донат-поинтов.", "Закрыть", "");
  		    	if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{ee3366}Покупка 4-х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
				if(strlen(inputtext) < 4 || strlen(inputtext) > 4) return SCM(playerid, COLOR_GREY, !"Длина номера 4 символа"), ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{ee3366}Покупка 4х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
				PI[playerid][pDonate] -= 150;
				PI[playerid][data_NUMBER] = strval(inputtext);
				UpdatePlayerDataInt(playerid, "number", PI[playerid][data_NUMBER],6015);
				UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6016);
				SCM(playerid, 0x33ccffFF, "Успешная покупка, списано 150 донат-поинтов.");
			}
		}
		case dialog_DONATE_5: {
			if(!response) return 1;
			if(response) {
				switch(listitem) {
		            case 0: {
						if(PI[playerid][pDonate] < 150*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 1-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 150*XDON;
						PI[playerid][pAdmin] = 1;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6028);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6029);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.",150*XDON);
		            }
		            case 1: {
						if(PI[playerid][pDonate] < 300*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 2-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 300*XDON;
						PI[playerid][pAdmin] = 2;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6043);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6044);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.", 300*XDON);
		            }
		            case 2: {
						if(PI[playerid][pDonate] < 450*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 3-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 450*XDON;
						PI[playerid][pAdmin] = 3;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6058);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6059);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.",450*XDON);
					}
					case 3: {
						if(PI[playerid][pDonate] < 600*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 4-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 600*XDON;
						PI[playerid][pAdmin] = 4;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6073);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6074);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.", 600*XDON);
					}
					case 4: {
						if(PI[playerid][pDonate] < 750*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 5-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 750*XDON;
						PI[playerid][pAdmin] = 5;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6088);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6089);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.",750*XDON);
					}
					case 5: {
						if(PI[playerid][pDonate] < 900*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 6-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 900*XDON;
						PI[playerid][pAdmin] = 6;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6103);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6104);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.", 900*XDON);
					}	
					case 6: {
						if(PI[playerid][pDonate] < 1150*XDON) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки прав игрового мастера 7-го уровня недостаточно донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 1150*XDON;
						PI[playerid][pAdmin] = 7;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],6118);
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],6119);
						SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.",1150*XDON);
					}							
		        }
			}
		}
		case dialog_DONATE_3: 
		{
			if(!response) return 1;
			if(response) 
			{
			    if(PI[playerid][pDonate] < 50) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для смены игрового никнейма требуется 50 донат-поинтов.", "Закрыть", "");
		    	if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{ee3366}Изменение никнейма", "{FFFFFF}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{ff6633}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				if(strlen(inputtext) < 5 || strlen(inputtext) > 24) return SCM(playerid, COLOR_GREY, !"Длина ника от 5 до 24 символов"), ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{ee3366}Изменение никнейма", "{FFFFFF}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{ff6633}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) 
				{
					case 'А'..'Я', 'а'..'я', ' ','-':
					return ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{ee3366}Изменение никнейма", "{FFFFFF}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{ff6633}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				}
				strmid(CHANGE_NAME[playerid], inputtext, 0, strlen(inputtext), MAX_PLAYER_NAME);
				SetPVarInt(playerid, "change_name_status", 1);
				mysql_string[0] = EOS, f(mysql_string, 71, "SELECT * FROM `accounts` WHERE `Name` = '%e'", CHANGE_NAME[playerid]);
				mysql_tquery(mysql, mysql_string, "CheckNameDonate", "ds", playerid, CHANGE_NAME[playerid]);
			}
		}
		case dialog_DONATE_1: 
		{
		    if(!response) return 1;
		    if(response) 
			{
				if(GunSystem == 1) 
				{
					if(PI[playerid][pDonate] < 100) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для покупки всех навыков стрельбы требуется 100 донат-поинтов.", "Закрыть", "");
					PI[playerid][pSkillPistol] = 100;
					PI[playerid][pSkillSDPistol] = 100;
					PI[playerid][pSkillDeagle] = 100;
					PI[playerid][pSkillShotgun] = 100;
					PI[playerid][pSkillMP5] = 100;
					PI[playerid][data_AK47] = 100;
					PI[playerid][pSkillRifle] = 100;
					SetPlayerSkills(playerid);
					PI[playerid][pDonate] -= 100;
					SCM(playerid, 0x33ccffFF, "Успешная покупка, списано 100 донат-поинтов.");
				}
				else SendClientMessage(playerid, COLOR_HINT, !"[Подсказка]: {FFFFFF}На сервере включена система 'Навыки стрельбы для всех'.");
			}
		}
		case dialog_DONATE_2: {
		    if(!response) return 1;
		    if(response) {
		        if(PI[playerid][pDonate] < 60) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}Для снятия предупреждения требуется 60 донат-поинтов.", "Закрыть", "");
				if(PI[playerid][data_WARN] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет предупреждений");
				PI[playerid][data_WARN] = 0;
		        PI[playerid][data_WARNTIME] = 0;
		        PI[playerid][pDonate] -= 60;
				SCM(playerid, 0x33ccffFF, "Успешная покупка, списано 60 донат-поинтов.");
			}
		}
		case 7891: 
		{
			if(!response) ShowTakeAks(playerid); 
		    if(response) ShowTakeAks(playerid);  
		}
		case dialog_ADD_KV: 
		{
         	if(!response) return 1;
    		if(response) {
                SetPVarInt(playerid,"addkv",1);
				SCM(playerid, COLOR_YELLOW, !"Встанте на место, где будет появляться игрок после выхода из подъезда {3366cc}(/tpc)");
			}
		}
        case 8000: 
		{
            if(!response) return 1;
            if(response) 
			{
             	new i = GetPVarInt(playerid, "AdmID");
   				switch(listitem) 
				{
	                case 0: 
					{
	                    PI[i][pAdmin] = 0;
	                    PI[i][data_VIP] = 0;
	                    SCM(playerid, COLOR_YELLOW, !"Вы были сняты с поста игрового мастера!");
	                    SCMf(i, COLOR_YELLOW,"Игровой мастер %s снял Вас с должности игрового мастера", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6411);
						UpdatePlayerDataInt(i, "vip", PI[i][data_VIP],6412);
	                }
	                case 1: 
					{
	                    PI[i][pAdmin] = 1;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'NGM'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до NGM", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin], 6419);
	                }
	                case 2: {
	                    PI[i][pAdmin] = 2;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'JRGM'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до JRGM", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6425);
	                }
	                case 3: {
	                    PI[i][pAdmin] = 3;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'GM'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до GM", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6431);
	                }
	                case 4: {
	                    PI[i][pAdmin] = 4;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'GM+'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до GM+", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6437);
	                }
	                case 5: {
	                    PI[i][pAdmin] = 5;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'LGM'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до LGM", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6443);
	                }
	                case 6: {
	                    PI[i][pAdmin] = 6;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'SGM'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до SGM", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6449);
	                }
	                case 7: {
	                    PI[i][pAdmin] = 7;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'SGM+'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до SGM+", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6455);
	                }
	                case 8: {
	                    PI[i][pAdmin] = 8;
	                    SCMf(playerid, COLOR_YELLOW, "Вы изменили уровень игрового мастера для %s[%d], теперь он 'DEV'", PI[i][pName], i);
	                    SCMf(i, COLOR_YELLOW, "Игровой мастер #%d изменил ваш уровень до DEV", PI[playerid][pAdminNumber]);
	                    UpdatePlayerDataInt(i, "Admin", PI[i][pAdmin],6461);
	                }
				}
				if(PI[i][pAdmin] >= 1) Iter_Add(Admin, playerid);
				if(PI[playerid][pAdminNumber] == 0) PI[playerid][pAdminNumber] = random(9999);
			}
        }
		case 777: 
		{
		    new string[32];
		    if (!response || strlen(inputtext) < 6)
      		return Vzlomsistema(playerid);
		    GetPVarString(playerid, "Взлом фургона", string, 32);
		    if(strcmp(string, inputtext, true) == 0)
			{
  				if(PI[playerid][pMember] == 6)
				{
 					SetPlayerRaceCheckpoint(playerid, 1, 2208.5703,-2574.9075,21.9700, 2208.5703,-2574.9075,21.9700, 6);
 				}
    			if(PI[playerid][pMember] == 5)
				{
 					SetPlayerRaceCheckpoint(playerid, 1, 1439.1833,2359.7837,13.6998, 1439.1833,2359.7837,13.6998, 6);
 				}
    			if(PI[playerid][pMember] == 7)
				{
 					SetPlayerRaceCheckpoint(playerid, 1, -386.7961,-1210.1010,41.1000, -386.7961,-1210.1010,41.1000, 6);
 				}
 				if(strcmp(string, inputtext, true) == 0)
 				{
 					SCM(playerid, 0xFFFA00FF, "Фургон успешно взломан! Отвезите его на базу вашей организации");
 					SetPVarInt(playerid, "фургон взломан", 1);
 				}
      		}
		    if(strcmp(string, inputtext, true) != 0)
      		return SCM(playerid, 0xFFFA00FF, "Каптча-код введён неправльно!"), Vzlomsistema(playerid);
  		}
		case dialog_CONVERT: {
		    if(!response) return 1;
		    if(response) {
		        if(strval(inputtext) <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
		        if(strval(inputtext) > PI[playerid][pDonate]) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", !"{FFFFFF}У Вас нет такой суммы донат-поинтов для конвертации!", "Закрыть", "");
				PI[playerid][pDonate] -= strval(inputtext);
				GivePlayerMoneyLog(playerid,strval(inputtext)*3000);
				SCMf(playerid, 0x33ccffFF, "Успешная покупка, списано %d донат-поинтов.",strval(inputtext));
			}

		}
		case dialog_COMMAND: 
		{
            if(!response) return ShowMainMenu(playerid);
			if(response) 
			{
			    switch(listitem) 
				{
			        case 0: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Общие","{FFFFFF}/me - показать действие\
							/do - показать действие от 3-го лица\n\
							/try - действие игрока (random)\n\
							/anim - список анимаций\n\
							/eject - выбросить из машины\n\
							/pay - передать деньги\n\
							/lic - показать лицензии\n\
							/pass - показать паспорт\n\
							/skills - показать свои навыки\n\
							/hi - приветствие\n\
							/setspawn - сменить спавн\n\
							/leaders - лидеры онлайн", "Закрыть", "");
					case 1: 
					{
	 				    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
						ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Недвижимость","\
						{FFFFFF}/home - панель управления дома/квартиры\n\
						/car - доставить транспорт к дому", "Закрыть", "");
					}
					case 2: 
					{
	 				    if(PI[playerid][pBusiness] == INVALID_BUSINESS_ID) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
						ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Недвижимость","{FFFFFF}/business - панель управления бизнеса", "Закрыть", "");
					}
					case 3: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Автомобиль","\
							{FFFFFF}/lock - закрыть/открыть автомобиль\n\
							CTRL - завести или заглушить двигатель\n\
							ALT - включить или выключить фары\n\
							/sellcar - продать личный автомобиль", "Закрыть", "");
			        case 4: return 1;
					case 5: 
					{
                        if(PI[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Вы не состоите в организации");
						switch(PI[playerid][pMember]) 
						{
							case 1: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация","\
									{FFFFFF}/r - чат организации\n\
									/rr - OOC чат организации\n\
									/d - чат депортамента\n\
									/members - члены организации онлайн\n\
									/free - освободить игрока из тюрьмы (для адвокатов)\n\
									/licsell - продать лицензии (для секретарей)", "Закрыть", "");
							case 2: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация","\
									{FFFFFF}/r - чат организации\n\
									/rr - OOC чат организации\n\
									/d - чат депортамента\n\
									/members - члены организации онлайн\n\
									/putammo - разгрузить грузовик\n\
									/put - положить металл/патроны в грузовик\n\
									/makegun - создать оружие", "Закрыть", "");
							case 3: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация","\
									{FFFFFF}/r - чат организации\n\
									/rr - OOC чат организации\n\
									/d - чат депортамента\n\
									/members - члены организации online\n\
									/su - выдать розыск\n\
									/pheal - поднять игрока из обморока\n\
									/clear - обнулировать розыск\n\
									/cuff - надеть наручники\n\
									/uncuff - снять наручники\n\
									/incar - посадить игрока в машину\n\
									{/uncar - вытащить игрка из машины\n\
									/arrest - провести арест\n\
									/wanted - список преступников\n\
									/setmark - поиск преступника\n\
									/tc - принять вызов", "Закрыть", "");
							case 4: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация", "\
									{FFFFFF}/r - чат организации\n\
									/rr - OOC чат организации\n\
									/d - чат депортамента\n\
									/members - члены организации онлайн\n\
									/heal - предложить курс лечения", "Закрыть", "");
							case 5,6,7: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация", "\
										{FFFFFF}/r - чат организации\n\
										/rr - OOC чат организации\n\
										/members - члены организации онлайн\n\
										/capture - начать захват территории\n\
										/gun - создать оружие", "Закрыть", "");
							case 8: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"{ee3366}Организация", "\
										{FFFFFF}/r - чат организации\n\
										/rr - OOC чат организации\n\
										/d - чат депортамента\n\
										/members - члены организации онлайн\n\
										/news - панель новостей", "Закрыть", "");
						}
					}
			        case 6: 
					{
			            if(PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_GREY, !"Вы не являетесь лидером организации");
						switch(PI[playerid][pLeader]) 
						{
						    case 1,2,4: 
							{
								ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Лидерство", "\
								{FFFFFF}/gov - Гос.Новости\n\
								/invite - принять\n\
								/uninvite - уволить\n\
								/setrang - изменить ранг\n\
								/setskin - изменить скин\n\
								/allmembers - список членов организации\n\
								/offuninvite - уволить оффлайн\n\
								/twarn - выдать выговор сотруднику\n\
								/untwarn - снять выговор сотруднику\n\
								/offtwarn - выдать выговор в оффлайне (доступно заместителям)", "Закрыть", "");
							}
							case 3: 
							{
							    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Лидерство", "\
								{FFFFFF}/gov - Гос.Новости\n\
								/invite - принять\n\
								/uninvite - уволить\n\
								/setrang - изменить ранг\n\
								/setskin - изменить скин\n\
								/allmembers - список членов организации\n\
								/offuninvite - уволить оффлайн\n\
								/twarn - выдать выговор сотруднику\n\
								/untwarn - снять выговор сотруднику\n\
								/offtwarn - выдать выговор в оффлайне (доступно заместителям)", "Закрыть", "");
							}
                            case 5,6,7: 
							{

								ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Лидерство", "\
								{FFFFFF}/invite - принять\n\
								/uninvite - уволить\n\
								/setrang - изменить ранг\n\
								/setskin - изменить скин\n\
								/allmembers - список членов организации\n\
								/offuninvite - уволить оффлайн\n\
								/twarn - выдать выговор сотруднику\n\
								/untwarn - снять выговор сотруднику\n\
								/offtwarn - выдать выговор в оффлайне (доступно заместителям)", "Закрыть", "");
							}
						}
					}
			    }
			}
		}
  		case dialog_CASINO: 
		{
			if(!response) return 1;
			if(response) 
			{
			    if(PI[playerid][data_OPENCASINO] == false) return 1;
			    if(casino_update[playerid] != 0) return SCM(playerid, COLOR_GREY, !"Дождитесь окончания игры");
				if(GetPlayerMoneyID(playerid) < strval(inputtext)) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
			    if(strval(inputtext) < 1000 || strval(inputtext) > 100000) return SCM(playerid, COLOR_GREY, !"Сумма ставки должна быть от 1000 до 100000 рублей");
				new str_1[25];
				new str_3[25];
				casino_stavka[playerid] = strval(inputtext);
				GivePlayerMoneyLog(playerid, -casino_stavka[playerid]);
				casino_update[playerid] = 0;
 				format(str_1, sizeof(str_1), "%d RUB", GetPlayerMoneyID(playerid));
 				format(str_3, sizeof(str_3), "%d RUB", casino_stavka[playerid]);
	    		PlayerTextDrawSetString(playerid,casino_money[playerid][0],str_1);
	    		PlayerTextDrawSetString(playerid,casino_money[playerid][1],str_3);
	    		casino_timer[playerid] = SetTimerEx("CasinoUpdate", 100, true, "d", playerid);
			}
		}
        case dialog_GUN_POLICE: 
		{
			if(!response) return 1;
			if(response) 
			{
			    switch(listitem) 
				{
			        case 0: 
					{
    					if(PI[playerid][pMember] == 3 && PI[playerid][pRang] == 1) return SCM(playerid, COLOR_GREY,"На первом ранге данное оружие недоступно");
						GiveWeapon(playerid, 24, 50);
					}
			        case 1: 
					{
					    if(PI[playerid][pMember] == 3 && PI[playerid][pRang] == 1) return SCM(playerid, COLOR_GREY,"На первом ранге данное оружие недоступно");
						GiveWeapon(playerid, 29, 250);
					}
			        case 2:GiveWeapon(playerid, 3, 1);
			        case 3:SetPlayerHealthAC(playerid, 100);
			        case 4:SetPlayerArmourAC(playerid, 100);
			        case 5: 
					{
			            if(shield[playerid] == false) 
						{
	                        SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
	                        shield[playerid] = true;
	                    }
			        }
			        case 6:GiveWeapon(playerid, 12, 1);
			    }
			    if(PI[playerid][pMember] == 3 || PI[playerid][pMember] == 8) return ShowPlayerDialog(playerid, dialog_GUN_POLICE, DIALOG_STYLE_LIST, "{ee3366}Склад", "Убойный пистолет (50 патрон)\nАвтомат (250 патрон)\nДубинка\nАптечка\nБронежилет\nЗащитный щит\nЖезл", "Выбрать", "Отмена");
			    else ShowPlayerDialog(playerid, dialog_GUN_POLICE, DIALOG_STYLE_LIST, "{ee3366}Склад", "Убойный пистолет (50 патрон)\nАвтомат (250 патрон)\nДубинка\nАптечка\nБронежилет\nЗащитный щит", "Выбрать", "Отмена");
			}
		}
		case 9230: 
		{
		    if(!response) return 1;
		    if(response) 
			{
				switch(listitem) 
				{
				    case 0: 
					{
				        ShowPlayerDialogf(playerid, 9231, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка транспорта", "Купить", "Отмена", "\
						{FFFFFF}Вы хотите купить {ffff99}'%s'{FFFFFF} за {ffff99}'%d'{FFFFFF} донат-поинтов?\n\
						{FFFFFF}Стоимость: {ffff99}%d в руб\n\
						{FFFFFF}Скорость машины: {ffff99}%d км/час{FFFFFF}\n\n\
						{696969}Обратите внимание: отменить это действие будет невозможно!",
						VehicleNames[DealershipCars[PI[playerid][pChangerAutoSalon]][asModel]-400], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000, DealershipCars[PI[playerid][pChangerAutoSalon]][asSpeed]);
				    }
				    case 1: 
					{
						if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");

						new Cache: result, query[140];

						mysql_format(mysql, query, sizeof query, "SELECT * FROM ownable WHERE Owner='%e' AND Premium='0'", getName(playerid));
						result = mysql_query(mysql, query, true);

						if(cache_num_rows() >= 2)
						{
							ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", "\
							{FFFFFF}У Вас заняты {FFFF99}2 из 2{FFFFFF} слотов для автомобилей.\n\n\
							{FFFFFF}Сейчас Вы можете преобрести только {FFFF99}Премиум{FFFFFF} автомобили за донат-поинты.", "Ок", "");
						}
						cache_delete(result);
						
						ShowPlayerDialogf(playerid, 9232, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка транспорта", "Купить", "Отмена", "\
						{FFFFFF}Вы хотите купить {FFFF99}'%s'{FFFFFF} за {FFFF99}'%d'{FFFFFF} руб?\n\
						{FFFFFF}Стоимость: {FFFF99}%d в донат-поинтах\n\
						{FFFFFF}Скорость машины: {FFFF99}%d км/час{FFFFFF}\n\n\
						{696969}Обратите внимание: отменить это действие будет невозможно!",
						VehicleNames[DealershipCars[PI[playerid][pChangerAutoSalon]][asModel]-400], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000, DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate], DealershipCars[PI[playerid][pChangerAutoSalon]][asSpeed]);
					}
				}
			}
		}
		case 9231: 
		{
		    if(!response) return 1;
		    if(response) 
			{
				if(PI[playerid][pDonate] < DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]) 
							return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка оплаты", "{FFFFFF}У Вас нет нужного количества донат-поинтов для покупки данного автомобиля!", "Закрыть", "");
				
				ShowPlayerDialog(playerid, 9235, DIALOG_STYLE_LIST, "{ee3366}Цвет транспорта", "\
																		{000000}||||||||||||||||\n\
																		{263739}||||||||||||||||\n\
																		{8494ab}||||||||||||||||\n\
																		{f5f5f5}||||||||||||||||\n\
																		{395a83}||||||||||||||||\n\
																		{0e316d}||||||||||||||||\n\
																		{993e4d}||||||||||||||||\n\
																		{473532}||||||||||||||||\n\
																		{d78e10}||||||||||||||||\n\
																		{193826}||||||||||||||||", "Выбрать", "");
				//PI[playerid][pDonate] -= DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate];
				return 1;
		    }
		}
		case 9232: 
		{
		    if(!response) return 1;
		    if(response) 
			{

				if(PI[playerid][pMoney] < DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000) 
					return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка оплаты", "{FFFFFF}У Вас нет нужного количества денег для покупки данного автомобиля!", "Закрыть", "");
				
				ShowPlayerDialog(playerid, 9234, DIALOG_STYLE_LIST, "{ee3366}Цвет транспорта", "\
																{000000}||||||||||||||||\n\
																{263739}||||||||||||||||\n\
																{8494ab}||||||||||||||||\n\
																{f5f5f5}||||||||||||||||\n\
																{395a83}||||||||||||||||\n\
																{0e316d}||||||||||||||||\n\
																{993e4d}||||||||||||||||\n\
																{473532}||||||||||||||||\n\
																{d78e10}||||||||||||||||\n\
																{193826}||||||||||||||||", "Выбрать", "");
				//PI[playerid][pMoney] -= DealershipCars[PI[playerid][pChangerAutoSalon]][asCena];		
				return 1;										
		    }
		}
		case 9234:
		{
		    if(!response) 
			{ 
				return ShowPlayerDialog(playerid, 9234, DIALOG_STYLE_LIST, "{ee3366}Цвет транспорта", "{000000}||||||||||||||||\n{263739}||||||||||||||||\n{8494ab}||||||||||||||||\n{f5f5f5}||||||||||||||||\n{395a83}||||||||||||||||\n{0e316d}||||||||||||||||\n{993e4d}||||||||||||||||\n{473532}||||||||||||||||\n{d78e10}||||||||||||||||\n{193826}||||||||||||||||", "Выбрать", "");
			}
		    if(response)
			{
		    	switch(listitem) 
				{
					case 0: PI[playerid][pAutoSalonColor] = 0;
					case 1: PI[playerid][pAutoSalonColor] = 4;
					case 2: PI[playerid][pAutoSalonColor] = 32;
					case 3: PI[playerid][pAutoSalonColor] = 1;
					case 4: PI[playerid][pAutoSalonColor] = 87;
					case 5: PI[playerid][pAutoSalonColor] = 79;
					case 6: PI[playerid][pAutoSalonColor] = 161;
					case 7: PI[playerid][pAutoSalonColor] = 40;
					case 8: PI[playerid][pAutoSalonColor] = 6;
					case 9: PI[playerid][pAutoSalonColor] = 44;
				}
				HideAutoSalonMenu(playerid);
				DestroyVehicle(PI[playerid][pAutoSalonCar]);

				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPosAC(playerid, 2323.3674,-1797.8130,22.4540);
				SetCameraBehindPlayer(playerid);

				if(PI[playerid][pMoney] < DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000) 
					return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка оплаты", "{FFFFFF}У Вас нет нужного количества денег для покупки данного автомобиля!", "Закрыть", "");

				new Sum = DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000;
				new Profit = Sum*20/100;
				new B = GetPVarInt(playerid, "business");
				BizInfo[B][bMoney] += Profit;
				UpdateBusinessData(B);

				SCMf(playerid, COLOR_GREENNEW, "Вы успешно купили {fe9a7e}'%s'{00aa33} за {fe9a7e}%d руб",\
								VehicleNames[DealershipCars[PI[playerid][pChangerAutoSalon]][asModel]-400],
								DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000);
				SCM(playerid, COLOR_GREENNEW, !"Повторно прочитать руководство по эксплуатации можно в меню трансорта {fe9a7e}(/car)");
				CarInformation(playerid);

				PI[playerid][pMoney] -= DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000;		

				SetPlayerOwnable(playerid, DealershipCars[PI[playerid][pChangerAutoSalon]][asModel], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000, 50, PI[playerid][pAutoSalonColor], PI[playerid][pAutoSalonColor], 0);

				PI[playerid][pChangerAutoSalon] = INVALID_VEHICLE_ID;
				PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
		    }
		}
		case 9235:
		{
		    if(!response) 
			{ 
				return ShowPlayerDialog(playerid, 9235, DIALOG_STYLE_LIST, "{ee3366}Цвет транспорта", "{000000}||||||||||||||||\n{263739}||||||||||||||||\n{8494ab}||||||||||||||||\n{f5f5f5}||||||||||||||||\n{395a83}||||||||||||||||\n{0e316d}||||||||||||||||\n{993e4d}||||||||||||||||\n{473532}||||||||||||||||\n{d78e10}||||||||||||||||\n{193826}||||||||||||||||", "Выбрать", "");
			}
		    if(response)
			{
		    	switch(listitem) 
				{
					case 0: PI[playerid][pAutoSalonColor] = 0;
					case 1: PI[playerid][pAutoSalonColor] = 4;
					case 2: PI[playerid][pAutoSalonColor] = 32;
					case 3: PI[playerid][pAutoSalonColor] = 1;
					case 4: PI[playerid][pAutoSalonColor] = 87;
					case 5: PI[playerid][pAutoSalonColor] = 79;
					case 6: PI[playerid][pAutoSalonColor] = 161;
					case 7: PI[playerid][pAutoSalonColor] = 40;
					case 8: PI[playerid][pAutoSalonColor] = 6;
					case 9: PI[playerid][pAutoSalonColor] = 44;
				}
				HideAutoSalonMenu(playerid);
				DestroyVehicle(PI[playerid][pAutoSalonCar]);

				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPosAC(playerid, 2323.3674,-1797.8130,22.4540);
				SetCameraBehindPlayer(playerid);

				if(PI[playerid][pDonate] < DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]) 
					return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка оплаты", "{FFFFFF}У Вас нет нужного количества денег для покупки данного автомобиля!", "Закрыть", "");

				new Sum = DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000;
				new Profit = Sum*20/100;
				new B = GetPVarInt(playerid, "business");
				BizInfo[B][bMoney] += Profit;
				UpdateBusinessData(B);

				SCMf(playerid, COLOR_GREENNEW, "Вы успешно купили {fe9a7e}'%s'{00aa33} за {fe9a7e}%d донат-поинтов", 
												VehicleNames[DealershipCars[PI[playerid][pChangerAutoSalon]][asModel]-400],
												DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]);

				SCM(playerid, COLOR_GREENNEW, !"Повторно прочитать руководство по эксплуатации можно в меню трансорта {fe9a7e}(/car)");
				CarInformation(playerid);

				PI[playerid][pDonate] -= DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate];	

				SetPlayerOwnable(playerid, DealershipCars[PI[playerid][pChangerAutoSalon]][asModel], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000, 50, PI[playerid][pAutoSalonColor], PI[playerid][pAutoSalonColor], 1);

				PI[playerid][pChangerAutoSalon] = INVALID_VEHICLE_ID;
				PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
		    }
		}
		case 3298:
		{
			if(!response) return 1;
			if(response)
			{
				new Float:x,Float:y,Float:z;
				GetPlayerPos(targplayer[0],x,y,z);
				if(!PlayerToPoint(3.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Вы находетесь далеко друг от друга");

				switch(listitem)
				{
					case 0:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 4);
					}
					case 1:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 2);
					}
					case 2:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 9);
					}
					case 3:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 7);
					}
					case 4:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 6);
					}
					case 5:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 10);
					}
					case 6:
					{
						return SendRequestForPlayer(playerid, targplayer[0], 3);
					}
				}
			}
		}
		case dialog_BUYGUN_1:
		{
			if(!response) return 1;
			if(response)
			{
			    if(strval(inputtext) <= 0) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
			    if(strval(inputtext) > 500) return SCM(playerid, COLOR_GREY,"Нельзя купить больше 500 патронов за один раз");
                new b = GetPVarInt(playerid,"business");
				new patr = strval(inputtext);
				new kofi;
				new ggun = GetPVarInt(playerid, "makegun");
				switch(ggun)
			    {
			        case 24:kofi = 50;
			        case 22:kofi = 25;
			        case 25:kofi = 50;
			        case 29:kofi = 30;
			        case 30:kofi = 75;
			        case 34:kofi = 250;
			    }
			    if(patr*kofi > GetPlayerMoneyID(playerid)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
			    if(patr > BizInfo[b][bProduct] && BizInfo[b][bOwned] == 1) return SCM(playerid, COLOR_GREY,"На складе недостаточно боеприпасов");
                BizInfo[b][bProduct] -= patr;
                BizInfo[b][bMoney] += patr*kofi;
				GivePlayerMoneyLog(playerid, -patr*kofi);
				GiveWeapon(playerid, ggun, patr);
				UpdateBusinessData(b);
			}
		}
		case 9111: 
		{
			if(!response) return 1;
			if(response)
			{
				if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, !"Вызов скорой помощи доступен только на улице");
				for(new i = 0; i < MAX_PLAYERS; i++) 
				{
				    if(!IsPlayerConnected(i)) continue;
				    if(PI[i][pMember] == 3) 
					{
						SCMf(i, 0x69b867FF, "%s[%d] вызвал полицию, расстояние: %.1f, Используйте /accept чтобы принять вызов",PI[playerid][pName],playerid, GetDistanceBetweenPlayers(playerid, i));
						SCMf(i, 0x69b867FF, "Сообщение игрока: {FFFF99}%s",inputtext);
				    }
				}
			    SCM(playerid, 0x00a86bFF, !"Вы успешно вызвали сотрудников полиции, оставайтесь на месте.");
				PI[playerid][data_911_1] = 1;
			}
		}
		case 9112: 
		{
			if(!response) return 1;
			if(response) 
			{
			    if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, !"Вызов полиции доступен только на улице");
				for(new i = 0; i < MAX_PLAYERS; i++) 
				{
				    if(!IsPlayerConnected(i)) continue;
				    if(PI[i][pMember] == 4) 
					{
						SCMf(i,0x69b867FF, "%s[%d] вызвал скорую помощь, расстояние: %.1f, Используйте /accept чтобы принять вызов",PI[playerid][pName],playerid, GetDistanceBetweenPlayers(playerid, i));
						SCMf(i,0x69b867FF, "Сообщение игрока: {FFFF99}%s",inputtext);
				    }
				}
			    SCM(playerid, 0x00a86bFF, !"Вы успешно вызвали сотрудников скорой помощи, оставайтесь на месте.");
                PI[playerid][data_911_2] = 1;
			}
		}
		case dialog_ADD_HOUSE: 
		{
         	if(!response) return 1;
    		if(response) 
			{
                SetPVarInt(playerid,"addhouse",1);
				SCM(playerid, COLOR_YELLOW, !"Сядьте в машину и введите {3366cc}/tpc{FFFFFF} для сохранения позиции автомобиля");
			}
		}
		case dialog_ADD_HOUSE_1:
  		{
  		    if(!response) return SetPVarInt(playerid, "addhouse",0);
  		    if(response)
  		    {
  		        switch(listitem)
  		        {
					case 0:
					{
					    SetPVarFloat(playerid,"aExitX",1113.1830);
                        SetPVarFloat(playerid,"aExitY",1526.1506);
                        SetPVarFloat(playerid,"aExitZ",905.8036);
                        SetPVarInt(playerid,"aInt",1);
					}
					case 1:
					{
					    SetPVarFloat(playerid,"aExitX",1113.1830);
                        SetPVarFloat(playerid,"aExitY",1526.1506);
                        SetPVarFloat(playerid,"aExitZ",905.8036);
                        SetPVarInt(playerid,"aInt",2);
					}
				}
				ShowPlayerDialog(playerid, dialog_ADD_HOUSE_2, DIALOG_STYLE_INPUT, "{ee3366}Цена дома", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
			}
		}

		case dialog_ADD_HOUSE_2:
		{
		    if(!response) return SetPVarInt(playerid, "addhouse",0);
		    if(response)
		    {
		        if(strval(inputtext) < 10000 || strval(inputtext) > 10000000) return ShowPlayerDialog(playerid, dialog_ADD_HOUSE_3, DIALOG_STYLE_INPUT, "{ee3366}Цена дома", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                SetPVarInt(playerid,"aPrice",strval(inputtext));
                ShowPlayerDialog(playerid, dialog_ADD_HOUSE_3, DIALOG_STYLE_INPUT, "{ee3366}Класс", "Введите класс дома 0,1,2,3,4", "Добавить", "Отмена");
			}
		}
		case dialog_ADD_HOUSE_3:
		{
		    if(!response) return 1;
		    if(response)
		    {
			    SetPVarInt(playerid,"aClass",strval(inputtext));
			    AddHouse(playerid);
		    }
		}


		case dialog_ASH_TEST:
		{
		    if(!response) return 1;
			if(response)
			{
			    if(GetPlayerMoneyID(playerid) < 5000) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
				GivePlayerMoneyLog(playerid,-5000);
			    PI[playerid][data_ASH_CAR] = INVALID_VEHICLE_ID;
				PI[playerid][data_CHEK] = 0;
				PI[playerid][data_ASH_TEST] = 1;
				SCM(playerid,0xFFCC33FF, !"Вы начали тест. Отправляйтесь на парковку автошколы и возьмите траспортное средство");
			}
		}
        /*case dialog_BANK:
        {
            if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowBankMoney(playerid);
			        case 1: ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{ee3366}Снятие наличных", "Комиссия составит {3377cc}4%\n{FFFFFF}Введите требуемую сумму", "Выполнить", "Назад");
			        case 2: ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{ee3366}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			        case 3:
					{
						if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY,"Использовать банковскую систему можно только со 2 уровня");
						ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Перевод на другой счёт", "{FFFFFF}Укажите ID получателя и сумма перевода\nчерез запятую. Комиссия при переводе составит {3377cc}3%\n{FFFF99}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
			        case 4: ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_INPUT, "{ee3366}Банк", "{FFFFFF}Введите сумму которую желаете положить на счет телефона", "Выполнить", "Назад");
			        case 5: 
					{
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) 
						{
							new h = PI[playerid][data_HOUSE];
						 	ShowPlayerDialogf(playerid, 7950, DIALOG_STYLE_INPUT, !"{ee3366}Оплата жилья", !"Далее", !"Назад", "\
								{FFFFFF}Номер дома: %d\n\
								{FFFFFF}Статус оплаты: %d / 30 дней\n\
								{FFFF99}Квартплата - 1499 руб / день\n\n\
								{FFFFFF}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) 
						{
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
						 	ShowPlayerDialogf(playerid, 7951, DIALOG_STYLE_INPUT, "{ee3366}Оплата жилья", "Далее", "Назад", "\
								{FFFFFF}Номер квартиры: %d\n\
								{FFFFFF}Статус оплаты: %d / 30 дн\n\
								{FFFF99}Квартплата - 1299 руб / день\n\n\
								{FFFFFF}Введите количество дней для оплаты", KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
				        }
					}
					case 6: 
					{
					    if(PI[playerid][pBusiness] == INVALID_BUSINESS_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет бизнеса или АЗС");
						new b = PI[playerid][pBusiness];
						ShowPlayerDialogf(playerid, 7952, DIALOG_STYLE_INPUT, !"{ee3366}Оплата бизнеса", !"Далее", !"Назад", "\
							{FFFFFF}Номер бизнеса: %d\n\
							{FFFFFF}Статус оплаты: %d / 30 дней\n\
							{FFFF99}Налог - 3999 рублей\n\n\
							{FFFFFF}Введите количество дней для оплаты", BizInfo[b][data_ID], BizInfo[b][bDays]);
					}
				}
			}
        }*/
        case 9228: 
		{
		    if(!response) return 1;
		    if(response) 
			{
				if(PI[playerid][pLoadVehicleID] == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет загруженно машины для продажи");
				if(CarInfo[PI[playerid][pLoadVehicleID]][cTemp] != -1) return SCM(playerid, COLOR_GREY, !"Вы не можете продать временный автомобиль");
				switch(listitem)
			    {
					case 0:
					{
						ShowPlayerDialogf(playerid, 9227, DIALOG_STYLE_INPUT, !"{ee3366}Продажа транспорта", !"Продать", !"Закрыть",\
						"{FFFFFF}Вы действительно хотите продать своё транспортное средство государству?\n\n\
						Налог на продажу составит 35%% от государственной стоимости.\n\
						На Ваш банковский счёт будет переведено {3366cc}%d руб\n\
						{FFFFFF}Для подтверждения введите стоимость цифрой: {61bd74}%d\n\n\
						{ff6633}ОБРАТИТЕ ВНИМАНИЕ: Это действия нельзя будет отменить.\n\
						{FFFF99}Примичание: Вы должны находиться в Мэрии (/gps > Важные места)", CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*35, CarInfo[PI[playerid][pLoadVehicleID]][cCost]);
					}
					case 1:
					{
						if(!IsPlayerInRangeOfPoint(playerid, 75.0, 2475.3923, -706.9788, 12.3000)) 
							return SCM(playerid, COLOR_GREY, !"Чтобы продать свой транспорт другому игроку, Вам нужно быть на авторыноке.");

						ShowSellCar(playerid);
					}
				}
	        }
		}
		case 9221:
		{
			new from_player = PI[playerid][pRequestIDFrom];

			if(!response)
			{
				SCMf(from_player, COLOR_GREY, "%s отказался от Вашего предложения", getName(playerid), VehicleNames[CarInfo[PI[from_player][pLoadVehicleID]][cModel]-400]);
				SCMf(playerid, COLOR_GREY, "Вы отказались от предложения игрока %s", PI[from_player][pName]);

				ClearProposition(from_player);
			}
			if(response) 
			{
				if(ProxDetectorS(10.0, playerid, from_player))
				{
					new value = PI[from_player][pRequestValue];
					new value_2 = PI[from_player][pRequestValueTwo];

					if(CarInfo[PI[from_player][pLoadVehicleID]][cPremium] == 1)
					{
						SCMf(from_player, COLOR_YELLOW, "%s преобрел Ваш трансопорт '%s' за %d рублей (включая налог на премиум транспорт: %d)", 
							getName(playerid), VehicleNames[CarInfo[PI[from_player][pLoadVehicleID]][cModel]-400], value+value_2, value_2);
						SCMf(playerid, COLOR_YELLOW, "Поздравляем! Вы преобрели трансопорт '%s' за %d рублей у игрока %s", 
							VehicleNames[CarInfo[PI[from_player][pLoadVehicleID]][cModel]-400], value+value_2, getName(from_player));
					}
					else
					{
						SCMf(from_player, COLOR_YELLOW, "%s преобрел Ваш трансопорт '%s' за %d рублей", 
							getName(playerid), VehicleNames[CarInfo[PI[from_player][pLoadVehicleID]][cModel]-400], value);
						SCMf(playerid, COLOR_YELLOW, "Поздравляем! Вы преобрели трансопорт '%s' за %d рублей у игрока %s", 
							VehicleNames[CarInfo[PI[from_player][pLoadVehicleID]][cModel]-400], value, getName(from_player));
					}

					GivePlayerMoneyLog(playerid, -value);
					GivePlayerMoneyLog(playerid, value);

					UpdatePlayerDataInt(playerid, "Money", PI[playerid][pMoney], 9833);
					UpdatePlayerDataInt(from_player, "Money", from_player, 9834);
					//==========================================================
					new carid = PI[from_player][pLoadVehicleID];
					new Float: car_x, Float: car_y, Float: car_z;
					GetVehiclePos(carid, car_x, car_y, car_z);

					CarInfo[carid][cPos_X] = car_x;
					CarInfo[carid][cPos_Y] = car_y;
					CarInfo[carid][cPos_Z] = car_z + 0.8;
					GetVehicleZAngle(carid, CarInfo[carid][cPos_A]);
					
					CarInfo[carid][cNoPark] = 0;

					SaveOwnableCar(carid);
					//==========================================================

					mysql_queryf(mysql, "UPDATE `ownable` SET `Owner` = '%e' WHERE `Owner` = '%e' AND `ID` = '%d'", false,\
						getName(playerid), getName(from_player), CarInfo[PI[from_player][pLoadVehicleID]][cID]);

					strmid(CarInfo[PI[from_player][pLoadVehicleID]][cOwner], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);

					DestroyVehicle(PI[from_player][pLoadVehicleID]);
					ClearVehicleData(PI[from_player][pLoadVehicleID]);

					PI[from_player][pLoadVehicleID] = INVALID_VEHICLE_ID;
					LoadedOwnable--;

					ClearProposition(playerid);
				}
				else SCM(playerid, COLOR_LIGHTGREY, !"Данный игрок слишком далеко от Вас");
			}
		}
		case 9227:
		{
			if(!PlayerToPoint(50.0, playerid, 1158.0021,2572.6350,1112.4800)) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"Вы должны находится в Мэрии (/gps > Важные места)");
			return 1;
		}
		case 9226:
		{
			if(!response) return 1;	
			if(response) 
			{
				if(!IsPlayerInRangeOfPoint(playerid, 75.0, 2475.3923, -706.9788, 12.3000)) 
					return SCM(playerid, COLOR_GREY, !"Чтобы продать свой транспорт другому игроку, Вам нужно быть на авторыноке.");
				if(!strlen(inputtext)) 
					return ShowSellCar(playerid), SCM(playerid, COLOR_GREY, !"Введите ID игрока и стоимость через запятую.");

				new id, cost;
				if(sscanf(inputtext, "p<,>dd", id, cost)) return ShowSellCar(playerid), SCM(playerid, COLOR_GREY, !"Введите ID игрока и стоимость через запятую.");
				
				if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
				if(!IsPlayerLogged{id}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");

				if(cost > CarInfo[PI[playerid][pLoadVehicleID]][cCost]+CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*90)
					return ShowSellCar(playerid), SCMf(playerid, COLOR_GREY, "Вы указали слишком большую сумму для продажи, максимальная цена для продажи %d руб", (CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*90)+CarInfo[PI[playerid][pLoadVehicleID]][cCost]);

				if(cost < (CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*15))
					return ShowSellCar(playerid), SCMf(playerid, COLOR_GREY, "Вы указали маленькую сумму для продажи, минимальная цена для продажи %d руб", (CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*15));

				if(!IsPlayerInRangeOfPoint(playerid, 75.0, 2475.3923, -706.9788, 12.3000)) 
							return SCM(playerid, COLOR_GREY, !"Чтобы продать свой транспорт другому игроку, Вам нужно быть на авторыноке.");

				if(!ProxDetectorS(10.0, playerid, id)) 
					return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");

				if(PI[id][pRequestIDFrom] != -1 && PI[id][pRequestIDFor] != -1) 
					return SCM(playerid, COLOR_GREY, !"У игрока уже есть активное предложение");

				if(PI[id][pLoadVehicleID] != INVALID_VEHICLE_ID) 
					return SCM(playerid, COLOR_GREY, !"У игрока есть загруженный автомобиль");

				if(CarInfo[PI[playerid][pLoadVehicleID]][cPremium] == 1) 
				{
					if(cost+CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*20 > GetPlayerMoneyID(id)) return SCMf(playerid, COLOR_LIGHTGREY, "У игрока %s недостаточно денег на руках", getName(id));
					
					SendClientMessagef(playerid, 0x36e96cFF, "Вы предложили %s купить транспорт '%s' за %d руб", getName(id), VehicleNames[CarInfo[PI[playerid][pLoadVehicleID]][cModel]-400], cost);
					SendClientMessagef(playerid, COLOR_LIGHTGREY, "Чтобы отменить предложение нажмите клавишу {ff6633}'N'");

					SendRequestForPlayer(playerid, id, 1, cost, CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*20);
				}
				else
				{
					if(cost > GetPlayerMoneyID(id)) return SCMf(playerid, COLOR_LIGHTGREY, "У игрока %s недостаточно денег на руках", getName(id));

					SendClientMessagef(playerid, 0x36e96cFF, "Вы предложили %s купить транспорт '%s' за %d руб", getName(id), VehicleNames[CarInfo[PI[playerid][pLoadVehicleID]][cModel]-400], cost);
					SendClientMessagef(playerid, COLOR_LIGHTGREY, "Чтобы отменить предложение нажмите клавишу {ff6633}'N'");

					SendRequestForPlayer(playerid, id, 1, cost, CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*20); // отправляем игроку что ему кинули приглос на покупку
				}
				return 1;
			}
		}
        case 7950: 
		{
            if(!response) return 1;
			if(response) 
			{
				if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID) return SCM(playerid,COLOR_GREY, !"У вас нет дома");
				if(strval(inputtext) <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
				new h_class;
				new h = PI[playerid][data_HOUSE];
                h_class = strval(inputtext)*1499;
				if(h_class > GetPlayerMoneyID(playerid)) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
				if(HOUSE_DATA[h][data_DAY]+strval(inputtext) > 30) return SCM(playerid, COLOR_GREY, !"Нельзя оплатить дом на более 30 суток");
				GivePlayerMoneyLog(playerid,-h_class);
				HOUSE_DATA[h][data_DAY] += strval(inputtext);
				SCMf(playerid,0x138642FF, "{138642}Вы оплатили дом на {f1a88b}%d/30 дней{138642} за {f1a88b}%d руб",HOUSE_DATA[h][data_DAY], h_class);
			}
        }
        case 7952: 
		{
            if(!response) return 1;
			if(response) 
			{
				if(PI[playerid][pBusiness] == INVALID_BUSINESS_ID) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
				if(strval(inputtext) <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
				new h_class = strval(inputtext)*3999;
				new b = PI[playerid][pBusiness];
				if(BizInfo[b][bDays]+strval(inputtext) > 30) return SCM(playerid, COLOR_GREY, !"Нельзя оплатить бизнес на более 30 суток");
				if(h_class > GetPlayerMoneyID(playerid)) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
				GivePlayerMoneyLog(playerid,-h_class);
				BizInfo[b][bDays] += strval(inputtext);
				SCMf(playerid,0x138642FF, "{138642}Вы оплатили бизнес на {f1a88b}%d/30дней{138642} за {f1a88b}%d руб",BizInfo[b][bDays], h_class);
			}
        }
        case 7951: {
            if(!response) return 1;
			if(response) {
				if(PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У вас нет квартиры");
				if(strval(inputtext) <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
				new h_class;
				new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
                h_class = strval(inputtext)*1299;
				if(h_class > GetPlayerMoneyID(playerid)) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
				if(KV_DATA[kv][data_DAY][k]+strval(inputtext) > 30) return SCM(playerid, COLOR_GREY, !"Нельзя оплатить квартиру на более 30 суток");
				GivePlayerMoneyLog(playerid,-h_class);
				KV_DATA[kv][data_DAY][k] += strval(inputtext);
				SCMf(playerid,0x138642FF, "{138642}Вы оплатили квартиру на {f1a88b}%d/30 дней{138642} за {f1a88b}%d руб",KV_DATA[kv][data_DAY][k], h_class);
			}
        }
		/*case 6002: {
            if(!response) return 1;
			if(response) {
				new textm[2][6];
				split(inputtext, textm, ',');
				new id = strval(textm[0]);
				new cash = strval(textm[1]);
				if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY,"Использовать банковскую систему можно только со 2 уровня");
				if(!IsPlayerConnected(id)) {
					SCM(playerid, COLOR_GREY, !"Счёт игрока не найден");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Мобильный банк", "{FFFFFF}Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{FFFF99}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > PI[playerid][pBank] || cash < 1) {
					SCM(playerid, COLOR_GREY, !"У Вас недостаточно средств");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Мобильный банк", "{FFFFFF}Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{FFFF99}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(id == playerid) {
					SCM(playerid, COLOR_GREY, !"Вы не можете перевести деньги на свой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Мобильный банк", "{FFFFFF}Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{FFFF99}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > 500000) {
					SCM(playerid, COLOR_GREY, !"Вы не можете перевести более 500000 рублей на другой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Мобильный банк", "{FFFFFF}Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{FFFF99}Пример: 12, 50000", "Перевести", "Назад");
				}
    			if(GetPVarInt(playerid,"Counting_bank") > gettime()) return SCM(playerid, COLOR_GREY, !"Перевод в банке доступен раз в 10 минут");
				PI[playerid][pBank] -= cash;
				PI[id][pBank] += cash;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SCMf(playerid, 0x62d44dFF, "[Мобильный Банк] Вы перевели {FFFF99}%d рублей {62d44d}на счёт %s[%d], баланс счёта: {FFFF99}%d рублей", cash, PI[id][pName], id, PI[playerid][pBank]);
				SCMf(id, 0x62d44dFF, "[Мобильный Банк] %s[%d] перевёл на Ваш счёт {FFFF99}%d рублей{62d44d}, баланс счёта: {FFFF99}%d рублей", PI[playerid][pName], playerid, cash, PI[id][pBank]);
				SetPVarInt(playerid,"Counting_bank",gettime() + 600);
				return 1;
			}
        }*/
		case 3898:
		{
			if(!response) return 1;
			if(response)
		    {
				switch(listitem)
		        {
		        	case 0:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 100) return SCM(playerid, COLOR_GREY, !"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы поели"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
		        	case 1:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 100) return SCM(playerid, COLOR_GREY, !"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы поели"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
		        	case 2:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 100) return SCM(playerid, COLOR_GREY, !"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы поели"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
				}
		 	}
		}
		case 3456:
		{
		    if(!response) return 1;
			if(response)
   			{
				SendAdminsMessagef(COLOR_GREY, "[Warning] %s[%d] взял из общей казны 5000 рублей.",PI[playerid][pName], playerid);
				PI[playerid][pMoney] += 5000;
                GivePlayerMoneyLog(playerid, 5000);
		    }
		}
		case 9189: 
		{
		    if(!response) return 1;
			if(response) 
			{
				if(MineOreStock < strval(inputtext)) return SCM(playerid, COLOR_GREY, !"На складе шахты недостаточно металла");

				if(PI[playerid][data_VIP] > 0) 
				{
					if(strval(inputtext) > 80 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, !"Вы можете купить от 1 до 80 кг металла");
					if(strval(inputtext)+PI[playerid][data_MET] > 80) return SCMf(playerid, COLOR_GREY, "Вы можете носить с собой не более 80 кг металла. У Вас: %d кг", PI[playerid][data_MET]);
				}
				else
				{
					if(strval(inputtext) > 40 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, !"Вы можете купить от 1 до 40 кг металла");
					if(strval(inputtext)+PI[playerid][data_MET] > 40) return SCMf(playerid, COLOR_GREY, "Вы можете носить с собой не более 40 кг металла. У Вас: %d кг", PI[playerid][data_MET]);
				}
				if(GetPlayerMoneyID(playerid) < strval(inputtext)*30) return SCM(playerid, COLOR_GREY, !"У Вас не хватает денег");

				new money = strval(inputtext)*30;
				GivePlayerMoneyLog(playerid, -money);

				PI[playerid][data_MET] += strval(inputtext);
   			}
		}
		case dialog_CARDBUY:
		{
		    if(!response) return 1;
		    if(response)
		    {
				if(GetPlayerMoneyID(playerid) < 750) return SCM(playerid, COLOR_GREY,"У Вас не хватает денег");
				SCM(playerid, 0x33dd66FF, "Вы оформили медицинскую справку за 750 руб");
				PI[playerid][data_MEDCARD] = 1;
				GivePlayerMoneyLog(playerid, -750);
				if(PI[playerid][data_MEDNUM] == 0) PI[playerid][data_MEDNUM] = RandomEX(1111111, 6666666);
		    }
		}
		case dialog_DRUGBUY:
		{
		    if(!response) return 1;
			if(response)
   			{
	    	    new inputtextmetall = strval(inputtext);
     			if(inputtextmetall <= 0) return SCM(playerid, COLOR_GREY, !"Минимальное колличество - 1 единица");
				if(GetPlayerMoneyID(playerid) < inputtextmetall*50) return SCM(playerid, COLOR_GREY, !"У Вас не хватает денег");
     			if(inputtextmetall+PI[playerid][data_DRUGS] > 1000) return SCMf(playerid, COLOR_GREY, "Макасимальное колличество единиц: 1000 единиц, наркотиков у Вас: %d", PI[playerid][data_DRUGS]);
				new money = inputtextmetall*50;
				if(PI[playerid][pMoney] < money) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег");
				PI[playerid][data_DRUGS] += inputtextmetall;
				GivePlayerMoneyLog(playerid, -money);
   			}
		}
		case 7621:
		{
			if(ArmyStorage == 0) return SendClientMessage(playerid, COLOR_GREY, !"Склад организации 'Воинская часть' закрыт игровым мастером");
			switch(listitem)
   			{
   			    case 0: 
				{
   			        GiveWeapon(playerid, 6, 1);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Лопату со склада (-1 кг металла, -1 шт патронов)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
                    army_wh[0] -=1;
                    army_wh[1] -=1;
   			    }
   			    case 1: 
				{
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Бронижелет со склада (-10 кг металла)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
					SetPlayerArmourAC(playerid, 100);
					army_wh[0] -=10;
   			    }
   			    case 2: 
				{
   			        GiveWeapon(playerid, 24, 35);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Desert Eagle со склада (-6 кг металла, -35 шт патронов)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
				    army_wh[0] -=6;
                    army_wh[1] -=35;
   			    }
   			    case 3:
				{
   			        GiveWeapon(playerid, 29, 90);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF,"[R] %s %s[%d] взял AKC-74Y со склада (-8 кг металла, -90 шт патронов)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
					army_wh[0] -=8;
                    army_wh[1] -=90;
   			    }
   			    case 4:
				{
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"'АК-47' доступен с 2 ранга");
   			        GiveWeapon(playerid, 30, 90);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял AK-47 со склада (-9 кг металла, -90 шт патронов)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
					army_wh[0] -=9;
                    army_wh[1] -=90;
   			    }
   			    case 5: 
				{
   			        if(PI[playerid][pRang] < 3) return SCM(playerid, COLOR_GREY,"'Country Rifle' доступна с 3 ранга");
   			        GiveWeapon(playerid, 33, 10);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Country Rifle со склада (-10 кг металла, -10 шт патронов)",rang_army[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
					army_wh[0] -=10;
                    army_wh[1] -=10;
   			    }
   			}
			new str_1[144];
			format(str_1,sizeof(str_1),"{f18c2b}Армейский склад\n\n{FFFFFF}Металл: %d кг.\n{fccf39}Патроны: %d шт.",army_wh[0],army_wh[1]);
			UpdateDynamic3DTextLabelText(army_sklad_text, -1, str_1);
			SaveWarehouse();
		}
		case dialog_GIVEGUNMVD:
		{
			switch(listitem)
   			{
   			    case 0: 
				{
					ShowPlayerDialogf(playerid, 5981, DIALOG_STYLE_INPUT, !"{ee3366}Взять аптечки", !"Взять", !"Закрыть", "\
						{FFFFFF}Введите количество аптечек, которое Вы хотите взять:\n\
						{FFFF99}Подсказка: у Вас есть %d / 3 шт аптечек.\n\n\
						{3366cc}Вы можете взять не более 6 шт аптечек в час", PI[playerid][pHealPack]);
   			    }
   			    case 1: 
				{
					ShowPlayerDialog(playerid, 5980, DIALOG_STYLE_TABLIST_HEADERS, !"{ee3366}Оружейный склад", "\
					Оружие\tНужный ранг\tПатроны\n\
					{FFFFFF}Полицейская дубинка\t\t1+\t\t1\n\
					Полицейский жезл\t\t1+\t\t1\n\
					Бронежилет\t2+\t\t-\n\
					Балончик с краской\t\t2+\t\t500\n\
					Desert Eagle\t\t2+\t\t70\n\
					Тайзер\t\t7+\t\t70\n\
					АКС-74У\t\t3+\t\t180\n\
					АК-47\t\t5+\t\t180\n\
					Снайперская винтовка\t5+\t\t20", !"Взять", !"Закрыть");
   			    }
   			}
		}
		case 5981: 
		{
			if(PI[playerid][pHealPack] == 3) return SCM(playerid, COLOR_GREY, !"Вы не можете взять более 3-х аптечек");
			if(PI[playerid][pHealthPackKD] == 3) return SCM(playerid, COLOR_GREY, !"Вы можете взять более 3-х аптечек за час");
			if(strval(inputtext) > 3) return SCM(playerid, COLOR_GREY, !"Нельзя взять более 3-х аптечек");
			if(strval(inputtext)+PI[playerid][pHealthPackKD] > 3) return SCM(playerid, COLOR_GREY, !"Вы не можете взять такое количество аптечек");
			PI[playerid][pHealPack] += strval(inputtext);
			PI[playerid][pHealthPackKD] += strval(inputtext);
			UpdatePlayerDataInt(playerid, "HEALPACKSKLAD", PI[playerid][pHealthPackKD],8763);
			SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял %d аптечек со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid, strval(inputtext));
		}
		case 5980: 
		{
			switch(listitem) 
			{
   			    case 0: 
				{
   			        GiveWeapon(playerid, 3, 1);
   			        SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял полицейскую дубинку со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 1: 
				{
				   	GiveWeapon(playerid, 12, 1);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял полицейский жезл со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
				}
   			    case 2: 
				{					
   			    	if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY, !"Бронежилет доступен со 2 ранга");
				   	SetPlayerArmourAC(playerid, 100);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял бронежелет со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 3: 
				{
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY, !"Балончик с краской доступен со 2 ранга");
   			        GiveWeapon(playerid, 41, 500);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял балончик с краской со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 4: 
				{
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY, !"Desert Eagle доступен со 2 ранга");
   			        GiveWeapon(playerid, 24, 70);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Desert Eagle со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 5: 
				{
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY, !"Тайзер доступен с 2 ранга");
   			        GiveWeapon(playerid, 23, 70);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял Тайзер",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 6: 
				{
                    if(PI[playerid][pRang] < 3) return SCM(playerid, COLOR_GREY,"АКС-74У доступен с 3 ранга");
   			        GiveWeapon(playerid, 29, 180);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял АКС-74У со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 7: 
				{
                    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"АК-47 с 5 ранга");
   			        GiveWeapon(playerid, 30, 180);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял АК-47 со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			    case 8: 
				{
                    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Снайперская винтовка доступна с 5 ранга");
   			        GiveWeapon(playerid, 34, 20);
					SendFractionMessagef(PI[playerid][pMember],0x99ccccFF, "[R] %s %s[%d] взял снайперскую винтовку со склада",rang_police[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid);
   			    }
   			}
		}
		case 4980:
		{
			switch(listitem)
   			{

   			    case 0:
   			    {
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"Бронежилет доступен со 2 ранга");
   			        SetPlayerArmourAC(playerid, 100);
   			    }
   			    case 1:
   			    {
   			        GiveWeapon(playerid, 3, 1);
   			    }
   			    case 2:
   			    {
   			        GiveWeapon(playerid, 41, 300);
   			    }
   			    case 3:
   			    {
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"Desert Eagle доступен со 2 ранга");
   			        GiveWeapon(playerid, 24, 65);
   			    }
   			    case 4:
   			    {
                    if(PI[playerid][pRang] < 3) return SCM(playerid, COLOR_GREY,"АКС-74У доступен с 3 ранга");
   			        GiveWeapon(playerid, 29, 90);
   			    }
   			    case 5:
   			    {
                    if(PI[playerid][pRang] < 4) return SCM(playerid, COLOR_GREY,"АК-47 доступен с 4 ранга");
   			        GiveWeapon(playerid, 30, 90);
   			    }
   			    case 6:
   			    {
                    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Снайперская винтовка доступна с 5 ранга");
   			        GiveWeapon(playerid, 34, 20);
   			    }
   			}
		}
		case dialog_GIVEGUNPRAVO:
		{
			switch(listitem)
   			{
   			    case 0:
   			    {
                    if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"Desert Eagle доступен с 3 ранга");
   			        GiveWeapon(playerid, 24, 45);
   			    }
   			    case 1:
   			    {
   			        if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"Тайзер доступен с 2 ранга");
   			        GiveWeapon(playerid, 23, 45);
   			    }
   			    case 2:
   			    {
   			        if(PI[playerid][pRang] < 2) return SCM(playerid, COLOR_GREY,"АКС-74У");
   			        GiveWeapon(playerid, 29, 90);
   			    }
   			}
		}
		case dialog_schoolinfo: {
		    if(!response) return 1;
			if(response) return 1;
		}
		case dialog_schoolclose: if(response || !response) return PI[playerid][data_schooltestlevel] = 0;
		case dialog_schooltest: {
  			if(!response) return 1;
            if(response) return ShowPlayerDialog(playerid, dialog_schooltest1, DIALOG_STYLE_LIST, "{ee3366}Максимальная скорость в населенных пунктах", "1. 90 км час\n2. 60 км час\n3. 30 км час", "Выбрать", "");
		}
		case dialog_schooltest1: {
  			if(response || !response) {
				switch(listitem) {
		        	case 0: return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{ee3366}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
	       			case 1: {
	   					PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{ee3366}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
		       		}
		        	case 2: return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{ee3366}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
				}
			}
		}
		case dialog_schooltest2: {
		    if(response || !response) {
	   			switch(listitem) {
	        		case 0: {
	        			PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{ee3366}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
	        		}
	        		case 1: return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{ee3366}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
	        		case 2: return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{ee3366}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
				}
	    	}
		}
		case dialog_schooltest3: {
		    if(response || !response) {
	   			switch(listitem) {
	        		case 0: return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{ee3366}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
				    case 1: {
	    				PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{ee3366}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
	    			}
	   	 			case 2: return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{ee3366}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
				}
			}
		}
		case dialog_schooltest4: 
		{
			if(response || !response) 
			{
	   			switch(listitem) 
				{
	        		case 0: 
					{
						if(PI[playerid][data_schooltestlevel] > 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы сдали на водительские права"));
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							PI[playerid][pDriveLicense] = 1;
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
						}
						if(PI[playerid][data_schooltestlevel] < 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы не сдали на водительские права"));
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали на права.", PI[playerid][data_schooltestlevel]);
						}
					}
					case 1: 
					{
						PI[playerid][data_schooltestlevel] += 1;
						if(PI[playerid][data_schooltestlevel] > 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы сдали на водительские права"));
							PI[playerid][pDriveLicense] = 1;
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
						}
						if(PI[playerid][data_schooltestlevel] < 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы не сдали на водительские права"));
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали  на права.", PI[playerid][data_schooltestlevel]);
						}
					}
	      			case 2: 
					{
						if(PI[playerid][data_schooltestlevel] > 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы сдали на водительские права"));
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							PI[playerid][pDriveLicense] = 1;
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
						}
						if(PI[playerid][data_schooltestlevel] < 2) 
						{
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы не сдали на водительские права"));
							return ShowPlayerDialogf(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, !"{ee3366}Автошкола", !"Закрыть", !"", "Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали  на права.", PI[playerid][data_schooltestlevel]);
						}
	      			}
				}
	    	}
		}
		case dialog_dalnoboy:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(GetPVarInt(playerid,"Counting_Dalnoboy") > gettime()) return SCM(playerid, COLOR_GREY, !"Начинать работу дальнобойщика можно раз в 2 минуты");
		    	
				PI[playerid][pTempJob] = 1;
				PI[playerid][pStartJob] = 9;
		        SCM(playerid, COLOR_YELLOW, !"Отвезите продукты на предприятие. Оно отмечено на карте красной меткой");
				SCM(playerid, COLOR_YELLOW, !"Чтобы завершить работу, покиньте транспорт, после чего работа завершиться автоматически");
				SCM(playerid, COLOR_YELLOW, !"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");

				dalnoboy_car[playerid] = CreateVehicle(514,-643.8362,-2032.3152,41.3401,0,8,8,-1);
				dalnoboy_trayler[playerid] = CreateVehicle(435,-643.5872,-2013.6486,40.9900,0,1,1,-1);
			    CarInfo[dalnoboy_car[playerid]][cFuel] = 150;
			    CarInfo[dalnoboy_car[playerid]][cCreate] = 1;

      			switch(random(5))
      			{
      			    case 0: SetPlayerRaceCheckpoint(playerid, 1, -2351.3767,258.0399,23.6756, -2351.3767,258.0399,23.6756, 10);
      			    case 1: SetPlayerRaceCheckpoint(playerid, 1, 2978.3062,-720.5325,12.7500, 2978.3062,-720.5325,12.7500, 10);
      			    case 2: SetPlayerRaceCheckpoint(playerid, 1, 2325.0569,-264.0050,1.6073, 2325.0569,-264.0050,1.6073, 10);
      			    case 3: SetPlayerRaceCheckpoint(playerid, 1, 1976.2108,1652.2156,15.9200, 1976.2108,1652.2156,15.9200, 10);
      			    case 4: SetPlayerRaceCheckpoint(playerid, 1, -442.7106,-1575.0638,40.9470, -442.7106,-1575.0638,40.9470, 10);
      			}
				dalnaboy_check_pricep[playerid] = SetTimerEx("CheckDalnaboyPricep", 1000, true, "i", playerid);

			    PutPlayerInVehicleAC(playerid, dalnoboy_car[playerid], 0);
			    AttachTrailerToVehicle(dalnoboy_trayler[playerid], dalnoboy_car[playerid]);
			    DisableRemoteVehicleCollisions(playerid, 1);

			    SetPVarInt(playerid,"Counting_Dalnoboy", gettime() + 120);
		    }
		}
		case dialog_ENTER_HOUSE: {
            if(!response) return 1;
            if(response) {
                new h = GetPVarInt(playerid, "house");
                if(!PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ])) return 1;
                if(HOUSE_DATA[h][data_LOCK] == 0 || !strcmp(PI[playerid][pName],HOUSE_DATA[h][data_OWNER],true)) {
	                SetPlayerPosAC(playerid,1113.0996,1528.0840,905.8000);
	                SetPlayerFacingAngle(playerid, 357.8026);
	                SetPlayerInterior(playerid, HOUSE_DATA[h][data_INT]+1);
	                SetPlayerVirtualWorld(playerid, HOUSE_DATA[h][data_ID]);
	                Freeze(playerid);
	            }
	            else cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Этот дом закрыт"));
            }
        }
        case dialog_EXIT_HOUSE: {
            if(!response) return 1;
            if(response) {
                new h = GetPVarInt(playerid, "house");
                if(!PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ])) return 1;
				SetPlayerPosAC(playerid,HOUSE_DATA[h][data_CARX],HOUSE_DATA[h][data_CARY],HOUSE_DATA[h][data_CARZ]);
 				SetPlayerFacingAngle(playerid,HOUSE_DATA[h][data_CARANGLE]);
 				SetCameraBehindPlayer(playerid);
	            SetPlayerInterior(playerid,0);
	            SetPlayerVirtualWorld(playerid,0);
            }
        }
		case dialog_SKLAD: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
		                if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_1, DIALOG_STYLE_INPUT, "{ee3366}Взять металл","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 1: {
		                if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_3, DIALOG_STYLE_INPUT, "{ee3366}Взять патроны","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 2: {
		                if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_5, DIALOG_STYLE_INPUT, "{ee3366}Взять вещества","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 3: ShowPlayerDialog(playerid, dialog_SKLAD_2, DIALOG_STYLE_INPUT, "{ee3366}Положить металл","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		            case 4: ShowPlayerDialog(playerid, dialog_SKLAD_4, DIALOG_STYLE_INPUT, "{ee3366}Положить патроны","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		            case 5: ShowPlayerDialog(playerid, dialog_SKLAD_6, DIALOG_STYLE_INPUT, "{ee3366}Положить вещества","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		        }
		    }
		}
		case dialog_SKLAD_1:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
				if(PI[playerid][pMember] == 5 && rostov_wh[3] != 0 || PI[playerid][pMember] == 6 && gopota_wh[3] != 0 || PI[playerid][pMember] == 7 && kavkaz_wh[3]) return SCM(playerid, COLOR_GREY,"Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][pMember])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 80 металла");
						if(rostov_wh[0] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						rostov_wh[0] -= strval(inputtext)+PI[playerid][data_MET];
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d металла со склада",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 80 металла");
						if(gopota_wh[0] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						gopota_wh[0] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d металла со склада",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
						if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 80 металла");
					    if(kavkaz_wh[0] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						kavkaz_wh[0] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d металла со склада", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_2:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    switch(PI[playerid][pMember])
				{
					case 5:
					{
					    if(strval(inputtext)< 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно металла");
						if(strval(inputtext)+rostov_wh[0] > 6000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
                        PI[playerid][pProgressMetall] += strval(inputtext);
						rostov_wh[0] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d металла на склад",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно металла");
						if(strval(inputtext)+gopota_wh[0] > 6000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
                        PI[playerid][pProgressMetall] += strval(inputtext);
						gopota_wh[0] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d металла на склад",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно металла");
						if(strval(inputtext)+kavkaz_wh[0] > 6000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
                        PI[playerid][pProgressMetall] += strval(inputtext);
						kavkaz_wh[0] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d металла на склад", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_3:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
   			    if(PI[playerid][pMember] == 5 && rostov_wh[3] != 0 || PI[playerid][pMember] == 6 && gopota_wh[3] != 0 || PI[playerid][pMember] == 7 && kavkaz_wh[3]) return SCM(playerid, COLOR_GREY,"Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][pMember])
				{
					case 5:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(rostov_wh[1] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						rostov_wh[1] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d патронов со склада",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();

					}
					case 6:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(gopota_wh[1] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						gopota_wh[1] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d патронов со склада",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SCM(playerid, COLOR_GREY,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(kavkaz_wh[1] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						kavkaz_wh[1] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d патронов со склада", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_4:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    switch(PI[playerid][pMember])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно патронов");
						if(strval(inputtext)+rostov_wh[1] > 50000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
                        PI[playerid][pProgressAmmo]  += strval(inputtext);
						rostov_wh[1] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d патронов на склад",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно патронов");
						if(strval(inputtext)+gopota_wh[1] > 50000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
                        PI[playerid][pProgressAmmo]  += strval(inputtext);
						gopota_wh[1] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d патронов на склад",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_1[256];
						format(str_1,sizeof(str_1),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_1);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно патронов");
						if(strval(inputtext)+kavkaz_wh[1] > 50000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
                        PI[playerid][pProgressAmmo]  += strval(inputtext);
						kavkaz_wh[1] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d патронов на склад", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_1[256];
						format(str_1,sizeof(str_1),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_1);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_5:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][pRang] < 5) return SCM(playerid, COLOR_GREY,"Склад организации доступен с 5 ранга");
   			    if(PI[playerid][pMember] == 5 && rostov_wh[3] != 0 || PI[playerid][pMember] == 6 && gopota_wh[3] != 0 || PI[playerid][pMember] == 7 && kavkaz_wh[3]) return SCM(playerid, COLOR_GREY,"Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][pMember])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(rostov_wh[2] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_DRUGS]  > 2000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						rostov_wh[2] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d наркотиков со склада",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();

					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(gopota_wh[2] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] >= 0) if(strval(inputtext)+PI[playerid][data_DRUGS] > 2000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						gopota_wh[2] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d наркотиков со склада",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(kavkaz_wh[2] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_DRUGS] > 2000) return SCM(playerid, COLOR_GREY,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						kavkaz_wh[2] -= strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] взял %d наркотиков со склада", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_6:
		{
		    if(!response) return 1;
			if(response)
   			{
			    switch(PI[playerid][pMember])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно наркотиков");
						if(strval(inputtext)+rostov_wh[2] > 12000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
                        PI[playerid][pProgressDrugs] += strval(inputtext);
						rostov_wh[2] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d наркотиков на склад",rang_skinhead[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно наркотиков");
						if(strval(inputtext)+gopota_wh[2] > 12000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
                        PI[playerid][pProgressDrugs] += strval(inputtext);
						gopota_wh[2] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d наркотиков на склад",rang_gopota[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
					    UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SCM(playerid, COLOR_GREY,"У Вас недостаточно наркотиков");
						if(strval(inputtext)+kavkaz_wh[2] > 12000) return SCM(playerid, COLOR_GREY,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
                        PI[playerid][pProgressDrugs] += strval(inputtext);
						kavkaz_wh[2] += strval(inputtext);
						SendFractionMessagef(PI[playerid][pMember],0x67ab00FF, "[R] %s %s[%d] положил %d наркотиков на склад", rang_kavkaz[PI[playerid][pRang]-1][frName],PI[playerid][pName],playerid,strval(inputtext));
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][pMember]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case 6751:
		{
			if(!response) return 1;
			if(response)
			{
	  			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
				    new b = GetPVarInt(playerid,"business"), cena = BizInfo[b][data_CENA]*strval(inputtext), car = GetPlayerVehicleID(playerid);

		   			if(strval(inputtext) <= 0) 
						return SCM(playerid, COLOR_GREY, !"Введите от 1 до 50 литров.");
					if(strval(inputtext)+CarInfo[car][cFuel] > 50) 
						return SCM(playerid, COLOR_GREY, !"В топливном баке можно перевозить не более 50 литров бензина");
                    if(strval(inputtext) > BizInfo[b][bProduct]  && BizInfo[b][bOwned] == 1) 
						return SCM(playerid, COLOR_GREY, !"У данной АЗС недостаточно бензина");
					if(GetPlayerMoneyID(playerid) < cena) 
						return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
                    
					
					BizInfo[b][bProduct] -= strval(inputtext);
					BizInfo[b][bMoney] += cena;
					CarInfo[car][cFuel] += strval(inputtext);

					GivePlayerMoneyLog(playerid,-cena);
					UpdateBusinessData(b);
				}
			}
		}
		case 6752:
		{
			if(!response) return 1;
			if(response)
			{
	  			new b = GetPVarInt(playerid,"business"), cena = BizInfo[b][data_CENA]*20;
				if(PI[playerid][pCanisters] == 1) 
					return SCM(playerid, COLOR_GREY, !"У вас уже есть канистра. Чтобы заправить автомобиль, просто воспользуйтесь командой /fuel.");
				if(10 > BizInfo[b][bProduct] && BizInfo[b][bOwned] == 1) 
					return SCM(playerid, COLOR_GREY, !"Увы, на складе недостаточно топлива.");
				if(GetPlayerMoneyID(playerid) < cena) 
					return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");

				BizInfo[b][bProduct] -= 10;
				BizInfo[b][bMoney] += cena;
				GivePlayerMoneyLog(playerid,-cena);
				UpdateBusinessData(b);
				PI[playerid][pCanisters] = 1;
				SCM(playerid, COLOR_GREEN, "[Информация]: {FFFFFF}Поздравляю! Теперь у вас есть канистра с бензином. Для заправки автомобиля используйте команду /fuel.");
			}
		}
		case 6753: 
		{
		    if(!response) return 1;
			if(response) 
			{
				new b = GetPVarInt(playerid,"business"), cena = BizInfo[b][data_CENA]*30;

				if(PI[playerid][data_FIXCOMPL] >= 3) 
					return SCM(playerid, COLOR_GREY, !"У Вас уже есть ремонтный комплект, используйте /fix для починки");
				if(GetPlayerMoneyID(playerid) < cena) 
					return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");

				BizInfo[b][bMoney] += cena;
				GivePlayerMoneyLog(playerid,-cena);
				UpdateBusinessData(b);
				PI[playerid][data_FIXCOMPL] = 1;
				SCM(playerid, COLOR_GREEN, "Вы приобрели ремонтный комплект. Для его использования введите команду: /fix.");
			}
		}
		case 7242: {
			if !response *then {
				clearDialogTimer(playerid);
				return SCM(playerid, COLOR_GREY, "Ожидайте..");
			}
			if pDialogCurrectTime[playerid] + 2 > gettime() *then
				return 1;

	    	new id = PI[GetPVarInt(playerid, "from_player")][pMember];
			new idpl = GetPVarInt(playerid, "from_player");
	    	DeletePVar(playerid, "from_player");
			PI[playerid][pMember] = id;
			PI[playerid][pRang] = 1;
			PI[playerid][pOrgSkin] = PI[playerid][pSkin];
			SetPlayerColorEx(playerid);
			PI[playerid][data_JOB] = 0;
			if(PI[playerid][pSex] == 1)
			{
				switch(PI[playerid][pMember])
				{
					case 1:PI[playerid][pOrgSkin] = 57;
					case 2:PI[playerid][pOrgSkin] = 179;
					case 3:PI[playerid][pOrgSkin] = 280;
					case 4:PI[playerid][pOrgSkin] = 71;
					case 5:PI[playerid][pOrgSkin] = 8;
					case 6:PI[playerid][pOrgSkin] = 115;
					case 7:PI[playerid][pOrgSkin] = 123;
					case 8:PI[playerid][pOrgSkin] = 15;
				}
			}
			if(PI[playerid][pSex] == 2)
			{
				switch(PI[playerid][pMember])
				{
					case 1:PI[playerid][pOrgSkin] = 216;
					case 2:PI[playerid][pOrgSkin] = 191;
					case 3:PI[playerid][pOrgSkin] = 141;
					case 4:PI[playerid][pOrgSkin] = 194;
					case 5:PI[playerid][pOrgSkin] = 13;
					case 6:PI[playerid][pOrgSkin] = 13;
					case 7:PI[playerid][pOrgSkin] = 13;
					case 8:PI[playerid][pOrgSkin] = 12;
				}
			}
			SetPlayerSkinAC(playerid,PI[playerid][pOrgSkin]);
			SetPlayerTeam(playerid, PI[playerid][pMember]);
		 	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
            SCMf(playerid, -1, "Поздравляем! Вы вступили в организацию {ffb614}'%s'", Fraction_Name[PI[playerid][pMember]]);
            SCM(playerid, -1, !"Используйте {ffb614}/setspawn{FFFFFF} для изменения спавна и {ffb614}/menu > Список команд для помощи");
            SCMf(idpl, 0x36e96cFF, "%s[%d] вступил в организацию по Вашему предложению. Игрок включён в стандартную группу", PI[playerid][pName], playerid);
            if(PI[playerid][pPassiveMode] == 1)
			{
				SCM(playerid, COLOR_HINT, !"[Пасивный режим]: {FFFFFF}Пасивный режим был выключен! Причина: вступление в организацию");
				PI[playerid][pPassiveMode] = 0;
				PassiveModeOff(playerid);
	        }
			mysql_string[0] = EOS, f(mysql_string, 69, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `standart` = 1", PI[playerid][pMember]);
			mysql_tquery(mysql, mysql_string, "SetPlayerStandartGroup", "i", playerid);

			SavePlayerData(playerid);
			CheckGangWar(playerid);
		}
		case 4500:
        {
            if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация", "{FFFFFF}Что бы отключить навигатор зайдите в раздел Карта (ESC) и нажмите ПКМ", "Закрыть", "Назад");
					case 1: ShowPlayerDialog(playerid, 4506, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Важные места", "Место\tРасполажение\n\
																							1. Автовокзал №1\t\tпгт. Батырево\n\
																							2. Центарльный Банк\t\tпгт. Батырево\n\
																							3. Автосалон (импортный)\t\tпгт. Южный\n\
																							4. Автошкола\t\tпгт. Батырево\n\
																							5. Мэрия\t\tпгт. Батырево\n\
																							6. Металлобаза\tпгт. Батырево\n\
																							7. Военкомат\t\tпгт. Батырево\n\
																							8. Авторынок\t\tНижегородская область", "Отметить", "Назад");
					case 2: ShowPlayerDialog(playerid, 4505, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Временные работы", "\
																							Место\tРасполажение\n\
																							1. Ферма {e1e187}[1+ уровень]\t\t{FFFFFF}Ашан\n\
																							2. Дайвинг {e1e187}[1+ уровень]\t\t{FFFFFF}с. Раговичи\n\
																							3. Шахта {e1e187}[1+ уровень]\t\t{FFFFFF}г. Лыткарино\n\
																							4. Мясокомбинат {e1e187}[1+ уровень]\t\t{FFFFFF}г. Лыткарино", "Отметить", "Назад");
					case 3: ShowPlayerDialog(playerid, 4504, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Основные работы", "\
																							Место\tРасполажение\n\
																							1. Дальнобойщик {e1e187}[3+ уровень]\t\t{FFFFFF}г. Южный\n\
																							2. Таксист {e1e187}[1+ уровень]\t\t{FFFFFF}г. Батырвео","Отметить", "Назад");
					case 4:ShowPlayerDialog(playerid, 4503, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Государственные организации", "\
																							Место\tРасполажение\n\
																							1. Правительство\t\t пгт. Батырево\n\
																							2. Войсковая часть\t\t пгт. Батырево\n\
																							3. Полиция\t\t\t пгт. Южный\n\
																							4. БЦРБ (больница)\t\t пгт. Батырево", "Отметить", "Назад");
					case 5:ShowPlayerDialog(playerid, 4502, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Нелегальные организации", "\
																							Место\tРасполажение\n\
																							1. Скинхеды\t\t\t пгт. Батырево\n\
																							2. Гопота\t\t\t г. Южный\n\
																							3. Кавказцы\t\t\t пгт. Бусаево\n\
																							{FFFF99}4. Склад вещест\t\t пгт. Батырево", "Отметить", "Назад");
					case 6: ShowPlayerDialog(playerid, 4501, DIALOG_STYLE_LIST, "{ee3366}Развлечения", "\
																							1. Аренда лодок\n\
																							2. Казино", "Отметить", "Назад");
					case 7: return 1;
					case 8: 
					{
	                    new Float:pX, Float:pY, Float:pZ;
						new Float:Item, Float:minS;
						new Posi;
						GetPlayerPos(playerid, pX, pY, pZ);
						for(new i = 0; i < sizeof(TotalBusiness); i++) 
						{
							minS = PointToPoint(pX, pY, pZ, BizInfo[i][data_ENTERX], BizInfo[i][data_ENTERY], BizInfo[i][data_ENTERZ]);
						}
						Posi = 56;
						for(new i = 0; i < sizeof(TotalBusiness); i++)
						{
							Item = PointToPoint(pX, pY, pZ, BizInfo[i][data_ENTERX], BizInfo[i][data_ENTERY], BizInfo[i][data_ENTERZ]);
							if(Item < minS)
							{
							    minS = Item;
							    Posi = i;
							}
						}
						SCM(playerid, COLOR_GREEN, !"Местоположение ближайшей АЗС успешно отмечено в вашем GPS.");
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid, BizInfo[Posi][data_ENTERX], BizInfo[Posi][data_ENTERY], BizInfo[Posi][data_ENTERZ],5.0);
						return 1;
					}
					case 9: 
					{
	                    new Float:pX, Float:pY, Float:pZ;
						new Float:Item, Float:minS;
						new Posi;
						GetPlayerPos(playerid, pX, pY, pZ);
						for(new i = 0; i < sizeof(Bankomats); i++) minS = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
						Posi = 56;
						for(new i = 0; i < sizeof(Bankomats); i++)
						{
							Item = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
							if(Item < minS)
							{
							    minS = Item;
							    Posi = i;
							}
						}
						SCM(playerid, COLOR_GREEN, !"Местоположение ближайшего банкомата успешно отмечено в вашем GPS.");
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid, Bankomats[Posi][0], Bankomats[Posi][1], Bankomats[Posi][2],5.0);
						return 1;
					}
					case 10: 
					{
						DisablePlayerCheckpoint(playerid);
						DeletePVar(playerid, "gps_pos_x");
						DeletePVar(playerid, "gps_pos_y");
						DeletePVar(playerid, "gps_pos_z");
						return 1;
					}
				}
			}
		}
		case 4501:
		{
		    if(!response) return ShowGPS(playerid);
		    if(response)
		    {
				DisablePlayerCheckpoint(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2808.5137);
						SetPVarFloat(playerid, "gps_pos_y", -2148.5676);
						SetPVarFloat(playerid, "gps_pos_z", 19.0471);
				        SetPlayerCheckpoint(playerid,2808.5137,-2148.5676,19.0471,5.0);
		            }
		            case 1:
		            {
		            	SetPVarFloat(playerid, "gps_pos_x", 1887.9885);
						SetPVarFloat(playerid, "gps_pos_y", 1895.7618);
						SetPVarFloat(playerid, "gps_pos_z", 13.2227);
				        SetPlayerCheckpoint(playerid,2313.8247,-1924.8029,22.4338,5.0);
		            }
				}
				cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			}
		}
		case 4503:
		{
		    if(!response) return ShowGPS(playerid);
		    {
				DisablePlayerCheckpoint(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1825.0465);
						SetPVarFloat(playerid, "gps_pos_y", 2096.2244);
						SetPVarFloat(playerid, "gps_pos_z", 15.8515);
				        SetPlayerCheckpoint(playerid,1825.0465,2096.2244,15.8515,5.0);
		            }
		            case 1:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1896.4519);
						SetPVarFloat(playerid, "gps_pos_y", 1721.5980);
						SetPVarFloat(playerid, "gps_pos_z", 15.8050);
				        SetPlayerCheckpoint(playerid,1896.4519,1721.5980,15.8050,5.0);
		            }
		            case 2:
					{
					    SetPVarFloat(playerid, "gps_pos_x", 2403.7036);
						SetPVarFloat(playerid, "gps_pos_y", -1852.4626);
						SetPVarFloat(playerid, "gps_pos_z", 21.9308);
				        SetPlayerCheckpoint(playerid,2403.7036,-1852.4626,21.9308,5.0);
					}
		            case 3:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2100.3179);
						SetPVarFloat(playerid, "gps_pos_y", 1819.1858);
						SetPVarFloat(playerid, "gps_pos_z", 12.2200);
				        SetPlayerCheckpoint(playerid,2100.3179,1819.1858,12.2200,5.0);
		            }
		        }
				cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		    }
		}
		case 4502:
		{
		    if(!response) return ShowGPS(playerid);
		    {
				DisablePlayerCheckpoint(playerid);
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1425.3506);
						SetPVarFloat(playerid, "gps_pos_y", 2371.1912);
						SetPVarFloat(playerid, "gps_pos_z", 13.6925);
				        SetPlayerCheckpoint(playerid,1425.3506,2371.1912,13.6925,5.0);
		            }
		            case 1:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2216.6448);
						SetPVarFloat(playerid, "gps_pos_y", -2572.8618);
						SetPVarFloat(playerid, "gps_pos_z", 21.9633);
				        SetPlayerCheckpoint(playerid,2216.6448,-2572.8618,21.9633,5.0);
		            }
		            case 2:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", -543.7330);
						SetPVarFloat(playerid, "gps_pos_y", -1386.7384);
						SetPVarFloat(playerid, "gps_pos_z", 41.2275);
				        SetPlayerCheckpoint(playerid,-543.7330,-1386.7384,41.2275,5.0);
		            }
		            case 3:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1894.9059);
						SetPVarFloat(playerid, "gps_pos_y", 1186.5181);
						SetPVarFloat(playerid, "gps_pos_z", 30.3239);
				        SetPlayerCheckpoint(playerid,1894.9059,1186.5181,30.3239,5.0);
		            }
		        }
				cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		    }
		}
		case 4506:
		{
		    if(!response) return ShowGPS(playerid);
			if(response)
			{
				DisablePlayerCheckpoint(playerid);
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1811.0527);
						SetPVarFloat(playerid, "gps_pos_y", 2510.2866);
						SetPVarFloat(playerid, "gps_pos_z", 15.6717);
				        SetPlayerCheckpoint(playerid,1811.0527,2510.2866,15.6717,5.0);
			        }
					case 1:
					{
			            SetPVarFloat(playerid, "gps_pos_x", 1821.0479);
						SetPVarFloat(playerid, "gps_pos_y", 2028.2125);
						SetPVarFloat(playerid, "gps_pos_z", 15.8697);
				        SetPlayerCheckpoint(playerid,1821.0479,2028.2125,15.8697,5.0);
					}
					case 2:
					{
					    SetPVarFloat(playerid, "gps_pos_x", 2325.5154);
						SetPVarFloat(playerid, "gps_pos_y", -1803.9813);
						SetPVarFloat(playerid, "gps_pos_z", 22.4540);
				        SetPlayerCheckpoint(playerid, 2325.5154,-1803.9813,22.4540,5.0);
					}
					case 3:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1854.3938);
						SetPVarFloat(playerid, "gps_pos_y", 1453.0250);
						SetPVarFloat(playerid, "gps_pos_z", 10.0355);
				        SetPlayerCheckpoint(playerid,1854.3938,1453.0250,10.0355,5.0);
					}
					case 4:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1824.3256);
						SetPVarFloat(playerid, "gps_pos_y", 2095.8198);
						SetPVarFloat(playerid, "gps_pos_z", 15.8522);
				        SetPlayerCheckpoint(playerid,1824.3256,2095.8198,15.8522,5.0);
					}
					case 5:
					{
						SetPVarFloat(playerid, "gps_pos_x", 2776.2747);
						SetPVarFloat(playerid, "gps_pos_y", 2699.4124);
						SetPVarFloat(playerid, "gps_pos_z", 16.7200);
				        SetPlayerCheckpoint(playerid,2776.2747,2699.4124,16.7200,5.0);
					}
					case 6:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1913.6172);
						SetPVarFloat(playerid, "gps_pos_y", 2300.4441);
						SetPVarFloat(playerid, "gps_pos_z", 15.5697);
				        SetPlayerCheckpoint(playerid,1913.6172,2300.4441,15.5697,5.0);
					}
					case 7:
					{
						SetPVarFloat(playerid, "gps_pos_x", 2452.4082);
						SetPVarFloat(playerid, "gps_pos_y", -756.4071);
						SetPVarFloat(playerid, "gps_pos_z", 12.0969);
				        SetPlayerCheckpoint(playerid, 2452.4082,-756.4071,12.0969,5.0);
					}
				}
				cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			}
		}
		case 4504:
		{
		    if(!response) return ShowGPS(playerid);
			if(response)
			{
				DisablePlayerCheckpoint(playerid);
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1966.2675);
						SetPVarFloat(playerid, "gps_pos_y", -2603.7898);
						SetPVarFloat(playerid, "gps_pos_z", 10.8149);
				        SetPlayerCheckpoint(playerid,1966.2675,-2603.7898,10.8149,5.0);
			        }
			        case 1:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1783.8827);
						SetPVarFloat(playerid, "gps_pos_y", 2296.9661);
						SetPVarFloat(playerid, "gps_pos_z", 15.7667);
				        SetPlayerCheckpoint(playerid,1783.8827,2296.9661,15.7667,5.0);
			        }
			        
				}
			}
		}
		case 4505:
		{
		    if(!response) return ShowGPS(playerid);
			if(response)
			{
				DisablePlayerCheckpoint(playerid);
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 2129.8027);
						SetPVarFloat(playerid, "gps_pos_y", 1791.4589);
						SetPVarFloat(playerid, "gps_pos_z", 12.0000);
				        SetPlayerCheckpoint(playerid,2129.8027,1791.4589,12.0000,5.0);
			        }
			        case 1:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1989.3259);
						SetPVarFloat(playerid, "gps_pos_y", 992.9821);
						SetPVarFloat(playerid, "gps_pos_z", 15.3557);
				        SetPlayerCheckpoint(playerid,1989.3259,992.9821,15.3557,5.0);
			        }
			        case 2:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 2776.2747);
						SetPVarFloat(playerid, "gps_pos_y", 2699.4124);
						SetPVarFloat(playerid, "gps_pos_z", 16.7200);
				        SetPlayerCheckpoint(playerid,2776.2747,2699.4124,16.7200,5.0);
			        }
			        case 3:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", -2242.8171);
						SetPVarFloat(playerid, "gps_pos_y", 265.1432);
						SetPVarFloat(playerid, "gps_pos_z", 24.5337);
				        SetPlayerCheckpoint(playerid,-2242.8171,265.1432,24.5337,5.0);
			        }
			        case 4:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 2398.7961);
						SetPVarFloat(playerid, "gps_pos_y", -972.8578);
						SetPVarFloat(playerid, "gps_pos_z", 2.1973);
				        SetPlayerCheckpoint(playerid,2398.7961,-972.8578,2.1973,5.0);
			        }
				}
				cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			}
		}
		case dialog_EAT_MENU: 
		{
		    new b = GetPVarInt(playerid,"business");
		    if(!response) return 1;
			if(response) {
			    switch(listitem) 
				{
			        case 0: 
					{
			            new cena = 100;
	                    if(BizInfo[b][bProduct] <= 0  && BizInfo[b][bOwned] == 1) return SCM(playerid, COLOR_GREY,"В бизнесе недостаточно продуктов");
						if(GetPlayerMoneyID(playerid) < cena) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
						GivePlayerMoneyLog(playerid,-cena);
						BizInfo[b][bMoney] += cena;
						BizInfo[b][bProduct] -= 1;
						if(PI[playerid][data_DRINK] <= 90) PI[playerid][data_DRINK] += 10;
						else PI[playerid][data_DRINK] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s выпил спранк",PI[playerid][pName]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил спранк", 0xFF99CCFF, 20.0, 4000);
					}
		         	case 1: {
			            new cena = 150;
	                    if(BizInfo[b][bProduct] <= 0  && BizInfo[b][bOwned] == 1) return SCM(playerid, COLOR_GREY,"В бизнесе недостаточно продуктов");
						if(GetPlayerMoneyID(playerid) < cena) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
						GivePlayerMoneyLog(playerid,-cena);
						BizInfo[b][bMoney] += cena;
						BizInfo[b][bProduct] -= 1;
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s выпил кофе",PI[playerid][pName]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил кофе", 0xFF99CCFF, 20.0, 4000);

			        }
			       	case 2: {
			            new cena = 250;
	                    if(BizInfo[b][bProduct] <= 0  && BizInfo[b][bOwned] == 1) return SCM(playerid, COLOR_GREY,"В бизнесе недостаточно продуктов");
						if(GetPlayerMoneyID(playerid) < cena) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
						GivePlayerMoneyLog(playerid,-cena);
						BizInfo[b][bMoney] += cena;
						BizInfo[b][bProduct] -= 1;
						new Float:hp;
						GetPlayerHealth(playerid, hp);
						SetPlayerHealthAC(playerid, hp+30);
						if(PI[playerid][pSatiety] <= 70) PI[playerid][pSatiety] += 30;
						else PI[playerid][pSatiety] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s съела бургер",PI[playerid][pName]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "съела бургер", 0xFF99CCFF, 20.0, 4000);
			        }
			    }
			    ShowEatMenu(playerid);
			}
		}
		case 101: 
		{
		    if(!response) return 1;
		    if(response) 
			{
			    switch(listitem) 
				{
			        case 0: ShowStats(playerid);
			        case 1: PassiveMode(playerid);
			        case 2: callcmd::help(playerid);
					case 3: ShowHotKeys(playerid);
					case 4: ReportDialog(playerid);
					case 5: ShowSettings(playerid);
					case 6: ShowDialogRule(playerid);
                    case 7: ShowDialogResurs(playerid);
			        case 8: ChangeNameMenu(playerid);
                    case 9: 
					{
						if(!IsPlayerLogged{playerid}) return 1;
						f(mysql_string, 86, "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e'",PI[playerid][pName]);
						mysql_tquery(mysql, mysql_string, "CheckBlackListPlayer", "d", playerid);
					}
					case 10: 
					{
						new str_q[68];
						mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'",PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "LoadDonate", "i", playerid);
					}
			    }
			}
		}
		case dialog_HOUSE:
  		{
			if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            new h = PI[playerid][data_HOUSE];
                        ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о доме", !"Закрыть", !"", "\
							{FFFFFF}Номер дома: {FFFF99}%d\n\
							{FFFFFF}Гос. цена: {FFFF99}%d\n\n\
							{CCCC33}Оплачен на %d дня/дней", h+1,HOUSE_DATA[h][data_PRICE], HOUSE_DATA[h][data_DAY]);
			        }
			        case 1:
			        {
			            new h = PI[playerid][data_HOUSE];
	 				    if(PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ]) || PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ]))
						switch(HOUSE_DATA[h][data_LOCK])
   						{
	        				case 0: HOUSE_DATA[h][data_LOCK] = 1, cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Вы закрыли свой дом"), CEFSTR("c13537"));
       						case 1: HOUSE_DATA[h][data_LOCK] = 0, cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Вы открыли свой дом"), CEFSTR("487f5f"));
				        }
				        else SCM(playerid, COLOR_GREY, !"Необходимо находиться возле выхода/входа");
			        }
			        case 2:
			        {
						new h = PI[playerid][data_HOUSE];
			            ShowPlayerDialogf(playerid, dialog_SELL_HOUSE, DIALOG_STYLE_MSGBOX, !"{ee3366}Продажа дома", !"Продать", !"Отмена", "{FFFFFF}Вы желаете продать свой дом за {FFFF99}%d рублей{FFFFFF}?", HOUSE_DATA[h][data_PRICE]/2);
			        }
			    }
			}
  		}
  		case dialog_SELL_HOUSE:
		{
			if(!response) return 1;
			if(response)
   			{
		    	new h = PI[playerid][data_HOUSE];
		      	HOUSE_DATA[h][data_OWNED] = 0;
		      	HOUSE_DATA[h][data_DAY] = 0;
		      	PI[playerid][data_HOUSE] = INVALID_HOUSE_ID;
			 	strmid(HOUSE_DATA[h][data_OWNER], "None", 0, strlen(HOUSE_DATA[h][data_OWNER]), 24);
				GivePlayerMoneyLog(playerid,HOUSE_DATA[h][data_PRICE]/2);
			 	SCMf(playerid, 0xFFCC00AA, "Вы продали дом государству за %d рублей", HOUSE_DATA[h][data_PRICE]/2);
				UpdateHouseData(h);
				SaveHouseData(h);
			  	SavePlayerData(playerid);
   			}
		}
		case dialog_KV: {
			if(!response) return 1;
			if(response) {
			    new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
			    switch(listitem) {
			        case 0: {
						new class_kv[10],status[18],color[8];
						switch(KV_DATA[kv][data_CLASS][k]) {
							case 0: class_kv = "Хрущёвка";
							case 1: class_kv = "Простая";
							case 2: class_kv = "Элитный";
						}
						switch(KV_DATA[kv][data_LOCK][k]) {
							case 0: status = "Квартира откыта";
							case 1: status = "Квартира закрыта";
						}
						switch(KV_DATA[kv][data_LOCK][k]) {
							case 0: color = "45c068";
							case 1: color = "ee2121";
						}
						new owner[24];
						switch(k) {
							case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
							case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
							case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
							case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
							case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
							case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
						}
                        ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о квартире", !"Закрыть", !"", "\
						{FFFFFF}Название:\t\t{3377cc}%s\n\
						{FFFFFF}Номер квартиры:\t%d\n\
						{FFFFFF}Номер подъезда:\t%d\n\
						{FFFFFF}Владелец:\t\t%s\n\
						{FFFFFF}Стоимость:\t\t%d руб\n\
						{FFFFFF}Статус оплаты:\t\t%d дн\n\
						{FFFFFF}Статус:\t\t\t{%s}%s",class_kv,k+1,kv+1,owner,KV_DATA[kv][data_PRICE][k],KV_DATA[kv][data_DAY][k],color,status);
			        }
			        case 1: {
	 				    if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]) || PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]))
						switch(KV_DATA[kv][data_LOCK][k]) {
	        				case 0: KV_DATA[kv][data_LOCK][k] = 1, cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Вы закрыли свою квартиру"), CEFSTR("c13537"));
       						case 1: KV_DATA[kv][data_LOCK][k] = 0, cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Вы открыли свою квартиру"), CEFSTR("487f5f"));
				        }
				        else SCM(playerid, COLOR_GREY, !"Необходимо находиться возле выхода/входа");
			        }
			        case 2:
					{
			            ShowPlayerDialogf(playerid, dialog_SELL_KV, DIALOG_STYLE_MSGBOX, !"{ee3366}Продажа квартиры", "Продать", "Отмена", "{FFFFFF}Вы желаете продать свою квартиру за {FFFF99}%d рублей{FFFFFF}?", KV_DATA[kv][data_PRICE][k]/2);
			        }
			    }
			}
  		}
  		case dialog_SELL_KV: 
		{
			if(!response) return 1;
			if(response) 
			{
		    	new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
		      	KV_DATA[kv][data_OWNED][k] = 0;
		      	KV_DATA[kv][data_DAY][k] = 0;
		      	PI[playerid][data_KV] = INVALID_KV_ID;
		      	PI[playerid][data_PADIK] = INVALID_KV_ID;
		      	switch(k) {
					case 0: strmid(KV_DATA[kv][data_OWNER_1], "None", 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
					case 1: strmid(KV_DATA[kv][data_OWNER_2], "None", 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
					case 2: strmid(KV_DATA[kv][data_OWNER_3], "None", 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
					case 3: strmid(KV_DATA[kv][data_OWNER_4], "None", 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
					case 4: strmid(KV_DATA[kv][data_OWNER_5], "None", 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
					case 5: strmid(KV_DATA[kv][data_OWNER_6], "None", 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
				}
				GivePlayerMoneyLog(playerid,KV_DATA[kv][data_PRICE][k]/2);
			 	SCMf(playerid, 0xFFCC00AA, "Вы продали свою квартиру государству за %d рублей", KV_DATA[kv][data_PRICE][k]/2);
				UpdateKVData(kv,k);
				SaveKVData(kv);
			  	SavePlayerData(playerid);
   			}
		}
		case dialog_DONATE_VIP: 
		{
			if(!response) return 1;
			if(response) 
			{
			    if(PI[playerid][data_VIP] == 1) return SCM(playerid, COLOR_GREY, !"У Вас уже есть вип статус");
			    if(PI[playerid][pDonate] < 200) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно донат-поинтов на счету");
                PI[playerid][data_VIP] = 30;
                PI[playerid][pDonate] -= 200;
				UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate], 12457);
				UpdatePlayerDataInt(playerid, "vip", PI[playerid][data_VIP], 12457);
                SCM(playerid, COLOR_YELLOW, !"Поздравляем Вас с покупкой вип-статуса");
				SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 200 донат-поинтов.");
			}
		}
		case dialog_DONATE: 
		{
		    if(!response) return 1;
		    if(response) 
			{
		        switch(listitem) 
				{
		            case 0: 
					{
						ShowPlayerDialogf(playerid, dialog_DONATE, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация", "Закрыть", "Назад", "{FFFFFF}Текущий баланс {ee3366}%d донат-поинтов", PI[playerid][pDonate]);
					}
					case 1: ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}История", "{FFFFFF}История операций пуста", "", "Назад");
					case 2: 
					{
					 	ShowPlayerDialogf(playerid, dialog_CONVERT, DIALOG_STYLE_INPUT, "{ee3366}Конвертация донат-поинтов (ввод суммы)", "Далее", "Закрыть", "{FFFFFF}Баланс донат-поинтов: {3366cc}%d\n{FFFFFF}Ставка перевода: 1 дп. = 2000 руб\n\nВведите количество донат-поинтов, которое Вы\nхотите конвертировать в игровые рубли:", PI[playerid][pDonate]);
					}
					case 3: ShowPlayerDialog(playerid, dialog_DONATE_1, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка всех навыков стрельбы", "{FFFFFF}После покупки у Вас появятся все навыки стрельбы с оружия.\nЦена - {FFFF99}30 донат-поинтов", "Купить", "Закрыть");
					case 4: ShowPlayerDialog(playerid, dialog_DONATE_2, DIALOG_STYLE_MSGBOX, !"{ee3366}Снятие всех предупреждений", "{FFFFFF}После покупки у Вас пропадут все предупреждения\nЦена - {FFFF99}25 донат-поинтов", "Купить", "Закрыть");
		            case 5: ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{ee3366}Изменение никнейма", "{FFFFFF}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{FFFF99}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
                    case 6: callcmd::plus(playerid);
                    case 7: 
					{
                        if(PI[playerid][pDonate] < 129) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", "{FFFFFF}Для покупки военного билета нужно 129 донат-поинтов.", "Закрыть", "");
                        PI[playerid][data_MILITARY] = 1;
                        UpdatePlayerDataInt(playerid, "military", PI[playerid][data_MILITARY],10658);
			            mysql_tqueryf(mysql, "UPDATE `accounts` SET `donate` = '%d' WHERE `Name` = '%e'",PI[playerid][pDonate],PI[playerid][pName]);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 129 донат-поинтов.");
                    }
                    case 8: 
					{
                        if(PI[playerid][pDonate] < 129) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", "{FFFFFF}Для покупки 10 единиц законопослушности нужно 19 донат-поинтов.", "Закрыть", "");
                        PI[playerid][pRespect] +=10;
						UpdatePlayerDataInt(playerid, "Respect", PI[playerid][pRespect],10667);
			            mysql_tqueryf(mysql, "UPDATE `accounts` SET `donate` = '%d' WHERE `Name` = '%e'",PI[playerid][pDonate],PI[playerid][pName]);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 19 донат-поинтов.");
                    }
		            case 9: ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{ee3366}Покупка 4х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
					case 10:
					{
						new settings[700];
						format(settings, sizeof settings, "\
						{FFFFFF}1. Рога\t\t\t\t{FFFF99}%s (цена: 35 дп)\n\
						{FFFFFF}2. Костюм гробовщик\t{FFFF99}%s (цена: 35 дп)\n\
						{FFFFFF}3. Голова Микки-Мауса\t{FFFF99}%s (цена: 35 дп)\n\
						{FFFFFF}4. Голова Дед-Пула\t\t\t{FFFF99}%s (цена: 25 дп)\n\
						{FFFFFF}5. Огнемёт\t\t\t{FFFF99}%s (цена: 25 дп)\n\
						{FFFFFF}6. Красный чемодан\t\t{FFFF99}%s (цена: 10 дп)\n\
						{FFFFFF}7. Ёлка на плечо\t\t{FFFF99}%s (цена: 25 дп)\n\
						{FFFFFF}8. Ангельское кольцо \t\t{FFFF99}%s (цена: 40 дп)\n\
						{FFFFFF}9. Дигл на спину\t\t{FFFF99}%s (цена: 25 дп)\n\
						{FFFFFF}10. Шляпа фермера\t\t{FFFF99}%s (цена: 15 дп)",
						(PI[playerid][pAccessory_1]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_2]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_3]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_4]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_5]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_6]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_7]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_8]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_9]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_10]) ? ("(куплен)") : ("(не куплен)"));
						ShowPlayerDialog(playerid,dialog_DONATE_6, DIALOG_STYLE_LIST, "{ee3366}Покупка акессуаров",settings, "Купить", "Отмена");
					}
					case 11: 
					{
						new settings[700];
						format(settings, sizeof settings, "\
						{FFFFFF}1. Игровой мастер 1-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}2. Игровой мастер 2-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}3. Игровой мастер 3-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}4. Игровой мастер 4-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}5. Игровой мастер 5-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}6. Игровой мастер 6-вого уровня\t\t{FFFF99}(цена: %d дп)\n\
						{FFFFFF}7. Игровой мастер 7-вого уровня\t\t{FFFF99}(цена: %d дп)",
						150*XDON,300*XDON,450*XDON,600*XDON,750*XDON,900*XDON,1050*XDON);
						ShowPlayerDialog(playerid,dialog_DONATE_5, DIALOG_STYLE_LIST, "{ee3366}Покупка прав игрового мастера",settings, "Купить", "Отмена");
					}
				}
			}
		}
		case dialog_DONATE_6: 
		{
			if(!response) return 1;
			if(response) 
			{
				switch(listitem) 
				{
		            case 0: 
					{
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_1] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10723);
						UpdatePlayerDataInt(playerid, "Accessory_1", PI[playerid][pAccessory_1],10724);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
		            }
		            case 1: {
						if(PI[playerid][pDonate] < 35) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 35 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 35;
						PI[playerid][pAccessory_1] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10733);
						UpdatePlayerDataInt(playerid, "Accessory_4", PI[playerid][pAccessory_1],10734);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 35 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
		            }
		            case 2: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_3] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10743);
						UpdatePlayerDataInt(playerid, "Accessory_3", PI[playerid][pAccessory_3],10744);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 3: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_4] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10753);
						UpdatePlayerDataInt(playerid, "Accessory_2", PI[playerid][pAccessory_4],10754);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 4: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_5] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10763);
						UpdatePlayerDataInt(playerid, "Accessory_5", PI[playerid][pAccessory_5],10764);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 5: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_6] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10773);
						UpdatePlayerDataInt(playerid, "Accessory_6", PI[playerid][pAccessory_6],10774);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 6: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_7] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10783);
						UpdatePlayerDataInt(playerid, "Accessory_7", PI[playerid][pAccessory_7],10784);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 7: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_8] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10793);
						UpdatePlayerDataInt(playerid, "Accessory_8", PI[playerid][pAccessory_8],10794);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 8: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_9] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10803);
						UpdatePlayerDataInt(playerid, "Accessory_9", PI[playerid][pAccessory_9],10804);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 9: {
						if(PI[playerid][pDonate] < 30) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Для покупки данного предмета нужно 30 донат-поинтов", "Закрыть", "");
						PI[playerid][pDonate] -= 30;
						PI[playerid][pAccessory_10] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate],10813);
						UpdatePlayerDataInt(playerid, "Accessory_10", PI[playerid][pAccessory_10],10814);
						SCM(playerid, 0x33ccffFF, !"Успешная покупка, списано 30 донат-поинтов.");
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
				}
			}
		}
		case dialog_TAKE: {
			if(!response) return 1;
			if(response) {
				switch(listitem) {
		            case 0: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_1] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10830);
						UpdatePlayerDataInt(playerid, "Accessory_1", PI[playerid][pAccessory_1],10831);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
		            }
		            case 1: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_2] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10839);
						UpdatePlayerDataInt(playerid, "Accessory_2", PI[playerid][pAccessory_2],10840);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
		            }
		            case 2: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_3] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10848);
						UpdatePlayerDataInt(playerid, "Accessory_3", PI[playerid][pAccessory_3],10849);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 3: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_4] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10857);
						UpdatePlayerDataInt(playerid, "Accessory_4", PI[playerid][pAccessory_4],10858);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 4: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_5] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10866);
						UpdatePlayerDataInt(playerid, "Accessory_5", PI[playerid][pAccessory_5],10867);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 5: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_6] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10875);
						UpdatePlayerDataInt(playerid, "Accessory_6", PI[playerid][pAccessory_6],10876);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 6: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_7] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10884);
						UpdatePlayerDataInt(playerid, "Accessory_7", PI[playerid][pAccessory_7],10885);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 7: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_8] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10892);
						UpdatePlayerDataInt(playerid, "Accessory_8", PI[playerid][pAccessory_8],10894);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 8: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_9] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10902);
						UpdatePlayerDataInt(playerid, "Accessory_9", PI[playerid][pAccessory_9],10903);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
					case 9: {
						if(PI[playerid][pTakeAcs] != 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}Вы уже получили приз!", "Закрыть", "");
						PI[playerid][pTakeAcs] = 1;
						PI[playerid][pAccessory_10] = 1;
						UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pTakeAcs],10911);
						UpdatePlayerDataInt(playerid, "Accessory_10", PI[playerid][pAccessory_10],10912);
						SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Чтобы использовать, /mm > Настройки персонажа > Управление аксессуарами");
						return 1;
					}
				}
			}
		}
        case dialog_TP:
        {
            if(!response) return 1;
            if(response)
            {
                switch(listitem)
                {
                    case 0: SetPlayerPosAC(playerid, 2381.2559,-1901.3752,21.9330);
                    case 1: SetPlayerPosAC(playerid, 1916.8721,2246.8320,15.7139);
					case 2: SetPlayerPosAC(playerid, 2387.4668,-615.2571,12.3700);
					case 3: SetPlayerPosAC(playerid, -582.7040,-139.3514,1.2200);
					case 4: SetPlayerPosAC(playerid, 998.2722,-384.9974,4.0025);
					case 5: SetPlayerPosAC(playerid, 215.1709,-918.4337,40.6382);
					case 6: SetPlayerPosAC(playerid, 1758.3649,2255.2327,15.8572);
					case 7: SetPlayerPosAC(playerid, 1184.8860,2498.1978,12.4800);
					case 8: SetPlayerPosAC(playerid, 2376.0488,-996.1595,2.0300);
					case 9: SetPlayerPosAC(playerid, 2309.8789,-1131.2976,2.5600);
					case 10: SetPlayerPosAC(playerid, 2484.7485,-746.3240,12.0969);
					case 11: SetPlayerPosAC(playerid, 616.4615,797.7547,12.0298);
					case 12: SetPlayerPosAC(playerid, 443.5924,360.1169,12.1800);
					case 13: SetPlayerPosAC(playerid, 2325.5154,-1803.9813,22.4540);
					case 14: SetPlayerPosAC(playerid, 1223.7863,-370.6064,4.0765);
					case 15: SetPlayerPosAC(playerid, 24.3647,288.6667,12.0567);
					case 16: SetPlayerPosAC(playerid, 207.5432,1478.4958,12.0346);
					case 17: SetPlayerPosAC(playerid, -284.2634,582.7474,12.1289);
					case 18: SetPlayerPosAC(playerid, 2160.5093,-1766.6997,18.9069);
					case 19: SetPlayerPosAC(playerid, 464.8619,-1241.0986,40.6765);
					case 20: SetPlayerPosAC(playerid, 1767.4198,1334.9589,9.7556);
					case 21: SetPlayerPosAC(playerid, -398.1591,925.6467,12.1500);
					case 22: SetPlayerPosAC(playerid, -1503.4741,1608.9265,36.5690);
                }
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
            }
        }
		case dialog_CHANGE_NAME: {
			if(!response) return ShowMainMenu(playerid);
			if(response) {
				switch(listitem) {
					case 0: RandomName(playerid);
					case 1: ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{ee3366}Изменение никнейма", "Вы собераетесь изменить игровой никнейм своего персонажа\n\n{FFFF99}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				}
			}
		}
		case dialog_SETNAME: {
			if(!response) return ChangeNameMenu(playerid);
			if(response) {
				new name[24];
				GetPVarString(playerid,"randomame", name, sizeof(name));
				FixSVarString(name);
				strmid(CHANGE_NAME[playerid], name, 0, strlen(name), MAX_PLAYER_NAME);
				SetPVarInt(playerid, "change_name_status", 1);
				new str_q[98];
				mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'", CHANGE_NAME[playerid]);
				mysql_function_query(mysql, str_q, true, "CheckName", "ds", playerid, CHANGE_NAME[playerid]);
			}
		}
		case dialog_MAKEGUN:
		{
		    if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(PI[playerid][data_MET] < 1) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",5);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Бейсбольная бита", !"{FFFFFF}Введите желаемое количество", !"Создать", !"Отмена");
			        }
			        case 1:
			        {
			            if(PI[playerid][data_MET] < 5) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",22);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Тайзер", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 2:
			        {
			            if(PI[playerid][data_MET] < 3) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",23);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Тайзер", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 3:
			        {
			            if(PI[playerid][data_MET] < 6) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",24);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Desert Eagle", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 4:
			        {
			            if(PI[playerid][data_MET] < 8) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",25);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Дробовик", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 5:
			        {
			            if(PI[playerid][data_MET] < 7) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",26);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Обрез", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 6:
			        {
			            if(PI[playerid][data_MET] < 9) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",27);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Автоматический дробовик", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 7:
			        {
			            if(PI[playerid][data_MET] < 7) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",28);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}MP40", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 8:
			        {
			            if(PI[playerid][data_MET] < 8) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",29);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}AKC-74Y", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 9:
			        {
			            if(PI[playerid][data_MET] < 9) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",30);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}AK-47", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 10:
			        {
			            if(PI[playerid][data_MET] < 9) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",31);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}AK-104", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 11:
			        {
			            if(PI[playerid][data_MET] < 7) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",32);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Tec-9", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			        case 12:
			        {
			            if(PI[playerid][data_MET] < 10) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",33);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, !"{ee3366}Country Rifle", !"{FFFFFF}Введите желаемое количество патронов", !"Создать", !"Отмена");
			        }
			    }
			}
		}
		case dialog_MAKEGUN_1: {
		    if(!response) return 1;
		    if(response) {
				if(strval(inputtext) > PI[playerid][data_PATR]) return SCM(playerid, COLOR_GREY,"У Вас недостаточно патронов");
				if(strval(inputtext) < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
				new gun = GetPlayerWeapon(playerid);
				if(gun == GetPVarInt(playerid,"makegun")) {
					GiveWeapon(playerid, GetPVarInt(playerid,"makegun"), strval(inputtext));
					PI[playerid][data_PATR] -= strval(inputtext);
					new string[55];
				    format(string, sizeof(string), "%s добавил %d пт к %s",PI[playerid][pName], strval(inputtext), weapon_names[GetPVarInt(playerid,"makegun")]);
					ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(playerid, string, 0xFF99CCFF, 20.0, 4000);
				}
				else {
					GiveWeapon(playerid, GetPVarInt(playerid,"makegun"), strval(inputtext));
					PI[playerid][data_PATR] -= strval(inputtext);
					new string[120];
				    format(string, sizeof(string), "%s собрал %s и добавил к нему %d пт",PI[playerid][pName], weapon_names[GetPVarInt(playerid,"makegun")], strval(inputtext));
					ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(playerid, string, 0xFF99CCFF, 20.0, 4000);
					SavePlayerData(playerid);
					switch(GetPVarInt(playerid,"makegun")) {
						case 5: PI[playerid][data_MET] -= 1;
						case 22: PI[playerid][data_MET] -= 5;
						case 23: PI[playerid][data_MET] -= 3;
						case 24: PI[playerid][data_MET] -= 6;
					    case 25: PI[playerid][data_MET] -= 8;
					    case 26: PI[playerid][data_MET] -= 7;
					    case 27: PI[playerid][data_MET] -= 9;
					    case 28: PI[playerid][data_MET] -= 7;
					    case 29: PI[playerid][data_MET] -= 8;
				     	case 30: PI[playerid][data_MET] -= 9;
				   		case 31: PI[playerid][data_MET] -= 9;
					    case 32: PI[playerid][data_MET] -= 7;
					    case 33: PI[playerid][data_MET] -= 10;
					}

				}
			}
		}
		case dialog_SETTING_PER_1: {
            if(!response) return ShowSettings(playerid);
			if(response) {
			    switch(listitem) {
			        case 0: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			            SCM(playerid,COLOR_GREENNEW,"Вы изменили стиль боя на 'Улучшеный'");
						
			        }
			        case 1: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			            SCM(playerid,COLOR_GREENNEW,"Вы изменили стиль боя на 'Бокс'");
						
			        }
			        case 2: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			            SCM(playerid,COLOR_GREENNEW,"Вы изменили стиль боя на 'Кик-боксинг'");
						
			        }
			        case 3: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			            SCM(playerid,COLOR_GREENNEW,"Вы изменили стиль боя на 'Кунг-фу'");
			        }
			    }
			}
        }
        case dialog_SETTING_PER_2:
        {
            if(!response) return ShowSettings(playerid);
			if(response)
			{
                switch(listitem)
				{
		            case 0: SetPlayerWalkingStyle (playerid, WALK_NORMAL);
	             	case 1: SetPlayerWalkingStyle (playerid, WALK_PED);
		            case 2: SetPlayerWalkingStyle (playerid, WALK_GANGSTA);
		            case 3: SetPlayerWalkingStyle (playerid, WALK_GANGSTA2);
		            case 4: SetPlayerWalkingStyle (playerid, WALK_OLD);
		            case 5: SetPlayerWalkingStyle (playerid, WALK_FAT_OLD);
		            case 6: SetPlayerWalkingStyle (playerid, WALK_FAT);
		            case 7: SetPlayerWalkingStyle (playerid, WALK_LADY);
   		            case 8: SetPlayerWalkingStyle (playerid, WALK_LADY2);
		            case 9: SetPlayerWalkingStyle (playerid, WALK_WHORE);
		            case 10: SetPlayerWalkingStyle (playerid, WALK_WHORE2);
		            case 11: SetPlayerWalkingStyle (playerid, WALK_DRUNK);
		            case 12: SetPlayerWalkingStyle (playerid, WALK_BLIND);
		            case 13: SetPlayerWalkingStyle (playerid, WALK_DEFAULT);
	            }
	            SCM(playerid, COLOR_GREENNEW, "Вы изменили свой стиль походки. Использование: W + ALT");
			}
        }
		case dialog_SETTING_PER:
        {
            if(!response) return ShowMainMenu(playerid);
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{FFFF99}Пример: 123qwe", "Далее", "Назад");
			        case 1: ShowPlayerDialog(playerid, dialog_SETTING_PER_1, DIALOG_STYLE_LIST, "{ee3366}Стили боя", "1. Улучшеный\n2. Бокс\n3. Кик-боксинг\n4. Кунг-фу", "Выбрать", "Назад");
			        case 2: ShowPlayerDialog(playerid,dialog_SETTING_PER_2, DIALOG_STYLE_LIST, "{ee3366}Стили походки","1. Обычная\n2. Гражданская\n3. Бандитская (1)\n4.Бандитская (2)\n5. Пожилого мужчины\n6. Пожилой женщины\n7. Женская (1)\n8. Женская (2)\n9. Женская (3)\n10. Проститутки (1)\n11. Проститутки (2)\n12. Пьяного\n13. Слабовидящего\n14. Стандартная", "Выбрать", "Назад");
					case 3: {
						new settings[512];
						format(settings, sizeof settings, "\
						{FFFFFF}1. Рога\t\t\t\t{FFFF99}%s\n\
						{FFFFFF}2. Голова Дед-Пула\t\t{FFFF99}%s\n\
						{FFFFFF}3. Голова Микки-Мауса\t{FFFF99}%s\n\
						{FFFFFF}4. Костюм гробовщик\t\t\t{FFFF99}%s\n\
						{FFFFFF}5. Огнемёт\t\t\t{FFFF99}%s\n\
						{FFFFFF}6. Красный чемодан\t\t{FFFF99}%s\n\
						{FFFFFF}7. Ёлка на плечо\t\t{FFFF99}%s\n\
						{FFFFFF}8. Ангельское кольцо\t\t{FFFF99}%s\n\
						{FFFFFF}9. Дигл на спину\t\t{FFFF99}%s\n\
						{FFFFFF}10. Шляпа фермера\t\t{FFFF99}%s\n\
						{FFFF99}Очистить акессуары\t\t{FFFF99}...", 
						(PI[playerid][pAccessory_1]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_2]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_3]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_4]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_5]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_6]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_7]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_8]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_9]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][pAccessory_10]) ? ("(куплен)") : ("(не куплен)"));
						ShowPlayerDialog(playerid,dialog_SETTING_PER_3, DIALOG_STYLE_LIST, "{ee3366}Управление аксессуарами",settings, "Выбрать", "Назад");
					}
				}
			}
        }
		case dialog_SETTING_PER_3: 
		{
			if(!response) return 1;
			if(response) 
			{
				if(PI[playerid][pTempJob] == 2) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"Во время данной работы Вы не можете установить себе аксессуары");
				switch(listitem) 
				{
		            case 0: 
					{
						if(PI[playerid][pAccessory_1] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 1;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11623);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
		            }
		            case 1: 
					{
						if(PI[playerid][pAccessory_2] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 2;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11632);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
		            }
		            case 2: 
					{
						if(PI[playerid][pAccessory_3] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 3;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11641);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 3: 
					{
						if(PI[playerid][pAccessory_4] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 4;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11650);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 4: {
						if(PI[playerid][pAccessory_5] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 5;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11659);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 5: {
						if(PI[playerid][pAccessory_6] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 6;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11668);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 6: {
						if(PI[playerid][pAccessory_7] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 7;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11677);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 7: {
						if(PI[playerid][pAccessory_8] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 8;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11686);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 8: {
						if(PI[playerid][pAccessory_9] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 9;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11695);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 9: {
						if(PI[playerid][pAccessory_10] != 1) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет данного аксессуара, купите его в /donate", "Закрыть", "");
						PI[playerid][pUseAccessory] = 10;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						SetAccessory(playerid);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11704);
						SCM(playerid, 0x33ccffFF, !"Вы успешно одели данный акессуар.");
						return 1;
					}
					case 10: {
						if(PI[playerid][pUseAccessory] == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff5511}Ошибка", !"{FFFFFF}У Вас нет использованных аксессуаров", "Закрыть", "");
						PI[playerid][pUseAccessory] = 0;
						for(new i; i < 10; i++) RemovePlayerAttachedObject(playerid, i);
						UpdatePlayerDataInt(playerid, "UseAccessory", PI[playerid][pUseAccessory],11712);
						SCM(playerid, 0x33ccffFF, !"Вы успешно очистили все акессуары.");
						return 1;
					}
				}
			}
		}
		case dialog_SETTING_2:
		{
		    if(!response) return ShowSettings(playerid);
            if(response)
			{
			    if(strlen(inputtextsave) == 0) return ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","{FFFFFF}Введите в поле ниже новый пароль от аккаунта\n{FFFF99}Пример: 12345qwe", "Далее", "Назад");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 30) return SCM(playerid, COLOR_GREY, !"Длина пароля должна быть от 6 до 30 символов"),ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{FFFF99}Пример: 12345qwe", "Далее", "Назад");
        		for(new i = strlen(inputtextsave); i != 0; --i)
				switch(inputtextsave[i]) {
					case 'А'..'Я', 'а'..'я', ',', '`', '=': return SCM(playerid, COLOR_HINT, "[Подсказка]: {FFFFFF}Разрешено использовать {6699ff}только{FFFFFF} латинские буквы и цифры"),ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{FFFF99}Пример: 12345qwe", "Далее", "Назад");
				}
				strmid(PI[playerid][pPassword], inputtextsave, 0, strlen(inputtextsave), 30);
				new str_q[115];
				mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `Password` = md5('%e') WHERE `Name` = '%e'",PI[playerid][pPassword],PI[playerid][pName]);
    			mysql_function_query(mysql, str_q, false, "", "");
				SCMf(playerid, COLOR_HINT, "[Внимание]: {FFFFFF}Ваш новый пароль: %s. Обязательно сделайте скриншот {6699ff}'F8'", inputtextsave);

            }
		}
		case dialog_SETTING_1:
        {
            if(!response) return ShowSettings(playerid);
			if(response)
			{
			    if(strlen(inputtextsave) == 0) return ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля", "{FFFFFF}Введите в поле ниже свой нынешний пароль\n{FFFF99}Пример: 123qwe", "Далее", "Назад");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 30) return SCM(playerid, COLOR_GREY, !"Длина пароля должна быть от 6 до 30 символов"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{FFFF99}Пример: 123qwe", "Далее", "Назад");
        		for(new i = strlen(inputtextsave); i != 0; --i)
				switch(inputtextsave[i])
				{
					case 'А'..'Я', 'а'..'я': return SCM(playerid, COLOR_HINT, "[Подсказка]: {FFFFFF}Разрешено использовать {FFFF33}только{FFFFFF} латинские буквы и цифры"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{FFFF99}Пример: 123qwe", "Далее", "Назад");
				}
				new str_q[150];
    			strmid(PI[playerid][pPassword], inputtextsave, 0, strlen(inputtextsave), 30);
				mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e' AND `Password` = md5('%e')",PI[playerid][pName],PI[playerid][pPassword]);
				mysql_function_query(mysql, str_q, true, "ChangePassword", "d", playerid);
			}
		}
		case 1250:
  		{
  		    if(!response) return ShowMainMenu(playerid);
   			if(response)
   			{
   			    if(PI[playerid][data_MUTE] != 0) return SCM(playerid, COLOR_GREY,"У Вас мут");
  				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return SCM(playerid, COLOR_GREY,"Не менее 1 и не более 100 символов"),ReportDialog(playerid);
   				SendAdminsMessagef(0xFFFF99FF, "Вопрос от %s[%d]:{FFFFFF} %s",PI[playerid][pName],playerid,inputtext);
				SCMf(playerid,0xFFFF99FF, "Вопрос от %s[%d]:{FFFFFF} %s",PI[playerid][pName],playerid,inputtext);
			}
    	}
		case 1251:
  		{
  		    if(!response) return ShowMainMenu(playerid);
   			if(response)
   			{
  				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return SCM(playerid, COLOR_GREY,"Не менее 1 и не более 100 символов"),ReportDialog(playerid);
	   			SendAdminsMessagef(0xFF8877FF, "Жалоба от %s[%d]:{FFFFFF} %s",PI[playerid][pName],playerid,inputtext);
				SCMf(playerid,0xFF8877FF, "Жалоба от %s[%d]:{FFFFFF} %s",PI[playerid][pName],playerid,inputtext);
				SCM(playerid, 0xFF8877FF, "Вы можете заблокировать голосовой чат игрока {FFFF99}F11 {FF8877}");
			}
    	}
		case dialog_REPORT: {
            if(!response) return ShowMainMenu(playerid);
			if(response) {
			    switch(listitem) {
			        case 0: {
						ShowPlayerDialog(playerid, 1250, DIALOG_STYLE_INPUT, "{ee3366}Вопрос или жалоба", "\
						{FFFFFF}Введите сообщение для игровых мастеров. Пишите кратко и по делу.\n\
						Перед тем, как задать вопрос, проверьте, нет ли ответа в меню помощи - {ee3366}/help\n\
						{696969}Обратите внимание: за оффтоп Вы можете получить блокировку чата", "Далее", "Отмена");
			        }
			        case 1: {
						ShowPlayerDialog(playerid, 1251, DIALOG_STYLE_INPUT, "{ee3366}Вопрос или жалоба", "\
						{FFFFFF}Введите сообщение для игровых мастеров. Пишите кратко и по делу.\n\
						Перед тем, как задать вопрос, проверьте, нет ли ответа в меню помощи - {ee3366}/help\n\
						{696969}Обратите внимание: за оффтоп Вы можете получить блокировку чата", "Далее", "Отмена");
			        }
			    }
			}
        }
		case 7610: {
			if(!response) return 1;
			if(response) {
				PI[playerid][pTempStopWar] = StopWar_cfg[listitem][frac_id];
				ShowPlayerDialog(playerid,7611, DIALOG_STYLE_LIST, "{ee3366}Заморозка территорий", "1. 60 минут\n2. 120 минут\n3. 3 часа\n4. 4 часа\n5. 5 часов\n6. 6 часов\n7. 7 часов\n8. 8 часов\n9. 9 часов\n10. 10 часов\n11. 24 часа\n12. 48 часов\n{FFFF99}Снять заморозку", "Выбор", "Закрыть");
			}
		}
		case 7611: {
			if(!response) return 1;
			if(response) {
				new status = 0;
				switch(listitem) {
					case 0: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 60;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 60;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 60;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 1 час", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 1: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 120;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 120;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 120;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 2 часа", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 2: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 180;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 180;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 180;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 3 часа", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 3: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 240;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 240;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 240;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 4 часа", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 4: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 300;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 300;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 300;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 5 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 5: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 360;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 360;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 360;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 6 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 6: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 420;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 420;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 420;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 7 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 7: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 480;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 480;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 480;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 8 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 8: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 540;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 540;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 540;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 9 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 9: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 600;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 600;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 600;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 10 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 10: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 1445;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 1445;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 1445;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 24 часа", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 11: {
						status = 2;
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 2890;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 2890;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 2890;
						SCMf(playerid, COLOR_GREENNEW, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 48 часов", Fraction_Name[PI[playerid][pTempStopWar]]);
					}
					case 12: {
						if(PI[playerid][pTempStopWar] == 5) if(m_skinhead == 0) return SCM(playerid, COLOR_GREY,"У данной организации нет мороза!");
						if(PI[playerid][pTempStopWar] == 6) if(m_gopota == 0) return SCM(playerid, COLOR_GREY,"У данной организации нет мороза!");
						if(PI[playerid][pTempStopWar] == 7) if(m_kavkaz == 0) return SCM(playerid, COLOR_GREY,"У данной организации нет мороза!");
						if(PI[playerid][pTempStopWar] == 5) m_skinhead = 0;
						if(PI[playerid][pTempStopWar] == 6) m_gopota = 0;
						if(PI[playerid][pTempStopWar] == 7) m_kavkaz = 0;
						SCMf(playerid, COLOR_GREENNEW, "Вы сняли заморозку стрел для организации {FFFF00}('%s')", Fraction_Name[PI[playerid][pTempStopWar]]);
						status = 1;
					}
				}
				if(status == 1) 
				{
					PI[playerid][pTempStopWar] = -1;
					SaveWarehouse();
				}
				else if(status == 2)
				{
					PI[playerid][pTempStopWar] = -1;
					SaveWarehouse();
				}
			}
		}
		case 5898: 
		{
			if(!response) return 1;
			if(response) 
			{
				switch(listitem)
				{
					case 0: 
					{
						GetPlayerPos(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
						gomp_status = true;
						SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] изменил точку телепорта на мероприятие", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
						callcmd::editmp(playerid);
					}
					case 1: ShowPlayerDialog(playerid, 5899, DIALOG_STYLE_INPUT, "{ee3366}Выдача одежды", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-скина]\n{FFFF99}Пример: 3,23", "Выдать", "Закрыть");
					case 2: ShowPlayerDialog(playerid, 5900, DIALOG_STYLE_INPUT, "{ee3366}Выдача оружия", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{FFFF99}Пример: 3,24,500", "Выдать", "Закрыть");
					case 3: ShowPlayerDialog(playerid, 5901, DIALOG_STYLE_INPUT, "{ee3366}Выдача бронижелета", "{FFFFFF}Напишите: количество брони (от 1 до 100)\n{FFFF99}Пример: 100", "Выдать", "Закрыть");
					case 4: ShowPlayerDialog(playerid, 5902, DIALOG_STYLE_INPUT, "{ee3366}Выдача здоровья", "{FFFFFF}Напишите: количество здоровья (от 1 до 176)\n{FFFF99}Пример: 176", "Выдать", "Закрыть");
					case 5: 
					{
						if(mptk == true) 
						{
							for(new i = 0; i < MAX_PLAYERS; i++) 
							{
								if(PI[i][pOnMP] == 1) PI[i][pOnMPTK] = 0;
							}
							SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выключил ТК на МП", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
						}
						else 
						{
							for(new i = 0; i < MAX_PLAYERS; i++) 
							{
								if(PI[i][pOnMP] == 1) PI[i][pOnMPTK] = 1;
							}
							SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] включил ТК на МП", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
						}
						callcmd::editmp(playerid);
					}
					case 6: 
					{
						gomp_status = false;
						SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] остановил точку телепорта на мероприятие", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
						for(new i = 0; i < MAX_PLAYERS; i++) 
						{
							SCM(i, 0xff2457FF, "Игровой мастер завершил мероприятие");
							if(PI[i][pOnMP] == 1) 
							{
								PI[i][pOnMP] = 0;
								PI[i][pOnMPTK] = 0;
								SetPlayerPos(playerid, PI[i][pOnMPX], PI[i][pOnMPY], PI[i][pOnMPZ]+2);
								SetPlayerInterior(i,0);
								SetPlayerVirtualWorld(i,0);
							}
						}
						callcmd::editmp(playerid);
					}
					case 7: 
					{
						gomp_status = false;
						SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] остановил точку телепорта на мероприятие без респавна", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
						callcmd::editmp(playerid);
					}
					case 8: callcmd::editmp(playerid);
				}
			}
		}
		case 5899: 
		{
			if(!response) return 1;
			if(response) 
			{
				new type,id,str[35];
				sscanf(inputtext, "p<,>dd", type, id);
				if(type == 0) return ShowPlayerDialog(playerid, 5899, DIALOG_STYLE_INPUT, "{ee3366}Выдача одежды", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-скина]\n{FFFF99}Пример: 3,23", "Выдать", "Закрыть");
				if(id == 0) return ShowPlayerDialog(playerid, 5899, DIALOG_STYLE_INPUT, "{ee3366}Выдача одежды", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-скина]\n{FFFF99}Пример: 3,23", "Выдать", "Закрыть");
                format(str,sizeof str,"%d %d", type, id);
				callcmd::mpskin(playerid,str);
				callcmd::editmp(playerid);
			}
		}
		case 5900: {
			if(!response) return 1;
			if(response) {
				new type,id,pt,str[35];
				sscanf(inputtext, "p<,>ddd", type, id, pt);
				if(type == 0) return  ShowPlayerDialog(playerid, 5900, DIALOG_STYLE_INPUT, "{ee3366}Выдача оружия", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{FFFF99}nПример: 3,24,500", "Выдать", "Закрыть");
				if(pt == 0) return ShowPlayerDialog(playerid, 5900, DIALOG_STYLE_INPUT, "{ee3366}Выдача оружия", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{FFFF99}Пример: 3,24,500", "Выдать", "Закрыть");
				if(id == 0) return ShowPlayerDialog(playerid, 5900, DIALOG_STYLE_INPUT, "{ee3366}Выдача оружия", "{FFFFFF}Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{FFFF99}Пример: 3,24,500", "Выдать", "Закрыть");
                format(str,sizeof str,"%d %d %d", type, id, pt);
				callcmd::mpgun(playerid,str);
				callcmd::editmp(playerid);
			}
		}
		case 5901: {
			if(!response) return 1;
			if(response) {
				if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 5901, DIALOG_STYLE_INPUT, "{ee3366}Выдача бронижелета", "{FFFFFF}Напишите: количество брони (от 1 до 100)\n{FFFF99}Пример: 100", "Выдать", "Закрыть");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return ShowPlayerDialog(playerid, 5901, DIALOG_STYLE_INPUT, "{ee3366}Выдача бронижелета", "{FFFFFF}Напишите: количество брони (от 1 до 100)\n{FFFF99}Пример: 100", "Выдать", "Закрыть");
				callcmd::mparm(playerid,inputtext);
				callcmd::editmp(playerid);
			}
		}
		case 5902: {
			if(!response) return 1;
			if(response) {
				if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 5902, DIALOG_STYLE_INPUT, "{ee3366}Выдача здоровья", "{FFFFFF}Напишите: количество здоровья (от 1 до 176)\n{FFFF99}Пример: 176", "Выдать", "Закрыть");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 176) return ShowPlayerDialog(playerid, 5902, DIALOG_STYLE_INPUT, "{ee3366}Выдача здоровья", "{FFFFFF}Напишите: количество здоровья (от 1 до 176)\n{FFFF99}Пример: 176", "Выдать", "Закрыть");
				callcmd::mphp(playerid,inputtext);
				callcmd::editmp(playerid);
			}
		}
		case 1231: {
			if(!response) return 1;
			if(response) {
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				PI[playerid][pOnMPX] = x;
				PI[playerid][pOnMPY] = y;
				PI[playerid][pOnMPZ] = z;
				PI[playerid][pOnMP] = 1;
				SetPlayerPosAC(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			    DeletePVar(playerid, "ac_fly");
			}
		}
		case 1232: {
			if(!response) return 1;
			if(response) {
				PI[playerid][pOnMP] = 0;
				SetPlayerPos(playerid, PI[playerid][pOnMPX], PI[playerid][pOnMPY], PI[playerid][pOnMPZ]+2);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			    DeletePVar(playerid, "ac_fly");
			}
		}
 		case dialog_ADMCOMMAND:
		{
		    if(!response) return 1;
			if(response)
   			{
				switch(listitem)
				{
				    case 0: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "editmp - управлять мероприятием\nsetmp - запустить телепорт\nstopgm - покинуть должность на время\nreturngm - вернуться на должность\nans [ID игрока] - ответить игроку\na [текст] - чат игровых мастеров\nslap [ID игрока] - подкинуть игрока\nadmins - список игровых мастеров\nspawn [ID игрока] - заспавнить игрока\nsp [ID игрока] - начать слежку за игроком / выйти со слежки\njail [ID игрока] [время] [причина] - посадить в тюрьму\nunjail [ID игрока] - освободить игрока из тюрьмы\nas - настройки GS\nfly - режим полёта\nflip [ID игрока] - перевернуть и починить полё ТС игрока\nfreeze - заморозить (разморозить) игрока\nboom - взрыв возле себя\ntihokick - тихий кик без уведомлений ", "Назад", "Выход");
				    case 1: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "up - поднять себя вверх\ndown - опустить себя вниз\nleft - телепортировать себя в лево\nright - телепортировать себя в право\nnick - кикнуть игрока за NonRP nick\nkick [ID игрока] [причина] - кикнуть игрока\n;gethere [ID игрока] - телепортировать игрока к себе\ngoto [ID игрока] - телепортироваться к игроку\ncc - очистить чат\ngm [ID игрока] - проверка на GodMode\nmute [ID игрока] - выдать блокировку чата\nunmute [ID игрока] - снять блокировку чата\nunvmute [ID игрока] - снять блокировку голосового чата\noffunjail [ID игрока] - выпустить игрока из тюрьмы(оффлайн)\noffunmute [ID игрока] - разблокировать чат игроку(оффлайн)\noffunvmute [ID игрока] - разблокировать гч игроку(оффлайн)\n", "Назад", "Выход");
				    case 2: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "skin - изменить скин\nveh [ID игрока] [цвет] [цвет] - создать автомобиль\ndveh - удалить созданный автомобиль\nsetmember [ID игрока] - назначить в организацию\nmsg [текст] - написать в общий чат\nwarn [ID игрока] [время] [причина] - выдать предупреждение игроку\nunwarn [ID игрока] - снять предупреждение с игрока\nspawncar - заспавнить транспорт\nget [имя] - посмотреть информацию об аккаунте\nresgun [ID игрока] - забрать все оружие у игрока\noffmute имя] - выдать блокировку чата(оффлайн)\noffvmute[имя] - выдать блокировку гч(оффлайн)\noffjail[имя] - посадить игрока в деморган(оффлайн)\noffawrn[имя] - выдать предупреждение игроку(оффлайн)\noffunwarn[имя] - снять предупреждение игроку(оффлайн)\noffban[имя] - забанить игрока(оффлайн)\naclear [ID игрока] - обнулить розыск\nsethp [ID игрока] [кол-во] - изменить уровень здоровья\n", "Назад", "Выход");
					case 3: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "givegod - выдать goodmode игроку\nsetfuel - изменить кол-во топлива в машине\n\
					nban - заблокировать игрока\nunban - разблокировать игрока\nallleaders - полный список лидеров\ngun - выдать оружие игроку\n\
					mpgun - выдать оружие на мероприятии\nmpskin - выдать скин на мероприятии\nmphp - изменить здоровье на мероприятии\n\
					setleader [ID игрока] - выдать лидерку игроку\nmparm - выдать броню на мероприятии\noffleader [ник] - снять с лидерки оффлайнn\nss [ID игрока] [ID скина] - выдать вечный скин игроку", "Назад", "Выход");
					case 4: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "change [ID игрока] - подтвердить смену ника\nbanip [ID игрока] [кол-во дней] [причина] - заблокировать IP\nstopwar - выдать заморозку (снять) территорий\nsetgz - выдать территорию\nstopcapture - остановить войну за территорию", "Назад", "Выход");
				    case 5: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "На данном уровне игрового мастера нет новых команд, но добавлена защита от оффлайн наказаний.", "Назад", "Выход");
					case 6: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "offgm [ник игрока] - снять с поста игрового мастера\nip [ID игрока] - проверить IP\nbanip [IP игрока] - заблокировать IP\nidpc [IP игрока] - ID-ПК игрока\nunbanip [IP игрока] - разблокировать IP\nmakegm [ID игрока] - поставить на пост игрового мастера", "Назад", "Выход");
					case 7: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", "payday - выдать всем PayDay\ngivemoney - выдать денег игроку\ngivemoneyall - выдать деньги всему серверу\ntesttun - тестовый тюнинг на авто\ncheckdonate - список донатеров\nsaveplayers - сохранить весь сервер", "Назад", "Выход");
				}
			}
		}
		case dialog_SETGZ: {
		    if(!response) return 1;
		    if(response) {
				new gz = GetPlayerGangZone(playerid);
				switch(listitem) {
				    case 0: {
					    gz_info[gz][gzopg] = 5;
         				SaveGZ(5, gz);
				        foreach(new i:Player) {
				            if(PI[i][pMember] == 5 || PI[i][pMember] == 6 || PI[i][pMember] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						return SCM(playerid, COLOR_LIGHTGREY, !"Вы присвоили территорию ОПГ 'Скинхеды'");
					}
					case 1: {
					    gz_info[gz][gzopg] = 6;
					    SaveGZ(6, gz);
				        foreach(new i:Player) {
				            if(PI[i][pMember] == 5 || PI[i][pMember] == 6 || PI[i][pMember] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						return SCM(playerid, COLOR_LIGHTGREY, !"Вы присвоили территорию ОПГ 'Гопота'");
					}
					case 2: {
					    gz_info[gz][gzopg] = 7;
					    SaveGZ(7, gz);
				        foreach(new i:Player) {
				            if(PI[i][pMember] == 5 || PI[i][pMember] == 6 || PI[i][pMember] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						return SCM(playerid, COLOR_LIGHTGREY, !"Вы присвоили территорию ОПГ 'Кавказцы'");
					}
				}
		    }
		}
		case dialog_SETSKINDEV: {
			if(!response) return 1;
			if(response) {
			    new p = GetPVarInt(playerid,"gPLAYER");
				switch(PI[p][pMember]) {
				    case 1: {
				        switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 216;
						}
				    }
				    case 2: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 191;
						}
					}
					case 3: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 141;
						}
					}
					case 4: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 194;
						}
					}
					case 5: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 13;
						}
					}
					case 6: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 13;
						}
					}
					case 7: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 13;
						}
					}
					case 8: {
					    switch(listitem) {
						    case 0:PI[p][pOrgSkin] = 12;
						}
					}
				}
				SetPlayerSkinAC(p,PI[p][pOrgSkin]);
				new str[80];
				format(str,sizeof(str),"Вы изменили внешний вид игроку %s",PI[p][pName]);
				SCM(playerid,0x6699ccFF,str);
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				new text[144];
				format(text,sizeof(text),"%s %s[%d] изменил Вашу внешность в орагнизацию",name,PI[playerid][pName],playerid);
				SCM(p,0x6699ccFF,text);

			}
		}
		case dialog_SETSKIN:
		{
			if(!response) return 1;
			if(response)
			{
			    new p = GetPVarInt(playerid,"gPLAYER");
				switch(PI[p][pMember])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 156;
						    case 1:PI[p][pOrgSkin] = 154;
						    case 2:PI[p][pOrgSkin] = 208;
						    case 3:PI[p][pOrgSkin] = 187;
						    case 4:PI[p][pOrgSkin] = 147;
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 179;
						    case 1:PI[p][pOrgSkin] = 262;
						    case 2:PI[p][pOrgSkin] = 253;
						    case 3:PI[p][pOrgSkin] = 287;
						    case 4:PI[p][pOrgSkin] = 167;
						    case 5:PI[p][pOrgSkin] = 277;
						    case 6:PI[p][pOrgSkin] = 278;
						    case 7:PI[p][pOrgSkin] = 279;
						    case 8:PI[p][pOrgSkin] = 188;
						    case 9:PI[p][pOrgSkin] = 222;
						    case 10:PI[p][pOrgSkin] = 255;
						    case 11:PI[p][pOrgSkin] = 84;
						}
					}
					case 3:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 280;
						    case 1:PI[p][pOrgSkin] = 281;
						    case 2:PI[p][pOrgSkin] = 282;
						    case 3:PI[p][pOrgSkin] = 285;
						    case 4:PI[p][pOrgSkin] = 286;
						    case 5:PI[p][pOrgSkin] = 288;
						    case 6:PI[p][pOrgSkin] = 284;
						    case 7:PI[p][pOrgSkin] = 284;
						    case 8:PI[p][pOrgSkin] = 284;
						    case 9:PI[p][pOrgSkin] = 284;
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 276;
						    case 1:PI[p][pOrgSkin] = 71;
						    case 2:PI[p][pOrgSkin] = 275;
						    case 3:PI[p][pOrgSkin] = 70;
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 8;
						    case 1:PI[p][pOrgSkin] = 17;
						    case 2:PI[p][pOrgSkin] = 28;
						    case 3:PI[p][pOrgSkin] = 126;
						    case 4: if(PI[p][pRang] != 10) return SCM(playerid, COLOR_GREY,"Данный вид одежды доступен только лидеру организации"); else PI[p][pOrgSkin] = 117;
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 115;
						    case 1:PI[p][pOrgSkin] = 116;
						    case 2:PI[p][pOrgSkin] = 114;
						    case 3:PI[p][pOrgSkin] = 111;
						    case 4: if(PI[p][pRang] != 10) return SCM(playerid, COLOR_GREY,"Данный вид одежды доступен только лидеру организации"); else PI[p][pOrgSkin] = 236;
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 123;
						    case 1:PI[p][pOrgSkin] = 122;
						    case 2:PI[p][pOrgSkin] = 109;
						    case 3:PI[p][pOrgSkin] = 108;
						    case 4: if(PI[p][pRang] != 10) return SCM(playerid, COLOR_GREY,"Данный вид одежды доступен только лидеру организации"); else PI[p][pOrgSkin] = 118;
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:PI[p][pOrgSkin] = 15;
						    case 1:PI[p][pOrgSkin] = 17;
						    case 2: if(PI[p][pRang] != 10) return SCM(playerid, COLOR_GREY,"Данный вид одежды доступен только лидеру организации"); else PI[p][pOrgSkin] = 23;
						}
					}
				}
				SetPlayerSkinAC(p,PI[p][pOrgSkin]);
				new str[80];
				format(str,sizeof(str),"Вы изменили внешний вид игроку %s",PI[p][pName]);
				SCM(playerid,0x6699ccFF,str);
				static name[24];
				SetString(name, NameRang(p));
				name = NameRang(p);
				new text[144];
				format(text,sizeof(text),"%s %s[%d] изменил Вашу внешность в орагнизацию", name,PI[playerid][pName],playerid);
				SCM(p,0x6699ccFF,text);

			}
		}
		case 7213: 
		{
		    if(!response) return 1;
			if(response) 
			{
				switch(listitem) 
				{
      				case 0: 
					{
						if(PI[playerid][pAdminStatus] == 0) 
						{
							SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] включил режим бога", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid);
			        	    PI[playerid][pAdminStatus] = 1;
							SetPlayerHealthAC(playerid, 200.0);
							UpdatePlayerDataInt(playerid, "AdminStatus", PI[playerid][pAdminStatus],12553);
							for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i,playerid, false);
						}
						else 
						{
							SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выключил режим бога", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid);
			        	    PI[playerid][pAdminStatus] = 0;
							SetPlayerHealthAC(playerid, 200.0);
			        	    UpdatePlayerDataInt(playerid, "AdminStatus", PI[playerid][pAdminStatus],12562);
							for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i,playerid, false);
						}
      				}
      				case 1: ShowPlayerDialog(playerid, 9827, DIALOG_STYLE_INPUT, !"{ee3366}Смена никнейма", !"Введите никнейм для смены в поле ниже", !"Изменить", !"Отмена");
      				case 2: 
					{
      				  	if(!IsPlayerLogged{playerid}) return 1;
		                new rand = random(sizeof(nname));
		                SetPlayerName(playerid, nname[rand]);
		                SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] установил временный никнейм (%s)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, nname[rand]);
      				}
      				case 3: SetPlayerSkinAC(playerid, 60);
					case 4: 
					{
    					if(CheckAdmin(playerid)) return 0;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
						return 1;
					}
					case 5: 
					{
						if(PI[playerid][data_ASCHEAT] == 0) 
						{
			        	    PI[playerid][data_ASCHEAT] = 1;
							SCM(playerid, COLOR_HINT, !"[F3]: {FFFFFF}Вы включили для себя оповещения от анти-чита");
						}
						else 
						{
			        	    PI[playerid][data_ASCHEAT] = 0;
							SCM(playerid, COLOR_HINT, !"[F3]: {FFFFFF}Вы включили для себя оповещения от анти-чита");
						}
      				}
      				case 6: 
					{
						if(PI[playerid][data_CADMIN] == 1) 
						{
			        	    PI[playerid][data_CADMIN] = 0;
							SCM(playerid, COLOR_HINT, !"[F3]: {FFFFFF}Вы отключили админ-чат для себя");
							UpdatePlayerDataInt(playerid, "ASACHAT", PI[playerid][data_CADMIN],12621);
						}
						else
						{
			        	    PI[playerid][data_CADMIN] = 1;
							SCM(playerid, COLOR_HINT, !"[F3]: {FFFFFF}Вы включили админ-чат для себя");
			        	    UpdatePlayerDataInt(playerid, "ASACHAT", PI[playerid][data_CADMIN],12626);
						}
      				}
				}
			}
		}
		case 7600: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
      				case 0: {
      					if(PI[playerid][pMember] == 4) return SCM(playerid, COLOR_YELLOW,"Нельзя перевестись в свою же организацию. Приятной игры на {921dd1}"NAMESERVER"");
						ShowPlayerDialog(playerid, 7601, DIALOG_STYLE_MSGBOX, !"{ee3366}Перевод в организацию - 'БЦРБ'", "Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 1: {
      					if(PI[playerid][pMember] == 3) return SCM(playerid, COLOR_YELLOW,"Нельзя перевестись в свою же организацию. Приятной игры на {921dd1}"NAMESERVER"");
      					ShowPlayerDialog(playerid, 7602, DIALOG_STYLE_MSGBOX, !"{ee3366}Перевод в организацию - 'Полиция'", "Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 2: {
      				    if(PI[playerid][pMember] == 1) return SCM(playerid, COLOR_YELLOW,"Нельзя перевестись в свою же организацию. Приятной игры на {921dd1}"NAMESERVER"");
      					ShowPlayerDialog(playerid, 7603, DIALOG_STYLE_MSGBOX, !"{ee3366}Перевод в организацию - 'Правительство'", "Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 3: {
						if(PI[playerid][pMember] == 2) return SCM(playerid, COLOR_YELLOW,"Нельзя перевестись в свою же организацию. Приятной игры на {921dd1}"NAMESERVER"");
      					ShowPlayerDialog(playerid, 7604, DIALOG_STYLE_MSGBOX, !"{ee3366}Перевод в организацию - 'Воинская Часть'", "Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
			    }
			}
		}
		case 7604: {
		    if(!response) return 1;
			if(response) {
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 2;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][pMember]-2;
				SCM(playerid, COLOR_YELLOW,"Вы подали заявку на перевод в организацию 'Воинская Часть', ожидайте одобрение от Лидера.");
			}
		}
		case 7603:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 1;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][pMember]-2;
				SCM(playerid, COLOR_YELLOW,"Вы подали заявку на перевод в организацию 'Правительство', ожидайте одобрение от Лидера.");
			}
		}
		case 7602:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 3;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][pMember]-2;
				SCM(playerid, COLOR_YELLOW,"Вы подали заявку на перевод в организацию 'Полиция', ожидайте одобрение от Лидера.");
			}
		}
		case 7601:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 4;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][pMember]-2;
				SCM(playerid, COLOR_YELLOW,"Вы подали заявку на перевод в организацию 'БЦРБ', ожидайте одобрение от Лидера.");
			}
		}
		case 7890:
		{
			if(!response) return 1;
			if(response)
			{
				new pTempID = strval(inputtext);
				PI[pTempID][pRang] = PI[pTempID][data_TRANSFER_RANG];
				PI[pTempID][pMember] = PI[pTempID][data_TRANSFER_FRAC];
				PI[pTempID][data_TRANSFER] = 0;
				PI[pTempID][data_TRANSFER_FRAC] = 0;
				PI[pTempID][data_TRANSFER_RANG] = 0;
				ClearGroup(pTempID);
				SCMf(playerid, -1, "{FFFF00}Вы одобрили перевод для игрока - %s", PI[pTempID][pName] );
				SCM(pTempID, COLOR_YELLOW,"Вам одобрили перевод в организацию. Сейчас Вам установят одежду.");
				callcmd::setskin(playerid,inputtext);
			}
		}
		case dialog_ANIM:
  		{
			if(!response) return true;
			if(response)
			{
			    SetPVarInt(playerid, "AnimOn", 1);
			    cef_emit_event(playerid, "show-button", CEFSTR("LSHIFT"), CEFSTR("ОТКЛЮЧИТЬ АНИМАЦИЮ"));
			    ClearAnimations(playerid);
				switch(listitem)
				{
					case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_HANDSUP);
					case 1: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 1, 0, 0, 0, 0 ,1);
					case 2: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.0,1,0,0,0,0,1);//мыть руки
					case 3: ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,1,0,0,0,0,1);//сесть на землю
					case 4: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,1,0,0,0,0,1);//сесть на землю
					case 5: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,1,0,0,0,0,1); //лежать
					case 6: ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,1,0,0,0,0,1); //читать рэп
					case 7: ApplyAnimation( playerid, "BEACH", "ParkSit_W_Loop", 4.1, 1, 0, 0, 0, 0 ,1);
					case 8: ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0 ,1);// Установить бомбу
					case 9: ApplyAnimation( playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Поза вратаря
					case 10: ApplyAnimation( playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Сложить руки
					case 11: ApplyAnimation( playerid, "GRAVEYARD", "mrnF_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Плакать
					case 12: ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 0, 0, 0, 0 ,1);
					case 13: ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,1,0,0,0,0,1); // Голосовать
					case 14: ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
					case 15: ApplyAnimation(playerid,"RIOT","RIOT_ANGRY", 4.1, 0, 0, 0, 0, 0 ,1);
					case 16: ApplyAnimation(playerid,"MISC","PLYRLEAN_LOOP", 4.1, 1, 0, 0, 0, 0 ,1);
					case 17: ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop", 4.1, 1, 0, 0, 0, 0 ,1);// Смотреть на небо
					case 18: ApplyAnimation(playerid,"ON_LOOKERS","wave_loop", 4.1, 1, 0, 0, 0, 0 ,1);//
					case 19: ApplyAnimation(playerid,"ON_LOOKERS","shout_02", 4.1, 1, 0, 0, 0, 0 ,1);// Болельщик
					case 20: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop", 4.1, 1, 0, 0, 0, 0 ,1);// медитация
					case 21: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1); // facepalm
					case 22: ApplyAnimation(playerid,"ped","cower",4.1,1,0,0,0,0,1); //лежать
					case 23: SetPlayerSpecialAction(playerid, 68); // ссать
				}
				SetPVarInt(playerid,"UseAnim",1);

			}
		}
        case 7210:
		{
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) 
				{
			        case 0: 
					{
					    new status[64];
						switch(PI[playerid][pPhoneStatus]) 
						{
							case 0: format(status,sizeof(status),"{ee2121}Телефон выключен");
							case 1: format(status,sizeof(status),"{31d562}Телефон включен");
						}
					 	ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о телефоне", !"Закрыть", !"", "\
						{FFFFFF}Название: \t\t{3274c6}bPhone XX\n\
						{FFFFFF}Номер телефона: \t{FFFF99}%d\n\
						{FFFFFF}Поддержка звонков: \tДа\n\
						{FFFFFF}Мобильный банк: \tДа\n\
						{FFFFFF}Баланс: \t\t%d\n\
						{FFFFFF}Статус: \t\t\t%s", PI[playerid][data_NUMBER], PI[playerid][pNumberMoney], status);
					}
					case 1:
					{
						if(PI[playerid][pPhoneStatus] == 1) 
						{
							PI[playerid][pPhoneStatus] = 0;
							callcmd::phone(playerid);
						}
						else 
						{
                        	PI[playerid][pPhoneStatus] = 1;
                        	callcmd::phone(playerid);
						}
					}
			    }
			}
		}
        case 7220: 
		{
		    if(!response) return 1;
		    if(response) 
			{
			    switch(listitem) 
				{
			        case 0: 
					{
					    new status[27];
						switch(PI[playerid][pPhoneStatus]) 
						{
							case 0: format(status,sizeof(status),"{ee2121}Телефон выключен");
							case 1: format(status,sizeof(status),"{31d562}Телефон включен");
						}
					 	ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о телефоне", !"Закрыть", !"", "\
						{FFFFFF}Название: \t\t{3274c6}bPhone XX\n\
						{FFFFFF}Номер телефона: \t{FFFF99}%d\n\
						{FFFFFF}Поддержка звонков: \tДа\n\
						{FFFFFF}Мобильный банк: \tДа\n\
						{FFFFFF}Баланс: \t\t%d\n\
						{FFFFFF}Статус: \t\t\t%s", PI[playerid][data_NUMBER], PI[playerid][pNumberMoney], status);
					}
					case 1:
					{
						ShowPlayerDialog(playerid, 7221, DIALOG_STYLE_INPUT, !"{ee3366}Сделать вызов", !"\
						{FFFFFF}Список государственных слубж и сервисов:\n\n\
						{FFFFFF}Полиция:{3070c1}\t\t\t102\n\
						{FFFFFF}Скорая помощь:{3070c1}\t\t103\n\
						{FFFFFF}Введите номер телефона в окошко ниже:", !"Вызов", !"Отмена");
      				}
      				case 2: 
					{
						ShowPlayerDialog(playerid, 7222, DIALOG_STYLE_INPUT, !"{ee3366}Отправить сообщение", !"\
						{FFFFFF}Введите номер телефона и текст через запятую", !"Отправить", !"Отмена");
      				}
      				case 3: 
					{
						ShowPlayerDialog(playerid, 6001, DIALOG_STYLE_LIST, !"{ee3366}Мобильный банк", !"\
						1. Узнать баланс счёта\n\
						2. Перевести деньги на другой счёт\n\
						3. Оплата штрафов\n\
						4. Оплата имущества\n\
						5. Медицинские услуги", !"Далее", !"Назад");
      				}
      				case 4: 
					{
						mysql_string[0] = EOS, f(mysql_string, 85, "SELECT * FROM `phonebook` WHERE name_add = '%e'",PI[playerid][pName]);
	                    mysql_tquery(mysql, mysql_string, "PhoneBook", "i", playerid);
					}
				  	case 5: SCM(playerid, COLOR_YELLOW, !"Данная функция ещё не была добавлена");
					case 6:
					{
						if(PI[playerid][pPhoneStatus] == 1) 
						{
							PI[playerid][pPhoneStatus] = 0;
							callcmd::phone(playerid);
						}
						else 
						{
                        	PI[playerid][pPhoneStatus] = 1;
                        	callcmd::phone(playerid);
						}
					}
			    }
			}
		}
		case 3210: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    switch(listitem) 
				{
			        case 0: 
					{
						new id = GetPVarInt(playerid, "idg");
						PI[id][data_GID] = -1;
						UpdatePlayerDataInt(id, "GID", PI[id][data_GID],13048);
						SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R] %s %s[%d] удалил %s %s[%d] с группы ('%s')", NameRang(playerid), PI[playerid][pName], playerid, NameRang(id), PI[id][pName], id, PI[id][pGroupName]);
						DeletePVar(playerid, "idg");
				    }
				    default: 
					{
				        new _text[24];
		                sscanf(inputtext, "s", _text);
						mysql_string[0] = EOS, f(mysql_string, 100, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], _text);
	                    mysql_tquery(mysql, mysql_string, "SetGroupPlayer", "i", playerid);
				    }
			    }

			}
		}
		case 3410: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    SetPVarString(playerid, "namegr", inputtext);
				switch(PI[playerid][pMember]) 
				{
					case 1: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 156\n3. ID 154\n4. ID 208\n5. ID 155\n6. ID 147\n7. ID 187", "Выбрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 179\n3. ID 262\n4. ID 253\n5. ID 283\n6. ID 167\n7. ID 277\n8. ID 278\n9. ID 188\n10. ID 222\n11. ID 255\n12 ID 84\n13 ID 283", "Выбрать", "Отмена");
					case 3: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 280\n3. ID 281\n4. ID 282\n5. ID 285\n6. ID 286\n7. ID 288\n8 ID 220\n9. ID 224\n10. ID 284\n11. ID 289", "Выбрать", "Отмена");
					case 4: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 276\n3. ID 71\n4. ID 275\n5. ID 70", "Выбрать", "Отмена");
					case 5: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 6: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 8: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 15\n3. ID 17\n4. ID 23", "Выбрать", "Отмена");
				}
			}
		}
		case 3411: 
		{
		    if(!response) return 1;
			if(response) 
			{
				switch(PI[playerid][pMember])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 156);
						    case 2:SetPVarInt(playerid, "sking", 154);
						    case 3:SetPVarInt(playerid, "sking", 208);
						    case 4:SetPVarInt(playerid, "sking", 187);
						    case 5:SetPVarInt(playerid, "sking", 147);
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 179);
						    case 2:SetPVarInt(playerid, "sking", 262);
						    case 3:SetPVarInt(playerid, "sking", 253);
						    case 4:SetPVarInt(playerid, "sking", 287);
						    case 5:SetPVarInt(playerid, "sking", 167);
						    case 6:SetPVarInt(playerid, "sking", 277);
						    case 7:SetPVarInt(playerid, "sking", 278);
						    case 8:SetPVarInt(playerid, "sking", 279);
						    case 9:SetPVarInt(playerid, "sking", 188);
						    case 10:SetPVarInt(playerid, "sking", 222);
						    case 11:SetPVarInt(playerid, "sking", 255);
                            case 12:SetPVarInt(playerid, "sking", 84);
                            case 13:SetPVarInt(playerid, "sking", 283);

						}
					}
					case 3:
					{
					    switch(listitem)
						{
							case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 280);
						    case 2:SetPVarInt(playerid, "sking", 281);
						    case 3:SetPVarInt(playerid, "sking", 282);
						    case 4:SetPVarInt(playerid, "sking", 285);
						    case 5:SetPVarInt(playerid, "sking", 286);
						    case 6:SetPVarInt(playerid, "sking", 288);
						    case 7:SetPVarInt(playerid, "sking", 220);
						    case 8:SetPVarInt(playerid, "sking", 224);
						    case 9:SetPVarInt(playerid, "sking", 284);
						    case 10:SetPVarInt(playerid, "sking", 289);
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 276);
						    case 2:SetPVarInt(playerid, "sking", 71);
						    case 3:SetPVarInt(playerid, "sking", 275);
						    case 4:SetPVarInt(playerid, "sking", 70);
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 8);
						    case 2:SetPVarInt(playerid, "sking", 17);
						    case 3:SetPVarInt(playerid, "sking", 28);
						    case 4:SetPVarInt(playerid, "sking", 126);
						    case 5:SetPVarInt(playerid, "sking", 117);
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 115);
						    case 2:SetPVarInt(playerid, "sking", 116);
						    case 3:SetPVarInt(playerid, "sking", 114);
						    case 4:SetPVarInt(playerid, "sking", 111);
						    case 5:SetPVarInt(playerid, "sking", 236);
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 123);
						    case 2:SetPVarInt(playerid, "sking", 122);
						    case 3:SetPVarInt(playerid, "sking", 109);
						    case 4:SetPVarInt(playerid, "sking", 108);
						    case 5:SetPVarInt(playerid, "sking", 118);
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 15);
						    case 2:SetPVarInt(playerid, "sking", 18);
						    case 3:SetPVarInt(playerid, "sking", 23);
						}
					}
				}
				switch(PI[playerid][pMember]) 
				{
					case 1: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 216", "Выбрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 191", "Выбрать", "Отмена");
					case 3: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 141", "Выбрать", "Отмена");
					case 4: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 194", "Выбрать", "Отмена");
					case 5: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 6: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 8: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n2. ID 12", "Выбрать", "Отмена");
				}
			}
		}
		case 3412: 
		{
		    if(!response) return 1;
			if(response) 
			{
				switch(PI[playerid][pMember]) 
				{
				    case 1: 
					{
				        switch(listitem) 
						{
				        	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 216);
						}
				    }
				    case 2: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 191);
						}
					}
					case 3: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 141);
						}
					}
					case 4: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 194);
						}
					}
					case 5: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 6: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 7: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 8: 
					{
					    switch(listitem)
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 12);
						}
					}
				}
				new textg[24];
				GetPVarString(playerid, "namegr", textg, sizeof(textg));
				FixSVarString(textg);
				mysql_tqueryf(mysql, "INSERT INTO `group`(`fraction`,`group_name`,`skin_m`,`skin_g`) VALUES ('%d','%s','%d','%d')", PI[playerid][pMember],textg,GetPVarInt(playerid, "sking"),GetPVarInt(playerid, "skinm"));
				SCMf(playerid, COLOR_GREENNEW, "Вы успешно создали группу {FFFF00}('%s')",textg);
				DeletePVar(playerid, "skinm");
				DeletePVar(playerid, "sking");
			}
		}
		case 3211: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    switch(listitem) 
				{
			        case 0: ShowPlayerDialog(playerid, 3410, DIALOG_STYLE_INPUT, "{ee3366}Создание группы", "Название группы", "Продолжить", "Закрыть");
			        default: 
					{
						new _text[24];
		                sscanf(inputtext, "s", _text);
		                SetPVarString(playerid, "gtext", _text);
		                EditGroups(playerid);
					}
				}
			}
		}
		case 3212: 
		{
		    if(!response) return 1;
			if(response) 
			{
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);

                switch(listitem) 
				{
				    case 0: 
					{
						mysql_string[0] = EOS, f(mysql_string, 130, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
	                    mysql_tquery(mysql, mysql_string, "InfoGroup", "i", playerid);
					}
					case 1: 
					{
					    mysql_string[0] = EOS, f(mysql_string, 130, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
	                    mysql_tquery(mysql, mysql_string, "idgroup", "i", playerid);
					}
					case 2: 
					{
						mysql_string[0] = EOS, f(mysql_string, 130, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
	                    mysql_tquery(mysql, mysql_string, "CheckStandart", "i", playerid);
					}
					case 3: 
					{
					    switch(PI[playerid][pMember]) 
						{
							case 1: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 156\n3. ID 154\n4. ID 208\n5. ID 155\n6. ID 147\n7. ID 187", "Выбрать", "Отмена");
							case 2: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 179\n3. ID 262\n4. ID 253\n5. ID 283\n6. ID 167\n7. ID 277\n8. ID 278\n9. ID 188\n10. ID 222\n11. ID 255\n12 ID 84", "Выбрать", "Отмена");
							case 3: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 280\n3. ID 281\n4. ID 282\n5. ID 285\n6. ID 286\n7. ID 288", "Выбрать", "Отмена");
							case 4: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин{FFFFFF}\n2. ID 280\n3. ID 281\n4. ID 282\n5. ID 285\n6. ID 286\n7. ID 288\n8 ID 220\n9. ID 224\n10. ID 284\n11. ID 289", "Выбрать", "Отмена");
							case 5: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 6: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 7: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 8: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{ee3366}Выберете форму одежды", "{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 15\n3. ID 17\n4. ID 23", "Выбрать", "Отмена");
						}
					}
					case 4: 
					{
						switch(PI[playerid][pMember]) 
						{
							case 1: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 216", !"Выбрать", !"Отмена");
							case 2: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 191", !"Выбрать", !"Отмена");
							case 3: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 141", !"Выбрать", !"Отмена");
							case 4: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 194", !"Выбрать", !"Отмена");
							case 5: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 13", !"Выбрать", !"Отмена");
							case 6: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 13", !"Выбрать", !"Отмена");
							case 7: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 13", !"Выбрать", !"Отмена");
							case 8: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, !"{ee3366}Выберете форму одежды", !"{FFFF99}1. Сбросить мужской скин\n{FFFFFF}2. ID 12", !"Выбрать", !"Отмена");
						}
					}
					case 5: ShowPlayerDialog(playerid, 3452, DIALOG_STYLE_INPUT, !"{ee3366}Изменить название группы", !"{FFFFFF}Новое название группы", !"Продолжить", !"Закрыть");
					case 6: 
					{
						mysql_string[0] = EOS, f(mysql_string, 130, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
	                    mysql_tquery(mysql, mysql_string, "CheckDelete", "i", playerid);
					}
					default: return 1;
				}
			}
		}
		case 3452: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
				mysql_tqueryf(mysql, "UPDATE `group` SET `group_name` = '%e' WHERE `group_name` = '%e' AND `fraction` = '%d'",inputtext,grouptext,PI[playerid][pMember]);
				SCMf(playerid, COLOR_GREENNEW, "Вы успешно изменили название группы {FFFF00}('%s'){00aa33} на {FFFF00}('%s')",grouptext,inputtext);
				DeletePVar(playerid, "gtext");
			}
		}
		case 3451: 
		{
		    if(!response) return 1;
			if(response) 
			{
				switch(PI[playerid][pMember]) 
				{
				    case 1: 
					{
				        switch(listitem) 
						{
				        	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 216);
						}
				    }
				    case 2: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 191);
						}
					}
					case 3: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 141);
						}
					}
					case 4: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 194);
						}
					}
					case 5: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 6: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 7: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 8: 
					{
					    switch(listitem) 
						{
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 12);
						}
					}
				}
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
				mysql_string[0] = EOS, f(mysql_string, 110, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
				mysql_tquery(mysql, mysql_string, "ChangeSkinG", "i", playerid);
				DeletePVar(playerid, "gtext");
			}
		}
		case 3450: {
		    if(!response) return 1;
			if(response) {
				switch(PI[playerid][pMember])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 156);
						    case 2:SetPVarInt(playerid, "SKIN", 154);
						    case 3:SetPVarInt(playerid, "SKIN", 208);
						    case 4:SetPVarInt(playerid, "SKIN", 187);
						    case 5:SetPVarInt(playerid, "SKIN", 147);
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 179);
						    case 2:SetPVarInt(playerid, "SKIN", 262);
						    case 3:SetPVarInt(playerid, "SKIN", 253);
						    case 4:SetPVarInt(playerid, "SKIN", 287);
						    case 5:SetPVarInt(playerid, "SKIN", 167);
						    case 6:SetPVarInt(playerid, "SKIN", 277);
						    case 7:SetPVarInt(playerid, "SKIN", 278);
						    case 8:SetPVarInt(playerid, "SKIN", 279);
						    case 9:SetPVarInt(playerid, "SKIN", 188);
						    case 10:SetPVarInt(playerid, "SKIN", 222);
						    case 11:SetPVarInt(playerid, "SKIN", 255);
						    case 12:SetPVarInt(playerid, "SKIN", 84);
						}
					}
					case 3:
					{
					    switch(listitem)
						{
							case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 280);
						    case 2:SetPVarInt(playerid, "SKIN", 281);
						    case 3:SetPVarInt(playerid, "SKIN", 282);
						    case 4:SetPVarInt(playerid, "SKIN", 285);
						    case 5:SetPVarInt(playerid, "SKIN", 286);
						    case 6:SetPVarInt(playerid, "SKIN", 288);
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 276);
						    case 2:SetPVarInt(playerid, "SKIN", 71);
						    case 3:SetPVarInt(playerid, "SKIN", 275);
						    case 4:SetPVarInt(playerid, "SKIN", 70);
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 8);
						    case 2:SetPVarInt(playerid, "SKIN", 17);
						    case 3:SetPVarInt(playerid, "SKIN", 28);
						    case 4:SetPVarInt(playerid, "SKIN", 126);
						    case 5:SetPVarInt(playerid, "SKIN", 117);
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 115);
						    case 2:SetPVarInt(playerid, "SKIN", 116);
						    case 3:SetPVarInt(playerid, "SKIN", 114);
						    case 4:SetPVarInt(playerid, "SKIN", 111);
						    case 5:SetPVarInt(playerid, "SKIN", 236);
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 123);
						    case 2:SetPVarInt(playerid, "SKIN", 122);
						    case 3:SetPVarInt(playerid, "SKIN", 109);
						    case 4:SetPVarInt(playerid, "SKIN", 108);
						    case 5:SetPVarInt(playerid, "SKIN", 118);
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 15);
						    case 2:SetPVarInt(playerid, "SKIN", 18);
						    case 3:SetPVarInt(playerid, "SKIN", 23);
						}
					}
				}
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);

				mysql_string[0] = EOS, f(mysql_string, 110, "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
				mysql_tquery(mysql, mysql_string, "ChangeSkinM", "i", playerid);

				DeletePVar(playerid, "gtext");
			}
		}
		case 7229: 
		{
			if(!response) return callcmd::phone(playerid);
			if(response) 
			{
                switch(listitem) 
				{
				    case 0: 
					{
						ShowPlayerDialog(playerid, 7321, DIALOG_STYLE_INPUT, !"{ee3366}Добавить контакт", !"\
						{FFFFFF}Введите имя контакта (без пробела) и номер телефона через запятую.\n\
						{FFFF99}Например: Ivan_Ivanov, 1234567", !"Добавить", !"Отмена");
					}
                    default: 
					{
                        new _text[24];
                		sscanf(inputtext, "s{d}", _text);
                        ShowPlayerDialog(playerid, 7300, DIALOG_STYLE_LIST, !"{ee3366}Меню контакта", !"\
						{FFFFFF}1. Информация о контакте\n\
						2. Позвонить\n\
						3. Отправить SMS\n\
						4. Изменить имя\n\
						5. Изменить номер\n\
						{FFFF99}6. Удалить контакт", !"Далее", !"Назад");
						SetPVarString(playerid, "pb_namecont", _text);
					}
				}
			}
		}
		case 7300: {
			if(!response) return callcmd::phone(playerid);
			if(response) {
                switch(listitem) {
				    case 0: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_q[256];
				    	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
						mysql_function_query(mysql, str_q, true, "InfoPhoneBook", "i", playerid);
				    }
				    case 1: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_q[256];
				    	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
						mysql_function_query(mysql, str_q, true, "CallPhoneBook", "i", playerid);
				    }
				    case 2: ShowPlayerDialog(playerid, 7322, DIALOG_STYLE_INPUT, "{ee3366}Отправить SMS", "Введите текст сообщения:", "Отправить", "Назад");
				    case 3: ShowPlayerDialog(playerid, 7323, DIALOG_STYLE_INPUT, "{ee3366}Изменить имя", "Введите новое имя контакта (без пробела):", "Изменить", "Назад");
				    case 4: ShowPlayerDialog(playerid, 7324, DIALOG_STYLE_INPUT, "{ee3366}Изменить номер", "Введите новый номер телефона для контакта:", "Изменить", "Назад");
				    case 5: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_3[365];
						format(str_3,sizeof(str_3),"Вы уверены что хотите удалить контакт {3377cc}'%s'{FFFFFF}?\n{696969}Обратите внимание: отменить это действие будет невозможно!", text);
					 	ShowPlayerDialog(playerid, 7325, DIALOG_STYLE_MSGBOX, !"{ee3366}Удалить контакт", str_3, "Да", "Нет");
                    }
					default: return 1;
				}
			}
		}
		case 7325:
		{
		    if(!response) return callcmd::phone(playerid);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[256];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
			mysql_function_query(mysql, str_q, true, "DeletePhoneBook", "i", playerid);
		}
		case 7324:
		{
		    if(!response) return callcmd::phone(playerid);
		    SetPVarInt(playerid, "number_pb", strval(inputtext));
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[130];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
			mysql_function_query(mysql, str_q, true, "ChangeNumberPhoneBook", "i", playerid);
		}
		case 7323:
		{
		    if(!response) return callcmd::phone(playerid);
			SetPVarString(playerid, "c_name", inputtext);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			new str_q[256];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
			mysql_function_query(mysql, str_q, true, "ChangeNamePhoneBook", "i", playerid);
		}
		case 7322:
		{
		    if(!response) return callcmd::phone(playerid);
			SetPVarString(playerid, "sms_pb", inputtext);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[256];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][pName], text);
			mysql_function_query(mysql, str_q, true, "SmsPhoneBook", "i", playerid);
		}
		case 7321:
		{
		    if(!response) return callcmd::phone(playerid);
			new number,name[24];
			if(sscanf(inputtext, "p<,>s[23]d", name, number)) return 1;
			new str_q[256];
		    mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE name = '%e' AND name_add = '%e'", name, PI[playerid][pName]);
			mysql_function_query(mysql, str_q, true, "PhoneBookAddCheck", "d", playerid);
		    SetPVarString(playerid, "name_pb", name);
		    SetPVarInt(playerid, "number_pb", number);
		}
		case 7221:
		{
            if(strval(inputtext) == 777) return SCM(playerid, COLOR_GREY,"Разработка");
            if(strval(inputtext) == 999) return SCM(playerid, COLOR_GREY,"Разработка");
		    if(strval(inputtext) == 102) {
		        if(PI[playerid][data_911_1] > 0) return SCM(playerid, COLOR_GREY,"Вы уже вызывали сотрудников Полиция");
				return ShowPlayerDialog(playerid, 9111, DIALOG_STYLE_INPUT, "{ee3366}Вызов полиции", "Вы позвонили на гарячую линию вызова полции.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
		    }
		    if(strval(inputtext) == 103) {
		        if(PI[playerid][data_911_2] > 0) return SCM(playerid, COLOR_GREY,"Вы уже вызывали сотрудников БЦРБ");
				return ShowPlayerDialog(playerid, 9112, DIALOG_STYLE_INPUT, "{ee3366}Вызов скорой помощи", "Вы позвонили на гарячую линию вызова скорой помощи.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
		    }
			{
				new number[24];
				if(sscanf(inputtext, "p<,>d[23]", number)) return callcmd::phone(playerid);
				new str[144];
				format(str, sizeof(str), "%d", number);
				callcmd::call(playerid,str);
			}
		}
		case 7222: {
			new name, text[64] ;
			if(sscanf(inputtext, "p<,>d[23]s[63]", name, text)) return callcmd::phone(playerid);
			new str[70];
			format(str, sizeof(str), "%d %s", name, text );
			callcmd::sms(playerid,str);
		}
		case 6001: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowBankMoney(playerid);
			        case 1: {
						ShowPlayerDialog(playerid, 6002, DIALOG_STYLE_INPUT, "{ee3366}Перевод на другой счёт", "\
						{FFFFFF}Укажите ID получателя и сумма перевода\n\
						через запятую. Комиссия при переводе составит {3377cc}3%\n\
						{FFFF99}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
					case 2: return 1;
					case 3: ShowPlayerDialog(playerid, 7997, DIALOG_STYLE_LIST, "{ee3366}Оплата аредны", "1. Оплатить дом / квартиру\n2. Оплатить бизнес / АЗС", "Выбрать", "Отмена");
					case 4: return 1;
				}
			}
        }
        		case 5213: 
		{
            if(!response) return 1;
			new id = GetPVarInt(playerid, "PrisonID");
			if(!IsPlayerConnected(id)) return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
			if(!IsPlayerLogged{id}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
            switch(listitem) 
			{
                case 0: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 60*15;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 15 минут. Причина: DM (п. 1.1)", PI[id][pName]);
					SCM(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 15 минут. Причина: DM (п. 1.1)");
					SCMf(id, COLOR_LIGHTGREY, "Номер наказания: %d (для обжалования на {ff6633}"FORUM")");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: DM (п. 1.1)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 1: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 5*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 5 минут. Причина: NonRP Drive (п. 1.19)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 5 минут. Причина: NonRP Drive (п. 1.19)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 5 минут. Причина: NonRP Drive (п. 1.19)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 2: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 60*10;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 10 минут. Причина: DriveBy (п 1.4)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 10 минут. Причина: DriveBy (п 1.4)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 10 минут. Причина: DriveBy (п 1.4)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 3: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 60*20;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 20 минут. Причина: Багоюз (п 1.7)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 20 минут. Причина: Багоюз (п 1.7)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 20 минут. Причина: Багоюз (п 1.7)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 4: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 60*15;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 15 минут. Причина: Помеха работе (п 1.9)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 15 минут. Причина: Помеха работе (п 1.9)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: Помеха работе (п 1.9)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 5: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 15*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 15 минут. Причина: Помеха РП процессу (п 1.22)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 15 минут. Причина: Помеха РП процессу (п 1.22)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: Помеха РП процессу (п 1.22)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 6: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
					PI[id][data_VMUTE] = 1;
					PI[id][data_VMUTETIME] = 10;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали голосовой чат игрока %s на 10 минут. Причина: Музыка (п 2.9)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам голосовой чат на 10 минут. Причина: Музыка (п 2.9)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал голосовой чат игроку %s на 10 минут. Причина: Музыка (п 2.9)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SvMutePlayerEnable(id);
                }
                case 7: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 5*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 5 минут. Причина: TeamKill (п 1.7)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 5 минут. Причина: TeamKill (п 1.7)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 5 минут. Причина: TeamKill (п 1.7)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 8: 
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень  игрового мастера.");
					PI[id][pMember] = 0;
					PI[id][pLeader] = 0;
					PI[id][pRang] = 0;
					PI[id][pAdmin] = 0;
				 	new str_q[256];
				    mysql_format(mysql,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '1', 'Оскорбление игры (п 1.37)', '%e')",PI[id][pName],PI[playerid][pName],PI[id][pLoginIP]);
				    mysql_function_query(mysql, str_q, false, "", "");
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали игрока %s на 1 дн. Причина: Оскорбление игры (п 1.37)", PI[id][pName]);
					SCM(id, COLOR_TOMATO, "Ваш персонаж заблокирован на 1 дн. Причина: Оскорбление игры (п 1.37)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал игрока %s на 1 дн.  Причина: Оскорбление игры (п 1.37)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber],PI[playerid][pName],playerid,PI[id][pName]);
					Kick(id);
                }
                case 9: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень  игрового мастера.");
                	PI[id][data_MUTE] = 1;
					PI[id][data_MUTETIME] = 120;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали чат игрока %s на 120 минут. Причина: Оскорбление ИМ (п 1.25)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам чат на 120 минут. Причина: Оскорбление ИМ (п 1.25)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал чат игроку %s на 120 минут. Причина: Оскорбление ИМ (п 1.25)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
                }
                case 10: 
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
					PI[id][pMember] = 0;
					PI[id][pLeader] = 0;
					PI[id][pRang] = 0;
					PI[id][pAdmin] = 0;
				 	new str_q[256];
				    mysql_format(mysql,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '1', 'Реклама (п 2.6)', '%e')",PI[id][pName],PI[playerid][pName],PI[id][pLoginIP]);
				    mysql_function_query(mysql, str_q, false, "", "");
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали игрока %s на 1 дн. Причина: Реклама (п 2.6)", PI[id][pName]);
					SCM(id, COLOR_TOMATO, "Ваш персонаж заблокирован на 1 дн. Причина: Реклама (п 2.6)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал игрока %s на 1 дн.  Причина: Реклама (п 2.6)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					Kick(id);
                }
                case 11: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
                	PI[id][data_MUTE] = 1;
					PI[id][data_MUTETIME] = 15;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали чат игрока %s на 15 минут. Причина: Флуд (п 2.5)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам чат на 15 минут. Причина: Флуд (п 2.5)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал чат игроку %s на 15 минут. Причина: Флуд (п 2.5)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
                }
                case 12: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
                	PI[id][data_MUTE] = 1;
					PI[id][data_MUTETIME] = 15;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали чат игрока %s на 15 минут. Причина: Оффтоп (п 2.5)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам чат на 15 минут. Причина: Оффтоп (п 2.5)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал чат игроку %s на 15 минут. Причина: Оффтоп (п 2.5)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
                }
                case 13: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 25*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 25 минут. Причина: AFK в бою (п 1.5)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 25 минут. Причина: AFK в бою (п 1.5)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 25 минут. Причина: AFK в бою (п 1.5)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 14: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
                	PI[id][data_MUTE] = 1;
					PI[id][data_MUTETIME] = 10;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали чат игрока %s на 10 минут. Причина: MG (п 2.7)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам чат на 10 минут. Причина: MG (п 2.7)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.7)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
                }
                case 15: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
                	PI[id][data_MUTE] = 1;
					PI[id][data_MUTETIME] = 10;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали чат игрока %s на 10 минут. Причина: MG (п 2.10)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам чат на 10 минут. Причина: MG (п 2.10)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.10)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
                }
				case 16: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 60*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 60 минут. Причина: Читы / Скрипты (п 1.6)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 60 минут. Причина: Читы / Скрипты (п 1.6)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 60 минут. Причина: Читы / Скрипты (п 1.6)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 17: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 15*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 15 минут. Причина: PowerGaming (п 1.12)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 15 минут. Причина: PowerGaming (п 1.12)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: PowerGaming (п 1.12)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 18: 
				{
					PI[id][pHospital] = 0;
					PI[id][pDemorgan] = 1;
					PI[id][pDemorganTIME] = 5*60;
					SCMf(playerid, COLOR_TOMATO, "Вы посадили в тюрьму игрока %s на 5 минут. Причина: NonRP /me (п 1.25)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 5 минут. Причина: NonRP /me (п 1.25)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] посадил игрока %s в тюрьму на 5 минут. Причина: NonRP /me (п 1.25)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SavePlayerData(id);
					PlayerSpawn(id);

					if(PI[id][pOnCapture] == 1)
					{
						AutoKickCapture(id);
						CheckCount(id);
					}
                }
                case 19: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
					SCMf(playerid, COLOR_TOMATO, "Вы кикнули игрока %s. Причина: NonRP /sleep (п 1.39)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер кикнул Вас. Причина: NonRP /sleep (п 1.39)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] кикнул игрока %s. Причина: NonRP /sleep (п 1.39)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SCM(id,COLOR_GREY, "Вы были отключены от сервера, для выхода из игры используйте /(q)uit");
					Kick(id);
                }
                case 20: 
				{
					if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_GREY, !"Для выдачи этого наказания у Вас должен быть более высокий уровень игрового мастера.");
					PI[id][data_VMUTE] = 1;
					PI[id][data_VMUTETIME] = 15;
					SCMf(playerid, COLOR_TOMATO, "Вы заблокировали голосовой чат игрока %s на 15 минут. Причина: Неадекватное поведение (п 2.12)", PI[id][pName]);
					SCMf(id, COLOR_TOMATO, "Игровой мастер заблокировал Вам голосовой чат на 15 минут. Причина: Неадекватное поведение (п 2.12)");
					SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал голосовой чат игроку %s на 15 минут. Причина: Неадекватное поведение (п 2.12)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,PI[id][pName]);
					SvMutePlayerEnable(id);
                }
            }
            DeletePVar(playerid, "PrisonID");
        }
		case 8999: 
		{
		    if(!response) return 1;
		    if(response) 
			{
			    switch(listitem) 
				{
      				case 0: ShowPlayerDialog(playerid, 8998, DIALOG_STYLE_LIST, "{ee3366}Банкомат", "1. Узнать баланс счёта\n2. Снять деньги со счета\n3. Пополнить счёт\n4. Перевести деньги на другой счёт\n5. Положить деньги на счет телефона", "Выбрать", "Отмена");
      				case 1: ShowPlayerDialog(playerid, 8997, DIALOG_STYLE_LIST, "{ee3366}Оплата аредны", "1. Оплатить дом / квартиру\n2. Оплатить бизнес / АЗС", "Выбрать", "Отмена");
      				case 3: SCM(playerid, COLOR_YELLOW, !"Разработка. Приятной игры на {921dd1}"NAMESERVER"");
			    }
			}
		}
        case 8997: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
							new h = PI[playerid][data_HOUSE];
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							{FFFFFF}Номер дома: %d\n\
							{FFFFFF}Статус оплаты: %d / 30 дней\n\
							{FFFF99}Квартплата - 1499 руб / день\n\n\
							{FFFFFF}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
						 	ShowPlayerDialog(playerid, 7950, DIALOG_STYLE_INPUT, "{ee3366}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) {
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							{FFFFFF}Номер квартиры: %d\n\
							{FFFFFF}Статус оплаты: %d / 30 дн\n\
							{FFFF99}Квартплата - 1299 руб / день\n\n\
							{FFFFFF}Введите количество дней для оплаты",KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
						 	ShowPlayerDialog(playerid, 7951, DIALOG_STYLE_INPUT, "{ee3366}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
					}
					case 1: {
					    if(PI[playerid][pBusiness] == INVALID_BUSINESS_ID) return SCM(playerid, COLOR_GREY,"У Вас нет бизнеса или АЗС");
						new b = PI[playerid][pBusiness];
						new str_1[256];
						format(str_1,sizeof(str_1),"\
						{FFFFFF}Номер бизнеса: %d\n\
						{FFFFFF}Статус оплаты: %d / 30 дней\n\
						{FFFF99}Налог - 3999 рублей\n\n\
						{FFFFFF}Введите количество дней для оплаты", BizInfo[b][data_ID], BizInfo[b][bDays]);
						ShowPlayerDialog(playerid, 7952, DIALOG_STYLE_INPUT, "{ee3366}Оплата бизнеса", str_1, "Выполнить", "Назад");
					}
				}
			}
        }
        /*case 8998: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowBankMoney(playerid);
			        case 1: ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{ee3366}Снятие наличных", "Комиссия составит {3377cc}4%\n{FFFFFF}Введите требуемую сумму", "Снять", "Назад");
			        case 2: ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{ee3366}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			        case 3: {
						ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{ee3366}Перевод на другой счёт", "\
						Укажите ID получателя и сумма перевода\n\
						через запятую. Комиссия при переводе составит {3377cc}3%\n\
						{FFFF99}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
			        case 4: ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_INPUT, "{ee3366}Банк", "Введите сумму которую желаете положить на счет телефона", "Пополнить", "Назад");
				}
			}
        }*/
        case 7997: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
							new h = PI[playerid][data_HOUSE];
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							Номер дома: %d\n\
							{FFFFFF}Статус оплаты: %d / 30 дней\n\
							{FFFF99}Квартплата - 1499 руб / день\n\n\
							{FFFFFF}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
						 	ShowPlayerDialog(playerid, 7950, DIALOG_STYLE_INPUT, "{ee3366}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) {
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							Номер квартиры: %d\n\
							{FFFFFF}Статус оплаты: %d / 30 дн\n\
							{FFFF99}Квартплата - 1299 руб / день\n\n\
							{FFFFFF}Введите количество дней для оплаты",KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
						 	ShowPlayerDialog(playerid, 7951, DIALOG_STYLE_INPUT, "{ee3366}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
					}
					case 1: {
					    if(PI[playerid][pBusiness] == INVALID_BUSINESS_ID) return SCM(playerid, COLOR_GREY,"У Вас нет бизнеса или АЗС");
						new b = PI[playerid][pBusiness];
						new str_1[256];
						format(str_1,sizeof(str_1),"\
						Номер бизнеса: %d\n\
						{FFFFFF}Статус оплаты: %d / 30 дней\n\
						{FFFF99}Налог - 3999 рублей\n\n\
						{FFFFFF}Введите количество дней для оплаты", BizInfo[b][data_ID], BizInfo[b][bDays]);
						ShowPlayerDialog(playerid, 7952, DIALOG_STYLE_INPUT, "{ee3366}Оплата бизнеса", str_1, "Выполнить", "Назад");
					}
				}
			}
        }
		case 7900: {
		    if(!response) return 1;
		    if(response) {
		        for(new h = 0; h < TotalHouses; h++) {
		        	if(PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SCM(playerid, COLOR_GREY,"У Вас уже есть недвижимость");
			            if(HOUSE_DATA[h][data_OWNED] == 1) return SCM(playerid, COLOR_GREY,"Данный дом уже куплен");
						if(GetPlayerMoneyID(playerid) < HOUSE_DATA[h][data_PRICE]) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
						PI[playerid][data_HOUSE] = h;
			            HOUSE_DATA[h][data_OWNED] = 1;
			            HOUSE_DATA[h][data_DAY] = 3;
			            strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			            GivePlayerMoneyLog(playerid,-HOUSE_DATA[h][data_PRICE]);
			            SCM(playerid,0xFFCC33FF, "Поздравляем Вас с покупкой дома! Он был оплачен на 3 дня");
			            SCM(playerid,0xFFCC33FF, "Для управления домом используйте: /home");
			            SCM(playerid, 0x9F81F7FF, "Используйте: /setspawn, чтобы изменить место появления");
			            UpdateHouseData(h);
			            SaveHouseData(h);
			           	return 1;
			        }
		    	}
			}
		}
		case 8791: {
			if(!response) return 1;
			if(response) {
				if(pDialogCurrectTime[playerid] - gettime() < 1) {
					new gun = GetPlayerWeapon(GetPVarInt(playerid, "from_player"));
					new gunslot = getWeaponIdSlot(gun);
					if(PI[GetPVarInt(playerid, "from_player")][data_GUN][gunslot] == 0 || gunslot == 0) return SCM(GetPVarInt(playerid, "from_player"), COLOR_GREY,"Чтобы продать оружие, нужно взять его в руки");
					if(PI[GetPVarInt(playerid, "from_player")][data_AMMO][gunslot] < GetPVarInt(playerid, "value_1")) return SCM(GetPVarInt(playerid, "from_player"), COLOR_GREY, "У Вас нет такого количества патронов");
					new ammonew = PI[GetPVarInt(playerid, "from_player")][data_AMMO][gunslot] - GetPVarInt(playerid, "value_1");
					SetWeapon(GetPVarInt(playerid, "from_player"), gun, ammonew);
					GiveWeapon(playerid, gun, GetPVarInt(playerid, "value_1"));
					new cena = GetPVarInt(GetPVarInt(playerid, "from_player"), "cena")/GetPVarInt(GetPVarInt(playerid, "from_player"), "pt");
					new str2[70],str1[70],pay[20],pay1[20];
					format(str2,sizeof(str2),"Продажа %s (%d пт) %s[%d]",weapon_names[gun], GetPVarInt(playerid, "value_1"), PI[playerid][pName],playerid);
					format(str1,sizeof(str1),"Покупка %s (%d пт) у %s[%d]",weapon_names[gun], GetPVarInt(playerid, "value_1"), PI[GetPVarInt(playerid, "from_player")][pName],GetPVarInt(playerid, "from_player"));
					format(pay,sizeof(pay),"-%dР",GetPVarInt(GetPVarInt(playerid, "from_player"), "cena"));
					format(pay1,sizeof(pay1),"+%dР",GetPVarInt(GetPVarInt(playerid, "from_player"), "cena"));
					cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str1), CEFSTR("fb4949"), CEFSTR(pay));
					cef_emit_event(GetPVarInt(playerid, "from_player"), "show-notify-no-img", CEFSTR(str2), CEFSTR("418055"), CEFSTR(pay1));
					SCMf(GetPVarInt(playerid, "from_player"), 0xFF99CCFF, "%s купил у Вас %s (%d пт) за %d руб (%d за 1 пт)",PI[playerid][pName], weapon_names[gun], GetPVarInt(playerid, "value_1"),GetPVarInt(GetPVarInt(playerid, "from_player"), "cena"),cena);
					GivePlayerMoneyLog(playerid,-GetPVarInt(playerid, "cena"));
					GivePlayerMoneyLog(GetPVarInt(playerid, "from_player"),GetPVarInt(playerid, "cena"));

					SCMf(playerid, 0xFF99CCFF, "Вы купили у %s %s (%d пт) за %d руб (%d за 1 пт)",PI[GetPVarInt(playerid, "from_player")][pName], weapon_names[gun], GetPVarInt(playerid, "value_1"),GetPVarInt(GetPVarInt(playerid, "from_player"), "cena"),cena);PI[GetPVarInt(playerid, "from_player")][pProgressSellGun]+= 1;
				}
				else SCM(playerid, COLOR_GREY,"Дождитесь окончания отыгровки");
			}
		}
		case 8790: {
			if(!response) return 1;
			if(response) {
				if(pDialogCurrectTime[playerid] - gettime() < 1) {
					new gun = GetPlayerWeapon(GetPVarInt(playerid, "from_player"));
					new gunslot = getWeaponIdSlot(gun);
					if(PI[GetPVarInt(playerid, "from_player")][data_GUN][gunslot] == 0 || gunslot == 0) return SCM(GetPVarInt(playerid, "from_player"), COLOR_GREY,"Чтобы передать оружие, нужно взять его в руки");
					if(PI[GetPVarInt(playerid, "from_player")][data_AMMO][gunslot] < GetPVarInt(playerid, "value_1")) return SCM(GetPVarInt(playerid, "from_player"), COLOR_GREY, "У Вас нет такого количества патронов");
					new ammonew = PI[GetPVarInt(playerid, "from_player")][data_AMMO][gunslot] - GetPVarInt(playerid, "value_1");
					SetWeapon(GetPVarInt(playerid, "from_player"), gun, ammonew);
					GiveWeapon(playerid, gun, GetPVarInt(playerid, "value_1"));
					new string[60];
					format(string, sizeof(string), "%s передал(а) оружие %s",PI[GetPVarInt(playerid, "from_player")][pName],PI[playerid][pName]);
					ProxDetector(30.0, GetPVarInt(playerid, "from_player"), string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(GetPVarInt(playerid, "from_player"), "передал(а) оружие", 0xFF99CCFF, 20.0, 4000);
					SCMf(GetPVarInt(playerid, "from_player"), 0xFF99CCFF, "%s взял у Вас %s (%d пт)",PI[playerid][pName], weapon_names[gun], GetPVarInt(playerid, "value_1"));
				}
				else SCM(playerid, COLOR_GREY,"Дождитесь окончания отыгровки");
			}
		}
		case 9800: {
			if(!response) return 1;
			if(response) {
				new text[24];
				GetPVarString(playerid,"uninvitereason", text, sizeof(text));
				FixSVarString(text);
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				static name2[24];
				SetString(name2, NameRang(GetPVarInt(playerid, "uninviteid")));
				name2 = NameRang(GetPVarInt(playerid, "uninviteid"));
				new year, month, day;
				getdate(year, month, day);
				new str_q[370];
				mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`,`w_dal`,`w_reas`,`w_dalrank`) VALUES ('%d','%d','%s','Увольнение','%d','%d','%d','%d','%s','%s','%s')", PI[GetPVarInt(playerid, "uninviteid")][pID], PI[GetPVarInt(playerid, "uninviteid")][pMember], PI[GetPVarInt(playerid, "uninviteid")][pName], PI[GetPVarInt(playerid, "uninviteid")][pRang], day, month, year, PI[playerid][pRang], text, name);
				mysql_function_query(mysql, str_q, false, "", "");
				new str[145];
				if(PI[playerid][pMember] == 2) {
					if(PI[GetPVarInt(playerid, "uninviteid")][pRang] >= 4) {
					    if(PI[GetPVarInt(playerid, "uninviteid")][data_MILITARY] == 0) {
						    SCM(GetPVarInt(playerid, "uninviteid"), COLOR_GREEN, "Вы отслужили в армии и получили военный билет");
						    PI[GetPVarInt(playerid, "uninviteid")][data_MILITARY] = 1;
						}
					}
				}
				if(PI[GetPVarInt(playerid, "uninviteid")][pOnCapture] == 1)
				{
					AutoKickCapture(GetPVarInt(playerid, "uninviteid"));
					CheckCount(GetPVarInt(playerid, "uninviteid"));
				}
				format(str,sizeof(str),"[R] %s %s уволил из организации %s %s. Причина: %s", name,PI[playerid][pName],name2, PI[GetPVarInt(playerid, "uninviteid")][pName],text);
				cef_emit_event(GetPVarInt(playerid, "uninviteid"), "hide_kill_list");
				cef_emit_event(GetPVarInt(playerid, "uninviteid"), "hide-capture");
				SendFractionMessage(PI[playerid][pMember], COLOR_TOMATO, str);
				PI[GetPVarInt(playerid, "uninviteid")][pMember] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][pRang] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][TWARN] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][pLeader] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][pProgressMetall] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pProgressDrugs] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pProgressAmmo] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pProgressCarGrabber] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pProgressSellGun] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pProgressCapture] = 0;
	            PI[GetPVarInt(playerid, "uninviteid")][pCaptureManager] = 0;
				SetPlayerSkinAC(GetPVarInt(playerid, "uninviteid"),PI[GetPVarInt(playerid, "uninviteid")][pSkin]);
				SetPlayerColorEx(GetPVarInt(playerid, "uninviteid"));
				PI[GetPVarInt(playerid, "uninviteid")][data_MEDCARD] = 0;
				for(new g; g <= totalgz; g++) GangZoneHideForPlayer(GetPVarInt(playerid, "uninviteid"), g);
				GangZoneStopFlashForPlayer(GetPVarInt(playerid, "uninviteid"), WarZone);
				SetPlayerTeam(GetPVarInt(playerid, "uninviteid"), NO_TEAM);
				if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "uninviteid")) && GetPlayerState(GetPVarInt(playerid, "uninviteid")) == PLAYER_STATE_DRIVER) {
					new Float:x, Float:y, Float:z;
				 	GetPlayerPos(GetPVarInt(playerid, "uninviteid"),x,y,z);
				 	SetPlayerPosAC(GetPVarInt(playerid, "uninviteid"),x,y,z+2);
				}
				PI[GetPVarInt(playerid, "uninviteid")][data_TIMERANK] = 0;
				SavePlayerData(GetPVarInt(playerid, "uninviteid"));
				ClearGroup(GetPVarInt(playerid, "uninviteid"));
			}
		}
		case 9250: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
                    case 0: {
						new str_q[90];
                		mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "InvSkin", "d", playerid);
                    }
                    case 1: {
                    	new str_q[90];
                		mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "InvMoney", "d", playerid);
                    }
                    case 2: {
                    	new str_q[90];
                		mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "InvCar", "d", playerid);
                    }
                    case 3: {
                    	new str_q[90];
                		mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "InvRub", "d", playerid);
                    }
                    case 4: {
                    	new str_q[90];
                		mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][pName]);
						mysql_function_query(mysql, str_q, true, "InvBoost", "d", playerid);
                    }
			    }
			}
		}
		case 7515: {
  		  		if(!response) return 1;
		 		if(response) {
			    switch(listitem) {
   					case 0: ShowPlayerDialog(playerid, 9315, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 30 минут", "Выбрать", "Назад");
      				case 1: ShowPlayerDialog(playerid, 9316, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 15 минут", "Выбрать", "Назад");
      				case 2: ShowPlayerDialog(playerid, 9323, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 5 минут", "Выбрать", "Назад");
      				case 3: ShowPlayerDialog(playerid, 9312, DIALOG_STYLE_LIST, "Государственная волна", "Начать собеседование", "Выбрать", "Назад");
      				case 4: ShowPlayerDialog(playerid, 9313, DIALOG_STYLE_LIST, "Государственная волна", "Продолжить собеседование", "Выбрать", "Назад");
      				case 5: ShowPlayerDialog(playerid, 9314, DIALOG_STYLE_LIST, "Государственная волна", "Закончить собеседование", "Выбрать", "Назад");
      				case 6: ShowPlayerDialog(playerid, 9328, DIALOG_STYLE_LIST, "Государственная волна", "Отменить собеседование", "Выбрать", "Назад");

				}
			}
		}
		case 7788: {
  		  		if(!response) return 1;
		 		if(response) {
			    switch(listitem) {
   					case 0: ShowPlayerDialog(playerid, 9315, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 30 минут", "Выбрать", "Назад");
      				case 1: ShowPlayerDialog(playerid, 9316, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 15 минут", "Выбрать", "Назад");
      				case 2: ShowPlayerDialog(playerid, 9323, DIALOG_STYLE_LIST, "Государственная волна", "Запланировать за 5 минут", "Выбрать", "Назад");
      				case 3: ShowPlayerDialog(playerid, 9312, DIALOG_STYLE_LIST, "Государственная волна", "Начать собеседование", "Выбрать", "Назад");
      				case 4: ShowPlayerDialog(playerid, 9313, DIALOG_STYLE_LIST, "Государственная волна", "Продолжить призыв", "Выбрать", "Назад");
      				case 5: ShowPlayerDialog(playerid, 9314, DIALOG_STYLE_LIST, "Государственная волна", "Закончить призыв", "Выбрать", "Назад");
      				case 6: ShowPlayerDialog(playerid, 9328, DIALOG_STYLE_LIST, "Государственная волна", "Отменить призыв", "Выбрать", "Назад");

				}
			}
		}
		case 9312:
		{
		    if(!response) return callcmd::gov(playerid);
			if(response)
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE, "В организации «%s» началось собеседование", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Все подробности Вы найдёте на информационном пикапе в здание *%s*", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно начали собеседование/призыв");
					}
				}
			}
  		}
		case 9313:
		{
		    if(!response) return callcmd::gov(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE, "В организации «%s» продолжается собеседование", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Все подробности Вы найдёте на информационном пикапе в здание «%s»", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно продолжили собеседование/призыв");
					}
				}
			}
  		}
		case 9314:
		{
		    if(!response) return callcmd::gov(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE, "В организации «%s» закончилось собеседование", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Все подробности Вы найдёте на информационном пикапе в здание «%s»", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно закончили собеседование/призыв");
					}
				}
			}
  		}
		case 9315:
		{
		    if(!response) return callcmd::gov(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Через 30 минут начнётся собеседование в организацию «%s»", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Все подробности Вы найдёте на информационном пикапе в здание «%s»", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно оповестили граждан о своём собеседование/призыве");
					}
				}
			}
  		}
		case 9316:
		{
		    if(!response) return callcmd::gov(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Через 15 минут начнётся собеседование в организацию «%s»", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE, "Все подробности Вы найдёте на информационном пикапе в здание «%s»", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно оповестили граждан о своём собеседование/призыве");
					}
				}
			}
  		}
		case 9323:
		{
		    if(!response) return open_gov(playerid);
			if(response) 
			{
				switch(listitem)
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE,"Через 5 минут начнётся собеседование в организацию «%s»", Fraction_Name[PI[playerid][pMember]]);
							SendClientMessageToAllf(COLOR_BLACKBLUE,"Все подробности Вы найдёте на информационном пикапе в здание «%s»", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы успешно оповестили граждан о своём собеседование/призыве");
					}
				}
			}
  		}
		case 9328:
		{
		    if(!response) return open_gov(playerid);
			if(response) 
			{
				switch(listitem) 
				{
					case 0:
					{
						if(PI[playerid][pMember] != 0)
						{
							SendClientMessageToAllf(COLOR_BLACKBLUE,"Собеседование в организацию «%s» отменено.", Fraction_Name[PI[playerid][pMember]]);
						}
						return SCM(playerid, COLOR_LIGHTORANGE, !"[!!!] {ffff99}Вы отменили собеседование/призыв");
					}
				}
			}
  		}
		case 7500: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
      				case 0: {
					    if(PI[playerid][pRang] < 10) return SCM(playerid, COLOR_GREY, !"Данная команда доступна лидерам организаций");
						if(!IsPlayerLogged{playerid}) return 1;
						new str_q[110];
						mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][pMember]);
						mysql_function_query(mysql, str_q, true, "EditGroup", "d", playerid);
      				}
      				case 1: 
					{
						if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) return SCM(playerid, COLOR_YELLOW, "Переводы доступны только в Государственых Организациях");
      					callcmd::transfers(playerid);
      				}
      				case 2: callcmd::allmembers(playerid);
      				case 3: callcmd::bl(playerid);
      				case 4: ShowPlayerDialog(playerid, 8975, DIALOG_STYLE_LIST, "{ee3366}Автопарк организации", "{FFFFFF}1. Заспавнить транспорт организации", "Выбрать", "Назад");
      				case 5: ShowPlayerDialog(playerid, 7512, DIALOG_STYLE_INPUT, "{ee3366}Принять в организацию", "{FFFFFF}Введите ID игрока:", "Принять", "Отмена");
      				case 6: ShowPlayerDialog(playerid, 7502, DIALOG_STYLE_INPUT, "{ee3366}Уволить из организации", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\nПример: 5,НВЗ", "Уволить", "Отмена");
      				case 7: ShowPlayerDialog(playerid, 7504, DIALOG_STYLE_INPUT, "{ee3366}Уволить из организации оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\n{d7d394}Например: Ivan_Zolo", "Уволить", "Отмена");
      				case 8: ShowPlayerDialog(playerid, 7505, DIALOG_STYLE_INPUT, "{ee3366}Выдать выговор", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\n{d7d394}Например: 32, Н.В.З.", "Выдать", "Отмена");
      				case 9: ShowPlayerDialog(playerid, 7506, DIALOG_STYLE_INPUT, "{ee3366}Выдать выговор в оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\n{d7d394}Например: Ivan_Zolo", "Выдать", "Отмена");
      				case 10: ShowPlayerDialog(playerid, 7507, DIALOG_STYLE_INPUT, "{ee3366}Снять выговор", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\nПример: 5,Ошибка", "Снять", "Отмена");
      				case 11: ShowPlayerDialog(playerid, 7508, DIALOG_STYLE_INPUT, "{ee3366}Снять выговор в оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\nПример: Ivan_Bober", "Снять", "Отмена");
      				case 12: ShowPlayerDialog(playerid, 7509, DIALOG_STYLE_INPUT, "{ee3366}Изменить ранг", "{FFFFFF}Введите ID игрока и '+' или '-' (без кавычек) через запятую\nПример: 78, +", "Изменить", "Отмена");
      				case 13: ShowPlayerDialog(playerid, 7510, DIALOG_STYLE_INPUT, "{ee3366}Изменить внешность", "{FFFFFF}Введите ID игрока:", "Изменить", "Отмена");
      				case 14: ShowPlayerDialog(playerid, 7511, DIALOG_STYLE_INPUT, "{ee3366}Изменить группу", "{FFFFFF}Введите ID игрока:", "Изменить", "Отмена");
				    case 15: ShowPlayerDialog(playerid, 7503, DIALOG_STYLE_MSGBOX, !"{ee3366}Расформировать организацию", "{FFFFFF}Вы подтверждаете расормирование организации?\nДействие нельзя будет отменить.", "Продолжить", "Отмена");
				    case 16: callcmd::gov(playerid);
			    }
			}
      	}
		case 7501:
		{
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) 
				{
      				case 0: 
					{
					    if(PI[playerid][pRang] < 10) return SCM(playerid, COLOR_GREY, !"Данная команда доступна лидерам организаций");
						if(!IsPlayerLogged{playerid}) return 1;
						new str_q[110];
						mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][pMember]);
						mysql_function_query(mysql, str_q, true, "EditGroup", "d", playerid);
      				}
      				case 1: callcmd::allmembers(playerid);
      				case 2: callcmd::bl(playerid);
      				case 3: ShowPlayerDialog(playerid, 8975, DIALOG_STYLE_LIST, "{ee3366}Автопарк организации", "1. Заспавнить весь транспорт организации", "Выбрать", "Назад");
      				case 4: ShowPlayerDialog(playerid, 7512, DIALOG_STYLE_INPUT, "{ee3366}Принять в организацию", "{FFFFFF}Введите ID игрока:", "Принять", "Отмена");
      				case 5: ShowPlayerDialog(playerid, 7502, DIALOG_STYLE_INPUT, "{ee3366}Уволить из организации", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\nПример: 5,НВЗ", "Уволить", "Отмена");
      				case 6: ShowPlayerDialog(playerid, 7504, DIALOG_STYLE_INPUT, "{ee3366}Уволить из организации оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\n{d7d394}Например: Ivan_Zolo", "Уволить", "Отмена");
      				case 7: ShowPlayerDialog(playerid, 7505, DIALOG_STYLE_INPUT, "{ee3366}Выдать выговор", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\n{d7d394}Например: 32, Н.В.З.", "Выдать", "Отмена");
      				case 8: ShowPlayerDialog(playerid, 7506, DIALOG_STYLE_INPUT, "{ee3366}Выдать выговор в оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\n{d7d394}Например: Ivan_Zolo", "Выдать", "Отмена");
      				case 9: ShowPlayerDialog(playerid, 7507, DIALOG_STYLE_INPUT, "{ee3366}Снять выговор", "{FFFFFF}Введите ID игрока и причину через запятую в поле ниже\nПример: 5,Ошибка", "Снять", "Отмена");
      				case 10: ShowPlayerDialog(playerid, 7508, DIALOG_STYLE_INPUT, "{ee3366}Снять выговор в оффлайн", "{FFFFFF}Введите имя игрока в поле ниже\nПример: Ivan_Bober", "Снять", "Отмена");
      				case 11: ShowPlayerDialog(playerid, 7510, DIALOG_STYLE_INPUT, "{ee3366}Изменить внешность", "{FFFFFF}Введите ID игрока:", "Изменить", "Отмена");
      				case 12: ShowPlayerDialog(playerid, 7511, DIALOG_STYLE_INPUT, "{ee3366}Изменить группу", "{FFFFFF}Введите ID игрока:", "Изменить", "Отмена");
					case 13: ShowPlayerDialog(playerid, 8416, DIALOG_STYLE_INPUT, "{ee3366}Назначить смотрящего", "{FFFFFF}Введите ID игрока:", "Выдать", "Отмена");
			  		case 14: ShowPlayerDialog(playerid, 8417, DIALOG_STYLE_INPUT, "{ee3366}Снять смотрящего", "{FFFFFF}Введите ID игрока:", "Снять", "Отмена");
			  		case 15: ShowPlayerDialog(playerid, 7503, DIALOG_STYLE_MSGBOX, !"{ee3366}Расформировать организацию", "{FFFFFF}Вы подтверждаете расормирование организации?\nДействие нельзя будет отменить.", "Продолжить", "Отмена");
			    }
			}
      	}
		case 8975:
		{
		    if(!response) return callcmd::lmenu(playerid);
		    if(GetPVarInt(playerid,"SpawnCar") > gettime()) return SCM(playerid, COLOR_GREY, !"Респавнить транспорт организации можно раз в 15 секунд ");
   	        switch(listitem) {
   	            case 0:
				{
		   			if(response) if(PI[playerid][pMember] == 5)
					{
				 		DestroyVehicle(skinhead_car[1]);
				 		skinhead_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[1], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[1], 1);
		  		 		DestroyVehicle(skinhead_car[2]);
				 		skinhead_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[2], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[2], 1);
		  		 		DestroyVehicle(skinhead_car[3]);
				 		skinhead_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[3], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[3], 1);
		  		 		DestroyVehicle(skinhead_car[4]);
				 		skinhead_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[4], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[4], 1);
		  		 		DestroyVehicle(skinhead_car[5]);
				 		skinhead_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[5], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[5], 1);
		  		 		DestroyVehicle(skinhead_car[6]);
				 		skinhead_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[6], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[6], 1);
		  		 		DestroyVehicle(skinhead_car[7]);
				 		skinhead_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 1, 1, -1);
					   	SetVehicleVirtualWorld(skinhead_car[7], GARAGE_INT_SKINHEAD);
					    LinkVehicleToInterior(skinhead_car[7], 1);
					    SetPVarInt(playerid,"SpawnCar",gettime() + 25);
					}
		   			if(response) if(PI[playerid][pMember] == 1)
					{
				 		DestroyVehicle(gov_car[1]);
				 		gov_car[1] = CreateVehicle(551, -152.6144,628.7219,-50.1706,356.2022, 0, 0, -1);
					   	SetVehicleVirtualWorld(gov_car[1], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[1], 1);
		  		 		DestroyVehicle(gov_car[2]);
				 		gov_car[2] = CreateVehicle(494, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[2], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[2], 1);
		  		 		DestroyVehicle(gov_car[3]);
				 		gov_car[3] = CreateVehicle(494, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[3], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[3], 1);
		  		 		DestroyVehicle(gov_car[4]);
				 		gov_car[4] = CreateVehicle(418, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[4], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[4], 1);
		  		 		DestroyVehicle(gov_car[5]);
				 		gov_car[5] = CreateVehicle(418, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[5], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[5], 1);
		  		 		DestroyVehicle(gov_car[6]);
				 		gov_car[6] = CreateVehicle(479, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[6], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[6], 1);
		  		 		DestroyVehicle(gov_car[7]);
				 		gov_car[7] = CreateVehicle(480, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
					   	SetVehicleVirtualWorld(gov_car[7], GARAGE_INT_MERIYA);
					    LinkVehicleToInterior(gov_car[7], 1);
					    SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
		   			if(response) if(PI[playerid][pMember] == 3)
					{
		                DestroyVehicle(police_car[1]);
		                police_car[1] = CreateVehicle(599, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[1], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[1], 1);
		                DestroyVehicle(police_car[2]);
		                police_car[2] = CreateVehicle(596, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[2], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[2], 1);
		                DestroyVehicle(police_car[3]);
		                police_car[3] = CreateVehicle(597, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[3], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[3], 1);
		                DestroyVehicle(police_car[4]);
		                police_car[4] = CreateVehicle(597, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[4], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[4], 1);
		                DestroyVehicle(police_car[5]);
		                police_car[5] = CreateVehicle(598, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[5], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[5], 1);
		                DestroyVehicle(police_car[6]);
		                police_car[6] = CreateVehicle(598, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[6], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[6], 1);
		                DestroyVehicle(police_car[7]);
		                police_car[7] = CreateVehicle(598, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
		                SetVehicleVirtualWorld(police_car[7], GARAGE_INT_MVD);
		                LinkVehicleToInterior(police_car[7], 1);
		                SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
					if(response) if(PI[playerid][pMember] == 4)
					{
					    DestroyVehicle(hospital_car[1]);
					    hospital_car[1] = CreateVehicle(416, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[1], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[1], 1);
		                DestroyVehicle(hospital_car[2]);
					    hospital_car[2] = CreateVehicle(416, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[2], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[2], 1);
		                DestroyVehicle(hospital_car[3]);
					    hospital_car[3] = CreateVehicle(416, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[3], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[3], 1);
		                DestroyVehicle(hospital_car[4]);
					    hospital_car[4] = CreateVehicle(416, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[4], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[4], 1);
		                DestroyVehicle(hospital_car[5]);
					    hospital_car[5] = CreateVehicle(416, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[5], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[5], 1);
		                DestroyVehicle(hospital_car[6]);
					    hospital_car[6] = CreateVehicle(551, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[6], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[6], 1);
		                DestroyVehicle(hospital_car[7]);
					    hospital_car[7] = CreateVehicle(551, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
		       			SetVehicleVirtualWorld(hospital_car[7], GARAGE_INT_CRB);
		                LinkVehicleToInterior(hospital_car[7], 1);
		                SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
					if(response) if(PI[playerid][pMember] == 6)
					{
						DestroyVehicle(gopota_car[1]);
						gopota_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[1], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[1], 1);
						DestroyVehicle(gopota_car[2]);
						gopota_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[2], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[2], 1);
						DestroyVehicle(gopota_car[3]);
						gopota_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[3], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[3], 1);
						DestroyVehicle(gopota_car[4]);
						gopota_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[4], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[4], 1);
						DestroyVehicle(gopota_car[5]);
						gopota_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[5], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[5], 1);
						DestroyVehicle(gopota_car[6]);
						gopota_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[6], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[6], 1);
						DestroyVehicle(gopota_car[7]);
						gopota_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 24, 24, -1);
						SetVehicleVirtualWorld(gopota_car[7], GARAGE_INT_GOPOTA);
						LinkVehicleToInterior(gopota_car[7], 1);
						SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
					if(response) if(PI[playerid][pMember] == 7)
					{
		                DestroyVehicle(kavkaz_car[1]);
		                kavkaz_car[1] = CreateVehicle(404, -120.1114,628.1298,-50.3746,0.0683, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[1], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[1], 1);
		                DestroyVehicle(kavkaz_car[2]);
		                kavkaz_car[2] = CreateVehicle(492, -128.7444,628.2188,-50.3748,359.2198, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[2], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[2], 1);
		                DestroyVehicle(kavkaz_car[3]);
		                kavkaz_car[3] = CreateVehicle(504, -136.2352,628.0240,-50.3748,0.9594, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[3], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[3], 1);
		                DestroyVehicle(kavkaz_car[4]);
		                kavkaz_car[4] = CreateVehicle(418, -148.8755,628.7747,-50.3747,0.1094, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[4], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[4], 1);
		                DestroyVehicle(kavkaz_car[5]);
		                kavkaz_car[5] = CreateVehicle(422, -120.1441,653.5405,-50.3746,179.6092, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[5], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[5], 1);
		                DestroyVehicle(kavkaz_car[6]);
		                kavkaz_car[6] = CreateVehicle(475, -128.5931,653.5984,-50.3746,179.5707, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[6], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[6], 1);
		                DestroyVehicle(kavkaz_car[7]);
		                kavkaz_car[7] = CreateVehicle(400, -136.2937,653.7285,-50.3743,180.1815, 0, 0, -1);
		                SetVehicleVirtualWorld(kavkaz_car[7], GARAGE_INT_OFFCLUB);
		                LinkVehicleToInterior(kavkaz_car[7], 1);
		                SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
					if(response) if(PI[playerid][pMember] == 2)
					{
					    DestroyVehicle(army_car[0]);
		                army_car[0] = CreateVehicle(433, 1820.8024,1669.9033,15.9475,358.8507, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[0], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[0], 1);
		                DestroyVehicle(army_car[1]);
		                army_car[1] = CreateVehicle(599, -152.6144,628.7219,-50.1706,356.2022, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[1], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[1], 1);
		                DestroyVehicle(army_car[2]);
		                army_car[2] = CreateVehicle(597, -148.8862,628.6601,-50.1706,357.1905, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[2], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[2], 1);
		                DestroyVehicle(army_car[3]);
		                army_car[3] = CreateVehicle(597, -140.8531,629.0610,-50.1706,355.4791, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[3], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[3], 1);
		                DestroyVehicle(army_car[4]);
		                army_car[4] = CreateVehicle(598, -136.9894,629.2422,-50.1706,358.5539, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[4], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[4], 1);
		                DestroyVehicle(army_car[5]);
		                army_car[5] = CreateVehicle(598, -129.2403,628.5641,-50.1706,359.4196, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[5], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[5], 1);
		                DestroyVehicle(army_car[6]);
		                army_car[6] = CreateVehicle(598, -128.5097,653.4676,-50.1706,181.3475, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[6], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[6], 1);
		                DestroyVehicle(army_car[7]);
		                army_car[7] = CreateVehicle(598, -135.6245,653.2039,-50.1706,176.8134, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[7], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[7], 1);
		                DestroyVehicle(army_car[8]);
		                army_car[8] = CreateVehicle(601, 1816.5143,1669.4126,15.0190,0.9330, 1, 1, -1);
		                SetVehicleVirtualWorld(army_car[8], GARAGE_INT_VCH);
		                LinkVehicleToInterior(army_car[8], 1);
		                SetPVarInt(playerid,"SpawnCar",gettime() + 15);
					}
					return SCM(playerid, COLOR_GREY, !"Вы успешно зареспавнили весь транспорт организации");
				}
			}
		}
		case 7565:
		{
		    if(!response) return 1;
			if(response) 
			{
				if(PI[playerid][pAdminWarn] != 0) 
				{
					if(PI[playerid][pAdminEvents] > 5) 
					{
						if(PI[playerid][pAdminReports] > 45) 
						{
							PI[playerid][pAdminWarn]--;
							UpdatePlayerDataInt(playerid, "admvig", PI[playerid][pAdminWarn],14401);
							PI[playerid][pAdminReports] = 0;
							UpdatePlayerDataInt(playerid, "AdminReports", PI[playerid][pAdminReports],14403);
							PI[playerid][pAdminEvents] = 0;
							UpdatePlayerDataInt(playerid, "AdminEvents", PI[playerid][pAdminEvents],14405);
							SCMf(playerid, COLOR_YELLOW, "Вы успешно отрыботали 1 выговор. Состояние выговоров на данный момент - {3366cc}%d / 3", PI[playerid][pAdminWarn]);
						}
					}
				}
				return 1;
			}
		}
		case 7566:
		{
		    if(!response) return 1;
			if(response) 
			{
				if(PI[playerid][pAdminEvents] > 2*PI[playerid][pAdmin]) 
				{
					if(PI[playerid][pAdminReports] > 25*PI[playerid][pAdmin]) 
					{
						SCM(playerid, COLOR_YELLOW, !"Вы успешно повысили свой уровень игрово мастера. {3366cc}Задания обновлены!");
						PI[playerid][pAdmin]++;
						UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin],14421);
						PI[playerid][pAdminReports] = 0;
						UpdatePlayerDataInt(playerid, "AdminReports", PI[playerid][pAdminReports],14423);
						PI[playerid][pAdminEvents] = 0;
						UpdatePlayerDataInt(playerid, "AdminEvents", PI[playerid][pAdminEvents],14425);
					}
				}
				return 1;
			}
		}
		case 7512:
		{
		    if(!response) return 1;
			if(response) {
				if(strval(inputtext) == playerid) return SCM(playerid, COLOR_GREY, !"Нельзя использовать на самом себе");
				SetPVarInt(playerid, "Invite", strval(inputtext));
				new str_q[180];
			    mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e' AND bl_fraction = '%d'", PI[strval(inputtext)][pName], PI[playerid][pMember]);
				mysql_function_query(mysql, str_q, true, "CheckBlackListInvite", "d", playerid);
			}
		}
		case 7511: 
		{
		    if(!response) return 1;
			if(response) callcmd::setgroup(playerid,inputtext);
		}
		case 7510: 
		{
		    if(!response) return 1;
			if(response) callcmd::setskin(playerid,inputtext);
		}
		/*case 8416: 
		{
		    if(!response) return 1;
			if(response) callcmd::giveantivar(playerid,inputtext);
		}
	  	case 8417: 
	  	{
		    if(!response) return 1;
			if(response) callcmd::ungiveantivar(playerid,inputtext);
		}*/
		case 8416:
		{
			if(!response) return 1;
			if(response)
			{
				new id = strval(inputtext);
				if(!IsPlayerConnected(id))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
				if(!IsPlayerLogged{id})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
				if(PI[playerid][pMember] != PI[id][pMember]) return SCM(playerid, COLOR_GREY, !"Данный игрок не состоит в Вашей организации");
				if(PI[id][pCaptureManager] == 1) return SCM(playerid, COLOR_GREY, !"Данный игрок уже занимает должность смотрящего за стрелами");


				new Cache: result, query[68];

				mysql_format(mysql, query, sizeof query, "SELECT * FROM accounts WHERE member='%d' AND CaptureManager = '1'", PI[playerid][pMember]);
				result = mysql_query(mysql, query, true);

				if(cache_num_rows() >= 3)
				{	
					SendClientMessage(playerid, COLOR_GREY, !"Максимум можно иметь 3 смотрящих за захватом территории");
				}
				cache_delete(result);


				static name[24], name_player[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);

				SetString(name_player, NameRang(id));
				name_player = NameRang(id);
				
				SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R] %s %s[%d] назначил смотрящим за стрелой %s %s[%d]",\
					name, getName(playerid), playerid,\
					name_player, getName(id), id);
				
				PI[id][pCaptureManager] = 1;

			}
		}
		case 8417:
		{
			if(!response) return 1;
			if(response)
			{
				new id = strval(inputtext);
				if(!IsPlayerConnected(id))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
				if(!IsPlayerLogged{id})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
				if(PI[playerid][pMember] != PI[id][pMember]) return SCM(playerid, COLOR_GREY, !"Данный игрок не состоит в Вашей организации");
				if(PI[id][pCaptureManager] == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок не занимает должность смотрящего за стрелами");

				static name[24], name_player[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);

				SetString(name_player, NameRang(id));
				name_player = NameRang(id);
				
				SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R] %s %s[%d] назнал смотрящим за стрелой %s %s[%d]",\
					name, getName(playerid), playerid,\
					name_player, getName(id), id);
				
				PI[id][pCaptureManager] = 0;

			}
		}
		case 7509: 
		{
		    if(!response) return 1;
			if(response) {
				new id, reason[25] ;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::setrang(playerid,str);
			}
		}
		case 7508: 
		{
		    if(!response) return 1;
			if(response) callcmd::unofftwarn(playerid,inputtext);
		}
		case 7507:
		{
		    if(!response) return 1;
			if(response)
			{
				new id, reason[25] ;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::untwarn(playerid,str);
				return 1;
			}
		}
		case 7506:
		{
		    if(!response) return 1;
			if(response) callcmd::offtwarn(playerid,inputtext);
		}
		case 7504:
		{
		    if(!response) return 1;
			if(response) callcmd::offuninvite(playerid,inputtext);
		}
		case 7502:
		{
		    if(!response) return 1;
			if(response)
			{
				new
					id,
					reason[25]
				;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) {
					return callcmd::lmenu(playerid);
				}
				new str[144];
				format(str, sizeof(str),
					"%d %s",
					id,
					reason
				);
				callcmd::uninvite(playerid,str);
				return 1;
			}
		}
		case 7505: 
		{
		    if(!response) return 1;
			if(response) 
			{
				new id, reason[25];
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::twarn(playerid,str);
				return 1;
			}
		}
		case 7503: {
		    if(!response) return 1;
			if(response) if(PI[playerid][pAdmin] < 4) return 1;
		}
		case 7214:
		{
		    if(!response) return 1;
			if(response)
			{
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "[R] %s %s покинул организацию по собственному желанию",name,PI[playerid][pName]);
				SCMf(playerid, COLOR_TOMATO, "Вы покинули организацию '%s' по собственному желанию", Fraction_Name[PI[playerid][pMember]]);
				
				cef_emit_event(playerid, "hide-capture");
				for(new g; g <= totalgz; g++) GangZoneHideForPlayer(playerid, g);
				GangZoneStopFlashForPlayer(playerid, WarZone);
				ClearGroup(playerid);
				new year, month, day ;
				getdate(year, month, day);
				new str_q[256];
				mysql_format(mysql, str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','Собственное желание','%d','%d','%d','%d')", PI[playerid][pID], PI[playerid][pMember], PI[playerid][pName], PI[playerid][pRang], day, month, year);
				mysql_function_query(mysql, str_q, false, "", "");
				PI[playerid][pMember] = 0;
				PI[playerid][pRang] = 0;
				PI[playerid][pLeader] = 0;
				PI[playerid][pProgressMetall] = 0;
	            PI[playerid][pProgressDrugs] = 0;
	            PI[playerid][pProgressAmmo] = 0;
	            PI[playerid][pProgressCarGrabber] = 0;
	            PI[playerid][pProgressSellGun] = 0;
	            PI[playerid][pProgressCapture] = 0;
	            PI[playerid][pCaptureManager] = 0;
				SetPlayerSkinAC(playerid,PI[playerid][pSkin]);
				SetPlayerColorEx(playerid);
				if(PI[playerid][pMember] == 2 && PI[playerid][pRang] <= 3 && PI[playerid][data_MILITARY] == 0) 
				{
					SCM(playerid, COLOR_HINT, "[Подсказка]: {FFFFFF}Вы отслужили в армии и получили военный билет");
					PI[playerid][data_MILITARY] = 1;
				}
				if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					SetPlayerPosAC(playerid,x,y,z+2);
				}
			}
		}
		case 7216: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    if(!IsPlayerLogged{playerid}) return 1;
			    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, !"Для преобретения имущества Вы должны иметь как минимум 2 уровень");
				for(new k = 0; k < TotalKV; k++) {
			        new kv;
			        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SCM(playerid, COLOR_GREY, !"У Вас уже есть недвижимость");
			            if(KV_DATA[kv][data_OWNED][k] == 1) return SCM(playerid, COLOR_GREY, !"У данной квартиры уже есть владелец");
						if(GetPlayerMoneyID(playerid) < KV_DATA[kv][data_PRICE][k]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
						PI[playerid][data_PADIK] = kv;
						PI[playerid][data_KV] = k;
			            KV_DATA[kv][data_OWNED][k] = 1;
			            KV_DATA[kv][data_DAY][k] = 3;
			            switch(k)
						{
							case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
						}
			            GivePlayerMoneyLog(playerid,-KV_DATA[kv][data_PRICE][k]);
			            SCM(playerid,0xFFCC33FF, "Поздравляем Вас с покупкой квартиры! Она была оплачена на 3 дня");
			            SCM(playerid,0xFFCC33FF, "Для управления квартирой используйте: /home");
			            SCM(playerid, 0x9F81F7FF, "Используйте: /setspawn, чтобы изменить место появления");
			            UpdateKVData(kv,k);
			            SaveKVData(kv);
			           	SavePlayerData(playerid);
			           	return 1;
			        }
			    }
			    return 1;
			}
		}
		case 7217: 
		{
		    if(!response) return 1;
			if(response) 
			{
			    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
				for(new k = 0; k < TotalKV; k++) {
			        new kv;
			        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SCM(playerid, COLOR_GREY,"У Вас уже есть недвижимость");
			            if(KV_DATA[kv][data_OWNED][k] == 1) return SCM(playerid, COLOR_GREY,"У данной квартиры уже есть владелец");
						if(GetPlayerMoneyID(playerid) < KV_DATA[kv][data_PRICE][k]) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
						PI[playerid][data_PADIK] = kv;
						PI[playerid][data_KV] = k;
			            KV_DATA[kv][data_OWNED][k] = 1;
			            KV_DATA[kv][data_DAY][k] = 3;
			            switch(k) {
							case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
							case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
						}
			            GivePlayerMoneyLog(playerid,-KV_DATA[kv][data_PRICE][k]);
			            SCM(playerid, 0xFFCC33FF, !"Поздравляем Вас с покупкой квартиры! Она была оплачена на 3 дня");
			            SCM(playerid, 0xFFCC33FF, !"Для управления квартирой используйте: /home");
			            SCM(playerid, 0x9F81F7FF, !"Используйте: /setspawn, чтобы изменить место появления");
			            UpdateKVData(kv,k);
			            SaveKVData(kv);
			           	return 1;
			        }
			    }
			    return 1;
			}
		}
		case dialog_ABACK: {
		    if(!response) return 1;
		    if(response) callcmd::ahelp(playerid);
		}
		case dialog_DISCONNECT: {
		    if(!response) return Kick(playerid);
		    if(response) return Kick(playerid);
		}
		case dialog_SETSPAWN: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
					    if(PI[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Вы не состоите во организации");
                        PI[playerid][data_SPAWN] = 1;
					    SCM(playerid, COLOR_YELLOW, !"Место спавна изменено");
					}
		            case 1: {
					    PI[playerid][data_SPAWN] = 0;
					    SCM(playerid, COLOR_YELLOW, !"Место спавна изменено");
					}
		            case 2: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
                        PI[playerid][data_SPAWN] = 2;
					    SCM(playerid, COLOR_YELLOW, !"Место спавна изменено");
					}
		        }
		    }
		}
	}
	return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source) return 1;
public OnPlayerSpawn(playerid)
{
	if(!IsPlayerLogged{playerid}) return Kick(playerid);
	if(console_Debbug == 1) printf("[SpawnGood]: Player %s, pAdmin: %d, pID %d", PI[playerid][pName], PI[playerid][pAdmin], PI[playerid][pID]);

	if(bombacitve == 1) return RemoveBuildingForPlayer(playerid, 985, 1700.1240, 1837.8086, 14.2100, 0.25);

	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);
	StopAudioStreamForPlayer(playerid);
    Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 1000, playerid);

	SetPlayerSkills(playerid);
    SetPlayerHealthAC(playerid, PI[playerid][pHealthPoints]);

	SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);

	TogglePlayerControllable(playerid, true);
//	CheckGangWar(playerid);
	PI[playerid][pStartJob] = 0;
    PI[playerid][data_PUTPATR] = 0;
    PI[playerid][data_PUTMET] = 0;
	shield[playerid] = false;
    DisablePlayerCheckpoint(playerid);
    DisablePlayerRaceCheckpoint(playerid);
	PlayerHideTextDraws(playerid);
	if(GetPVarInt(playerid, "DeathOnCapture") == 0)
	{
		for(new i = 0; i < 13; i++) 
		{
			if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) return GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
		}
	}
	SettingSpawn(playerid);
	SetAccessory(playerid);
	return true;
}
alias:donate("donat", "adon", "don");
cmd:donate(playerid) 
{
	new str_q[68];
    mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'",PI[playerid][pName]);
    mysql_function_query(mysql, str_q, true, "LoadDonate", "i", playerid);
}
callback: LoadDonate(playerid) 
{
    new rows, fields, temp[20];
    cache_get_data(rows, fields);
    if(rows) 
	{
        cache_get_field_content(0, "Donate", temp), PI[playerid][pDonate] = strval (temp);
		ShowPlayerDialog(playerid, dialog_DONATE, DIALOG_STYLE_LIST, "{ee3366}Дополнительные услуги", "\
		{FFFF99}Информация\n\
		{FFFF99}Последние 10 операций\n\
		Конвертирование донат-поинтов в рубли \t{66ccff}(от 1 дп.)\n\
		Покупка всех навыков стрельбы \t\t{66ccff}(100 дп)\n\
		Снятие предупреждений \t\t\t{66ccff}(60 дп)\n\
		Изменение имени \t\t\t\t{66ccff}(100 дп)\n\
		Подписка {FFA500}"NAMEVIP"\t\t\t{66ccff}(200 дп/мес.)\n\
		Покупка военного билета\t\t\t{66ccff}(129 дп)\n\
		Покупка законопослушности (+10)\t\t{66ccff}(19 дп)\n\
		Покупка 4-x значного номера телефона\t{66ccff}(150 дп)\n\
		Покупка аксессуара\t\t\t\t{66ccff}(от 10 дп)", "Далее", "Закрыть");
    }
    return 1;
}
callback: LoadHouses() 
{
    new rows, fields, temp[256], time = GetTickCount();
    cache_get_data(rows, fields);
	LoadedHouse = cache_get_row_count(mysql);
    if(rows) 
	{
    	for(new h = 0; h < rows; h++) 
		{
	        cache_get_field_content(h, "id", temp), HOUSE_DATA[h][data_ID] = strval (temp);
	        cache_get_field_content(h, "owner", HOUSE_DATA[h][data_OWNER], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(h, "enterx", temp), HOUSE_DATA[h][data_ENTERX] = floatstr (temp);
	        cache_get_field_content(h, "entery", temp), HOUSE_DATA[h][data_ENTERY] = floatstr (temp);
	        cache_get_field_content(h, "enterz", temp), HOUSE_DATA[h][data_ENTERZ] = floatstr (temp);
	        cache_get_field_content(h, "exitx", temp), HOUSE_DATA[h][data_EXITX] = floatstr (temp);
	        cache_get_field_content(h, "exity", temp), HOUSE_DATA[h][data_EXITY] = floatstr (temp);
	        cache_get_field_content(h, "exitz", temp), HOUSE_DATA[h][data_EXITZ] = floatstr (temp);
	        cache_get_field_content(h, "carx", temp), HOUSE_DATA[h][data_CARX] = floatstr (temp);
	        cache_get_field_content(h, "cary", temp), HOUSE_DATA[h][data_CARY] = floatstr (temp);
	        cache_get_field_content(h, "carz", temp), HOUSE_DATA[h][data_CARZ] = floatstr (temp);
	        cache_get_field_content(h, "cara", temp), HOUSE_DATA[h][data_CARANGLE] = floatstr (temp);
	        cache_get_field_content(h, "class", temp), HOUSE_DATA[h][data_CLASS] = strval (temp);
	        cache_get_field_content(h, "owned", temp), HOUSE_DATA[h][data_OWNED] = strval (temp);
	        cache_get_field_content(h, "price", temp), HOUSE_DATA[h][data_PRICE] = strval (temp);
	        cache_get_field_content(h, "day", temp), HOUSE_DATA[h][data_DAY] = strval (temp);
	        cache_get_field_content(h, "lock", temp), HOUSE_DATA[h][data_LOCK] = strval (temp);
         	TotalHouses++;
         	if(HOUSE_DATA[h][data_OWNED] == 0) {
         	    HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
				HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 100.0);
         	}
         	else {
    	     	HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1272, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],0);
                HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 100.0);
        	}
        }
        if(console_Debbug == 1) printf("[INFO]  Load houses. Load: %d h. Time: %d ms.",TotalHouses, GetTickCount()-time);
	}
    return 1;
}
callback: LoadKV() 
{
    new rows, fields, temp[256],time = GetTickCount(),str[256],str1[64];
    cache_get_data(rows, fields);
	LoadedKV = cache_get_row_count(mysql);
    if(rows) 
	{
    	for(new kv = 0; kv < rows; kv++) 
		{
	        cache_get_field_content(kv, "id", temp), KV_DATA[kv][data_ID] = strval (temp);
         	cache_get_field_content(kv, "owner1", KV_DATA[kv][data_OWNER_1], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner2", KV_DATA[kv][data_OWNER_2], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner3", KV_DATA[kv][data_OWNER_3], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner4", KV_DATA[kv][data_OWNER_4], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner5", KV_DATA[kv][data_OWNER_5], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner6", KV_DATA[kv][data_OWNER_6], mysql, MAX_PLAYER_NAME);
            cache_get_field_content(kv, "owned1", temp), KV_DATA[kv][data_OWNED][0] = strval (temp);
	        cache_get_field_content(kv, "owned2", temp), KV_DATA[kv][data_OWNED][1] = strval (temp);
	        cache_get_field_content(kv, "owned3", temp), KV_DATA[kv][data_OWNED][2] = strval (temp);
	        cache_get_field_content(kv, "owned4", temp), KV_DATA[kv][data_OWNED][3] = strval (temp);
	        cache_get_field_content(kv, "owned5", temp), KV_DATA[kv][data_OWNED][4] = strval (temp);
	        cache_get_field_content(kv, "owned6", temp), KV_DATA[kv][data_OWNED][5] = strval (temp);
	        cache_get_field_content(kv, "price1", temp), KV_DATA[kv][data_PRICE][0] = strval (temp);
	        cache_get_field_content(kv, "price2", temp), KV_DATA[kv][data_PRICE][1] = strval (temp);
	        cache_get_field_content(kv, "price3", temp), KV_DATA[kv][data_PRICE][2] = strval (temp);
	        cache_get_field_content(kv, "price4", temp), KV_DATA[kv][data_PRICE][3] = strval (temp);
	        cache_get_field_content(kv, "price5", temp), KV_DATA[kv][data_PRICE][4] = strval (temp);
	        cache_get_field_content(kv, "price6", temp), KV_DATA[kv][data_PRICE][5] = strval (temp);
	        cache_get_field_content(kv, "lock1", temp), KV_DATA[kv][data_LOCK][0] = strval (temp);
	        cache_get_field_content(kv, "lock2", temp), KV_DATA[kv][data_LOCK][1] = strval (temp);
	        cache_get_field_content(kv, "lock3", temp), KV_DATA[kv][data_LOCK][2] = strval (temp);
	        cache_get_field_content(kv, "lock4", temp), KV_DATA[kv][data_LOCK][3] = strval (temp);
	        cache_get_field_content(kv, "lock5", temp), KV_DATA[kv][data_LOCK][4] = strval (temp);
	        cache_get_field_content(kv, "lock6", temp), KV_DATA[kv][data_LOCK][5] = strval (temp);
	        cache_get_field_content(kv, "day1", temp), KV_DATA[kv][data_DAY][0] = strval (temp);
	        cache_get_field_content(kv, "day2", temp), KV_DATA[kv][data_DAY][1] = strval (temp);
	        cache_get_field_content(kv, "day3", temp), KV_DATA[kv][data_DAY][2] = strval (temp);
	        cache_get_field_content(kv, "day4", temp), KV_DATA[kv][data_DAY][3] = strval (temp);
	        cache_get_field_content(kv, "day5", temp), KV_DATA[kv][data_DAY][4] = strval (temp);
	        cache_get_field_content(kv, "day6", temp), KV_DATA[kv][data_DAY][5] = strval (temp);
	        cache_get_field_content(kv, "class1", temp), KV_DATA[kv][data_CLASS][0] = strval (temp);
	        cache_get_field_content(kv, "class2", temp), KV_DATA[kv][data_CLASS][1] = strval (temp);
	        cache_get_field_content(kv, "class3", temp), KV_DATA[kv][data_CLASS][2] = strval (temp);
	        cache_get_field_content(kv, "class4", temp), KV_DATA[kv][data_CLASS][3] = strval (temp);
	        cache_get_field_content(kv, "class5", temp), KV_DATA[kv][data_CLASS][4] = strval (temp);
	        cache_get_field_content(kv, "class6", temp), KV_DATA[kv][data_CLASS][5] = strval (temp);
	        cache_get_field_content(kv, "enter_x", temp), KV_DATA[kv][data_ENTER_X] = floatstr (temp);
	        cache_get_field_content(kv, "enter_y", temp), KV_DATA[kv][data_ENTER_Y] = floatstr (temp);
	        cache_get_field_content(kv, "enter_z", temp), KV_DATA[kv][data_ENTER_Z] = floatstr (temp);
	        cache_get_field_content(kv, "exit_x", temp), KV_DATA[kv][data_EXIT_X] = floatstr (temp);
	        cache_get_field_content(kv, "exit_y", temp), KV_DATA[kv][data_EXIT_Y] = floatstr (temp);
	        cache_get_field_content(kv, "exit_z", temp), KV_DATA[kv][data_EXIT_Z] = floatstr (temp);
			// Вход в инт
            KV_DATA[kv][data_ENTER_POSX][0] = 32.7846;
            KV_DATA[kv][data_ENTER_POSY][0] = 1906.9014;
            KV_DATA[kv][data_ENTER_POSZ][0] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][1] = 37.1719;
            KV_DATA[kv][data_ENTER_POSY][1] = 1906.7296;
            KV_DATA[kv][data_ENTER_POSZ][1] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][2] = 44.9090;
            KV_DATA[kv][data_ENTER_POSY][2] = 1908.8892;
            KV_DATA[kv][data_ENTER_POSZ][2] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][3] = 37.5377;
            KV_DATA[kv][data_ENTER_POSY][3] = 1927.5522;
            KV_DATA[kv][data_ENTER_POSZ][3] = 1120.9175;
            KV_DATA[kv][data_ENTER_POSX][4] = 31.3240;
            KV_DATA[kv][data_ENTER_POSY][4] = 1924.9763;
            KV_DATA[kv][data_ENTER_POSZ][4] = 1120.9175;
            KV_DATA[kv][data_ENTER_POSX][5] = 33.4195;
            KV_DATA[kv][data_ENTER_POSY][5] = 1927.6848;
            KV_DATA[kv][data_ENTER_POSZ][5] = 1120.9175;
            // Выход из инт
            KV_DATA[kv][data_EXIT_POSX][0] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][0] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][0] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][1] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][1] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][1] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][2] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][2] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][2] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][3] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][3] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][3] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][4] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][4] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][4] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][5] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][5] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][5] = 905.8036;
	        cache_get_field_content(kv, "car_posx", temp), KV_DATA[kv][data_CAR_POSX] = floatstr (temp);
	        cache_get_field_content(kv, "car_posy", temp), KV_DATA[kv][data_CAR_POSY] = floatstr (temp);
	        cache_get_field_content(kv, "car_posz", temp), KV_DATA[kv][data_CAR_POSZ] = floatstr (temp);
	        cache_get_field_content(kv, "car_posa", temp), KV_DATA[kv][data_CAR_POSA] = floatstr (temp);
	        TotalKV++;
            KV_DATA[kv][data_PICK_ENTER] = CreateDynamicPickup(1272, 23, KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z],0);
			KV_DATA[kv][data_PICK_EXIT] = CreateDynamicPickup(1318, 23, 35.8316,1927.6235,1113.7346,KV_DATA[kv][data_ID]);
			format(str1,sizeof(str1), "{FFFFFF}Подъезд {ee3366}№%d\n{FFFFFF}Кол-во квартир: {ee3366}7",kv+1);
   			KV_DATA[kv][data_INF_ENTER] = CreateDynamic3DTextLabel(str1, -1, KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
   			KV_DATA[kv][data_INF_EXIT] = CreateDynamic3DTextLabel("{FFFFFF}Для выхода нажмите 'L.ALT'", -1, KV_DATA[kv][data_EXIT_X], KV_DATA[kv][data_EXIT_Y], KV_DATA[kv][data_EXIT_Z], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			new owner[MAX_PLAYER_NAME], class_kv[9],kk;
			for(new k = 0; k < 6; k++) {
				switch(k) {
				    case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
				    case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
				    case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
				    case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
				    case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
				    case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
				}
				switch(KV_DATA[kv][data_CLASS][k]) {
				    case 0: class_kv = "Хрущёвка";
				    case 1: class_kv = "Простая";
				    case 2: class_kv = "Элитный";
				}
				KV_DATA[kv][data_PICKKV_ENTER][k] = CreateDynamicPickup(1277, 23, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], KV_DATA[kv][data_ID]);
				KV_DATA[kv][data_PICKKV_EXIT][k] = CreateDynamicPickup(1272, 23, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k], KV_DATA[kv][data_ID]+k);
				if(KV_DATA[kv][data_OWNED][k] == 1) {
			        kk++;
			        format(str,sizeof(str), "\
					{ffffff}Номер квартиры: {ffffff}№%d\n\
					{ffffff}Название: {FFFFFF}%s\n\
					{ffffff}Владелец: {3377cc}%s\n\
					Стоимость: {3377cc}%d руб",k+1, class_kv, owner, KV_DATA[kv][data_PRICE][k]);
		 	        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			    }
			    else {
                    format(str,sizeof(str), "\
					{ffffff}Номер квартиры: {ffffff}№%d\n\
					{ffffff}Название: {ffffff}%s\n\
					{ffffff}Стоимость: {ffffff}%d рублей\n\
					{ffffff}Используйте: {3377cc}/buykv",k+1, class_kv, KV_DATA[kv][data_PRICE][k]);
		 	        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			    }
			}
			if(kk == 6) KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 32, -1, 0, -1, -1, 100.0);
			else KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 31, -1, 0, -1, -1, 100.0);
        }
        if(console_Debbug == 1) printf("[INFO]  Load kvartiry. Load: %d b. Time: %d ms.",TotalKV,GetTickCount()-time);
  	}
    return 1;
}
callback: LoadGZ() {
    new rows, fields, temp[602];
    cache_get_data(rows, fields);
    if(!rows) return print("[MYSQL] Территории не найдены");
    if(rows) {
        for(new g = 0; g < rows; g++) {
            cache_get_field_content(g, "gzid", temp), gz_info[g][gzid] = strval (temp);
            cache_get_field_content(g, "gzminx", temp), gz_info[g][gzminx] = floatstr (temp);
            cache_get_field_content(g, "gzminy", temp), gz_info[g][gzminy] = floatstr (temp);
            cache_get_field_content(g, "gzmaxx", temp), gz_info[g][gzmaxx] = floatstr (temp);
            cache_get_field_content(g, "gzmaxy", temp), gz_info[g][gzmaxy] = floatstr (temp);
            cache_get_field_content(g, "gzopg", temp), gz_info[g][gzopg] = strval (temp);
			cache_get_field_content(g, "standart_team", temp), gz_info[g][standart_opg] = strval (temp);
            if(gz_info[g][gzid] != 101) GangZoneCreate(gz_info[g][gzminx], gz_info[g][gzminy], gz_info[g][gzmaxx], gz_info[g][gzmaxy]);
	        totalgz++;
        }
    }
    if(console_Debbug == 1) printf("%d территорий загружено", totalgz);
    return 1;
}
callback: LoadWarehouse()
{
	new rows, fields, temp[10],time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) 
	{
		cache_get_field_content(0, "rostov_metal", temp), rostov_wh[0] = strval (temp);
		cache_get_field_content(0, "rostov_patr", temp), rostov_wh[1] = strval (temp);
		cache_get_field_content(0, "rostov_narko", temp), rostov_wh[2] = strval (temp);
		cache_get_field_content(0, "rostov_storage", temp), rostov_wh[3] = strval (temp);
		cache_get_field_content(0, "gopota_metal", temp), gopota_wh[0] = strval (temp);
		cache_get_field_content(0, "gopota_patr", temp), gopota_wh[1] = strval (temp);
		cache_get_field_content(0, "gopota_narko", temp), gopota_wh[2] = strval (temp);
		cache_get_field_content(0, "gopota_storage", temp), gopota_wh[3] = strval (temp);
		cache_get_field_content(0, "kavkaz_metal", temp), kavkaz_wh[0] = strval (temp);
		cache_get_field_content(0, "kavkaz_patr", temp), kavkaz_wh[1] = strval (temp);
		cache_get_field_content(0, "kavkaz_narko", temp), kavkaz_wh[2] = strval (temp);
		cache_get_field_content(0, "gopota_storage", temp), kavkaz_wh[3] = strval (temp);
		cache_get_field_content(0, "smi_money", temp), smi_money = strval (temp);
		cache_get_field_content(0, "army_metal", temp), army_wh[0] = strval (temp);
		cache_get_field_content(0, "army_patr", temp), army_wh[1] = strval (temp);
		cache_get_field_content(0, "moroz_kavkaz", temp), m_kavkaz = strval (temp);
		cache_get_field_content(0, "moroz_gopota", temp), m_gopota = strval (temp);
		cache_get_field_content(0, "moroz_skinhead", temp), m_skinhead = strval (temp);
		//вч склад
		cache_get_field_content(0, "armystorage", temp), ArmyStorage = strval (temp);
		//склад шахты
		cache_get_field_content(0, "metall", temp), MineOreStock = strval (temp);
        cache_get_field_content(0, "coal", temp), MineCoalStock = strval (temp);
		//
		new str_mine[135];
        format(str_mine, sizeof str_mine, "{ff9933}Шахта\n\n\
                                        {FFFFFF}Металла на складе: {ffcc33}%d кг\n\
                                        {FFFFFF}Угля на складе: {cc6666}%d кг", MineOreStock, MineCoalStock);
        MineInfo = CreateDynamic3DTextLabel(str_mine, -1, 2346.0369,-1452.2238,1137.4485, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 1);
		//
		kavkaz_sklad = CreateDynamicPickup(1279, 23, -2131.1814,2390.8223,1501.8101, 1);
		gopota_sklad = CreateDynamicPickup(1279, 23, -2131.1814,2390.8223,1501.8101, 2);
		skinhead_sklad = CreateDynamicPickup(1279, 23, -2131.1814,2390.8223,1501.8101, 3);
		new gz1,gz2,gz3;
		for(new i = 0; i < totalgz; i++) {
			if(gz_info[i][gzopg] == 5) gz1++;
			if(gz_info[i][gzopg] == 6) gz2++;
			if(gz_info[i][gzopg] == 7) gz3++;
		}
		switch(rostov_wh[3]) {
		    case 0: {
		        rostov_wh[3] = 1;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Скинхеды\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
  				skinhead_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,3,3);
		    }
		    case 1: {
		        rostov_wh[3] = 0;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад\n{cc6666}Скинхеды\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
				skinhead_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,3,3);
		    }
		}
		switch(gopota_wh[3]) {
		    case 0: {
		        gopota_wh[3] = 1;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Гопота\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz2,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
				gopota_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,2);
		    }
		    case 1: {
		        gopota_wh[3] = 0;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад\n{cc6666}Гопота\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz2,gopota_wh[0],gopota_wh[1],gopota_wh[2]);
				gopota_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,2);
		    }
		}
		switch(kavkaz_wh[3]) {
		    case 0: {
		        kavkaz_wh[3] = 1;
				new str_1[256];
				format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Кавказцы\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz3,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
				kavkaz_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
		    }
		    case 1: {
		        kavkaz_wh[3] = 0;
				new str_1[256];
				format(str_1,sizeof(str_1),"Склад\n{cc6666}Кавказцы\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz3,kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
				kavkaz_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2131.1814,2390.8223,1501.8101, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
		    }
		}
		new str_1[256];
		format(str_1,sizeof(str_1),"{f18c2b}Армейский склад\n{FFFFFF}Металл: %d кг.\n{fccf39}Патроны: %d шт.",army_wh[0],army_wh[1]);
		if(console_Debbug == 1) printf("[INFO]  Load warehouse. Time: %d ms.",GetTickCount()-time);
	}
	return 1;
}
callback: LoadPlayerData(playerid) 
{
	if(console_Debbug == 1) printf("[LoadPlayerData]: Player %s, pAdmin: %d, pID %d", PI[playerid][pName], PI[playerid][pAdmin], PI[playerid][pID]);
	new rows, fields, temp[10], LoginIP[32];
    cache_get_data(rows, fields);
    if(rows) 
	{	
		cache_get_field_content(0, "id", temp), PI[playerid][pID] = strval (temp);
		cache_get_field_content(0, "uid", temp), PI[playerid][data_UID] = strval (temp);
		cache_get_field_content(0, "sex", temp), PI[playerid][pSex] = strval (temp);
		cache_get_field_content(0, "skin", temp), PI[playerid][pSkin] = strval (temp);
		cache_get_field_content(0, "skinm", temp), PI[playerid][pOrgSkin] = strval (temp);
		cache_get_field_content(0, "Money", temp), PI[playerid][pMoney] = strval (temp);
		cache_get_field_content(0, "VKNotif", temp), PI[playerid][pVKNotif] = strval (temp);
		cache_get_field_content(0, "Level", temp), PI[playerid][pLevel] = strval (temp);
		cache_get_field_content(0, "bangun", temp), PI[playerid][pWeaponLock] = strval (temp);
		cache_get_field_content(0, "GID", temp), PI[playerid][data_GID] = strval (temp);
		cache_get_field_content(0, "exp", temp), PI[playerid][data_EXP] = strval (temp);
		cache_get_field_content(0, "member", temp), PI[playerid][pMember] = strval (temp);
		cache_get_field_content(0, "Leader", temp), PI[playerid][pLeader] = strval (temp);
		cache_get_field_content(0, "rank", temp), PI[playerid][pRang] = strval (temp);
		cache_get_field_content(0, "Admin", temp), PI[playerid][pAdmin] = strval (temp);
		cache_get_field_content(0, "RegIP", PI[playerid][pRegIP], mysql, 32);
		cache_get_field_content(0, "LoginIP", LoginIP, mysql, 32);
  		cache_get_field_content(0, "Email", PI[playerid][pEmail], mysql, 50);
		cache_get_field_content(0, "mute", temp), PI[playerid][data_MUTE] = strval (temp);
		cache_get_field_content(0, "mutetime", temp), PI[playerid][data_MUTETIME] = strval (temp);
		cache_get_field_content(0, "vmute", temp), PI[playerid][data_VMUTE] = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), PI[playerid][data_VMUTETIME] = strval (temp);
		cache_get_field_content(0, "warn", temp), PI[playerid][data_WARN] = strval (temp);
		cache_get_field_content(0, "warntime", temp), PI[playerid][data_WARNTIME] = strval (temp);
		cache_get_field_content(0, "salary", temp), PI[playerid][pPayDayMoney] = strval (temp);
		cache_get_field_content(0, "bank", temp), PI[playerid][pBank] = strval (temp);
		cache_get_field_content(0, "licb", temp), PI[playerid][pDriveLicense] = strval (temp);
		cache_get_field_content(0, "licg", temp), PI[playerid][pGunLicense] = strval (temp);
		cache_get_field_content(0, "licnum", temp), PI[playerid][data_LICNUM] = strval (temp);
		cache_get_field_content(0, "business", temp), PI[playerid][pBusiness] = strval (temp);
		cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
		cache_get_field_content(0, "vip", temp), PI[playerid][data_VIP] = strval (temp);
		cache_get_field_content(0, "time", temp), PI[playerid][data_TIME] = strval (temp);
		cache_get_field_content(0, "AdminStatus", temp), PI[playerid][pAdminStatus] = strval (temp);
		cache_get_field_content(0, "ASACHAT", temp), PI[playerid][data_CADMIN] = strval (temp);
		cache_get_field_content(0, "CaptureKills", temp), PI[playerid][pCaptureKills] = strval (temp);
		cache_get_field_content(0, "CaptureValue", temp), PI[playerid][pCaptureValue] = strval (temp);
		cache_get_field_content(0, "AdminReports", temp), PI[playerid][pAdminReports] = strval (temp);
		cache_get_field_content(0, "AdminEvents", temp), PI[playerid][pAdminEvents] = strval (temp);
		cache_get_field_content(0, "admvig", temp), PI[playerid][pAdminWarn] = strval (temp);
		cache_get_field_content(0, "RankUPTime", temp), PI[playerid][pRankUPTime] = strval (temp);
		cache_get_field_content(0, "patr", temp), PI[playerid][data_PATR] = strval (temp);
		cache_get_field_content(0, "drugs", temp), PI[playerid][data_DRUGS] = strval (temp);
		cache_get_field_content(0, "usedrugs", temp), PI[playerid][data_USEDRUGS] = strval (temp);
		cache_get_field_content(0, "met", temp), PI[playerid][data_MET] = strval (temp);
		cache_get_field_content(0, "wanted", temp), PI[playerid][pWanted] = strval (temp);
		cache_get_field_content(0, "Respect", temp), PI[playerid][pRespect] = strval (temp);
		cache_get_field_content(0, "number", temp), PI[playerid][data_NUMBER] = strval (temp);
		cache_get_field_content(0, "number_m", temp), PI[playerid][pNumberMoney] = strval (temp);
		cache_get_field_content(0, "pstatus", temp), PI[playerid][pPhoneStatus] = strval (temp);
		cache_get_field_content(0, "jail", temp), PI[playerid][pJail] = strval (temp);
		cache_get_field_content(0, "jailtime", temp), PI[playerid][pJailTime] = strval (temp);
		cache_get_field_content(0, "demorgan", temp), PI[playerid][pDemorgan] = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), PI[playerid][pDemorganTIME] = strval (temp);
		cache_get_field_content(0, "Donate", temp), PI[playerid][pDonate] = strval (temp);
		cache_get_field_content(0, "Accessory_1", temp), PI[playerid][pAccessory_1] = strval (temp);
		cache_get_field_content(0, "Accessory_2", temp), PI[playerid][pAccessory_2] = strval (temp);
		cache_get_field_content(0, "Accessory_3", temp), PI[playerid][pAccessory_3] = strval (temp);
		cache_get_field_content(0, "Accessory_4", temp), PI[playerid][pAccessory_4] = strval (temp);
		cache_get_field_content(0, "Accessory_5", temp), PI[playerid][pAccessory_5] = strval (temp);
		cache_get_field_content(0, "Accessory_6", temp), PI[playerid][pAccessory_6] = strval (temp);
		cache_get_field_content(0, "Accessory_7", temp), PI[playerid][pAccessory_7] = strval (temp);
		cache_get_field_content(0, "Accessory_8", temp), PI[playerid][pAccessory_8] = strval (temp);
		cache_get_field_content(0, "Accessory_9", temp), PI[playerid][pAccessory_9] = strval (temp);
		cache_get_field_content(0, "Accessory_10", temp), PI[playerid][pAccessory_10] = strval (temp);
		cache_get_field_content(0, "TakeAcs", temp), PI[playerid][pTakeAcs] = strval (temp);
		cache_get_field_content(0, "UseAccessory", temp), PI[playerid][pUseAccessory] = strval (temp);
		cache_get_field_content(0, "phone", temp), PI[playerid][data_PHONE] = strval (temp);
		cache_get_field_content(0, "phonebook", temp), PI[playerid][data_PHONEBOOK] = strval (temp);
		cache_get_field_content(0, "dir", temp), PI[playerid][data_DIR] = strval (temp);
		cache_get_field_content(0, "Satiety", temp), PI[playerid][pSatiety] = strval (temp);
		cache_get_field_content(0, "HealthPoints", temp), PI[playerid][pHealthPoints] = strval (temp);
		cache_get_field_content(0, "arm", temp), PI[playerid][data_ARM] = strval (temp);
		cache_get_field_content(0, "med", temp), PI[playerid][data_MED] = strval (temp);
		cache_get_field_content(0, "mednum", temp), PI[playerid][data_MEDNUM] = strval (temp);
		cache_get_field_content(0, "spawn", temp), PI[playerid][data_SPAWN] = strval (temp);
		cache_get_field_content(0, "hospital", temp), PI[playerid][pHospital] = strval (temp);
		cache_get_field_content(0, "pistol_skill", temp), PI[playerid][pSkillPistol] = strval (temp);
		cache_get_field_content(0, "sdpistol_skill", temp), PI[playerid][pSkillSDPistol] = strval (temp);
		cache_get_field_content(0, "deagle_skill", temp), PI[playerid][pSkillDeagle] = strval (temp);
		cache_get_field_content(0, "shotgun_skill", temp), PI[playerid][pSkillShotgun] = strval (temp);
		cache_get_field_content(0, "mp5_skill", temp), PI[playerid][pSkillMP5] = strval (temp);
		cache_get_field_content(0, "ak47_skill", temp), PI[playerid][data_AK47] = strval (temp);
		cache_get_field_content(0, "rifle_skill", temp), PI[playerid][pSkillRifle] = strval (temp);
	    cache_get_field_content(0, "job", temp), PI[playerid][data_JOB] = strval (temp);
	    cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
	    cache_get_field_content(0, "business", temp), PI[playerid][pBusiness] = strval (temp);
	    cache_get_field_content(0, "kv", temp), PI[playerid][data_KV] = strval (temp);
	    cache_get_field_content(0, "padik", temp), PI[playerid][data_PADIK] = strval (temp);
	    cache_get_field_content(0, "gun0", temp), PI[playerid][data_GUN][0] = strval (temp);
		cache_get_field_content(0, "gun1", temp), PI[playerid][data_GUN][1] = strval (temp);
		cache_get_field_content(0, "gun2", temp), PI[playerid][data_GUN][2] = strval (temp);
		cache_get_field_content(0, "gun3", temp), PI[playerid][data_GUN][3] = strval (temp);
		cache_get_field_content(0, "gun4", temp), PI[playerid][data_GUN][4] = strval (temp);
		cache_get_field_content(0, "gun5", temp), PI[playerid][data_GUN][5] = strval (temp);
		cache_get_field_content(0, "gun6", temp), PI[playerid][data_GUN][6] = strval (temp);
		cache_get_field_content(0, "gun7", temp), PI[playerid][data_GUN][7] = strval (temp);
		cache_get_field_content(0, "gun8", temp), PI[playerid][data_GUN][8] = strval (temp);
		cache_get_field_content(0, "gun9", temp), PI[playerid][data_GUN][9] = strval (temp);
		cache_get_field_content(0, "gun10", temp), PI[playerid][data_GUN][10] = strval (temp);
		cache_get_field_content(0, "gun11", temp), PI[playerid][data_GUN][11] = strval (temp);
		cache_get_field_content(0, "gun12", temp), PI[playerid][data_GUN][12] = strval (temp);
		cache_get_field_content(0, "ammo0", temp), PI[playerid][data_AMMO][0] = strval (temp);
		cache_get_field_content(0, "ammo1", temp), PI[playerid][data_AMMO][1] = strval (temp);
		cache_get_field_content(0, "ammo2", temp), PI[playerid][data_AMMO][2] = strval (temp);
		cache_get_field_content(0, "ammo3", temp), PI[playerid][data_AMMO][3] = strval (temp);
		cache_get_field_content(0, "ammo4", temp), PI[playerid][data_AMMO][4] = strval (temp);
		cache_get_field_content(0, "ammo5", temp), PI[playerid][data_AMMO][5] = strval (temp);
		cache_get_field_content(0, "ammo6", temp), PI[playerid][data_AMMO][6] = strval (temp);
		cache_get_field_content(0, "ammo7", temp), PI[playerid][data_AMMO][7] = strval (temp);
		cache_get_field_content(0, "ammo8", temp), PI[playerid][data_AMMO][8] = strval (temp);
		cache_get_field_content(0, "ammo9", temp), PI[playerid][data_AMMO][9] = strval (temp);
		cache_get_field_content(0, "ammo10", temp), PI[playerid][data_AMMO][10] = strval (temp);
		cache_get_field_content(0, "ammo11", temp), PI[playerid][data_AMMO][11] = strval (temp);
		cache_get_field_content(0, "ammo12", temp), PI[playerid][data_AMMO][12] = strval (temp);
		cache_get_field_content(0, "healthchest", temp), PI[playerid][pHealPack] = strval (temp);
		cache_get_field_content(0, "HEALPACKSKLAD", temp), PI[playerid][pHealthPackKD] = strval (temp);
		cache_get_field_content(0, "Сanister", temp), PI[playerid][pCanisters] = strval (temp);
		cache_get_field_content(0, "mask", temp), PI[playerid][data_MASK] = strval (temp);
		cache_get_field_content(0, "VkontakteID", temp), PI[playerid][pVkontakteID] = strval (temp);
		cache_get_field_content(0, "twarn", temp), PI[playerid][TWARN] = strval (temp);
		cache_get_field_content(0, "fixnabor", temp), PI[playerid][data_FIXCOMPL] = strval (temp);
        cache_get_field_content(0, "timerank", temp), PI[playerid][data_TIMERANK] = strval (temp);
        cache_get_field_content(0, "military", temp), PI[playerid][data_MILITARY] = strval (temp);
        cache_get_field_content(0, "medcard", temp), PI[playerid][data_MEDCARD] = strval (temp);
	    cache_get_field_content(0, "ProgressAmmo", temp), PI[playerid][pProgressAmmo] = strval (temp);
	    cache_get_field_content(0, "ProgressMetall", temp), PI[playerid][pProgressMetall] = strval (temp);
		cache_get_field_content(0, "PromoCodeUse", temp), PI[playerid][pPromoCodeUse] = strval (temp);
	    cache_get_field_content(0, "ProgressDrugs", temp), PI[playerid][pProgressDrugs] = strval (temp);
	    cache_get_field_content(0, "ProgressCarGrabber", temp), PI[playerid][pProgressCarGrabber] = strval (temp);
	    cache_get_field_content(0, "CaptureManager", temp), PI[playerid][pCaptureManager] = strval (temp);
	    cache_get_field_content(0, "ProgressSellGun", temp), PI[playerid][pProgressSellGun] = strval (temp);
        cache_get_field_content(0, "ProgressCapture", temp), PI[playerid][pProgressCapture] = strval (temp);
		cache_get_field_content(0, "CarGift", temp), PI[playerid][pCarGift] = strval (temp);

		IsPlayerLogged{playerid} = true;
		cef_emit_event(playerid, "cef:hud:active", CEFINT(1));

		if(console_Debbug == 1) printf("[LoadPlayerData_1]: Player %s, pAdmin: %d, pID %d", PI[playerid][pName], PI[playerid][pAdmin], PI[playerid][pID]);
		if(PI[playerid][pAdmin] >= 1)  
		{
			if(PI[playerid][pAdminNumber] == 0) 
			{
				PI[playerid][pAdminNumber] = random(9999);
			}
			Iter_Add(Admin, playerid);
			SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] вошел на сервер", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid);
		}
		if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
		if(PI[playerid][pSkin] == 0) return PI[playerid][pSkin] = 23;

		SCM(playerid, COLOR_BLACKBLUE, !"Добро пожаловать на Рассвет!");
		SCM(playerid, COLOR_LIGHTYELLOW, !"Загружаем данные сессии. Пожалуйства подождите...");
		SCM(playerid, COLOR_LIGHTYELLOW, "Меню помощи - /help, стандартное управление голосовым чатом: X (англ) - говорить");
		SCM(playerid, COLOR_HINT, "[Подсказка]: {FFFFFF}В нашей игре вы можете привязать свой профиль вк, используя {FFFF33}/vk");

		//Stamina[playerid] = 100.0;
        //MaximalStamina[playerid] = 100.0;

		mysql_queryf(mysql, "SELECT `Name` FROM `accounts` WHERE `Referal` = '%s' LIMIT 10", true, getName(playerid));
		if(cache_num_rows() > 0) SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Для просмотра приглашённых игроков воспользуйтесь: {FFFF33}/ref");
		else SCM(playerid, COLOR_HINT, !"[Подсказка] {FFFFFF}Приглашайте своих друзей на сервер и зарабатывайте деньги с помощью нашей реферальной системы {FFFF33}(/ref){FFFFFF}!");
		mysql_queryf(mysql, "UPDATE `accounts` SET `LoginDate` = CURRENT_TIMESTAMP WHERE `Name` = '%s'", false, getName(playerid));
	
		if(!IsPlayerOPG(playerid)) 
		{
			if(PI[playerid][pMember] == 7) if(m_kavkaz != 0) SCM(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {ff6633}/ginfo");
			if(PI[playerid][pMember] == 6) if(m_gopota != 0) SCM(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {ff6633}/ginfo");
			if(PI[playerid][pMember] == 5) if(m_skinhead != 0) SCM(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {ff6633}/ginfo");
		}
		if(PI[playerid][data_VMUTE] != 0) SvMutePlayerEnable(playerid);
     	if(PI[playerid][pMember] != 0) SetPlayerTeam(playerid, PI[playerid][pMember]);
        if(PI[playerid][pAdmin] != 0) PI[playerid][data_VIP] = 1;

		SetPlayerScore(playerid, PI[playerid][pLevel]);
		UpdatePlayerMoney(playerid, PI[playerid][pMoney]);
		UpdatePlayerDataInt(playerid, "Online", 1, 18220);

		PlayerSpawn(playerid);
	}
	else 
	{
        if(GetPVarInt(playerid, "WrongPassword") >= 3) return Kick(playerid);
        SetPVarInt(playerid, "WrongPassword", GetPVarInt ( playerid, "WrongPassword") + 1);
		SCMf(playerid, 0xFF6347FF, "[Внимание]: {FFFFFF}Пароль неверный. Использовано попыток: {FF6347}%d из 3",GetPVarInt(playerid,"WrongPassword"));
		PlayerLogin(playerid);
	}
	new str_q[45];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `id` = '%d'", PI[playerid][data_GID]);
	mysql_function_query(mysql, str_q, true, "GPLAYER", "d", playerid);
	return 1;
}
callback: PlayerUpdate(playerid) 
{
    if(IsPlayerAdmin(playerid)) return Ban(playerid);
	if(!IsPlayerLogged{playerid}) return 1;
	PI[playerid][data_3SECOND]++;
	PI[playerid][data_MINUTE]++;
    new hour, minute, second;
	gettime(hour, minute, second);
	if(GetPlayerFPS(playerid) >= 5) cef_emit_event(playerid, "update-fps", CEFINT(GetPlayerFPS(playerid)));
  	if(PI[playerid][data_SETMARK] > 0) PI[playerid][data_SETMARK]--;
  	if(PI[playerid][pJailTime] > 0) PI[playerid][pJailTime]--;
	if(PI[playerid][pDemorganTIME] > 0) PI[playerid][pDemorganTIME]--;
  	if(GetPVarInt(playerid, "SpecBool") == 1) ShowAdmInfo(playerid, GetPVarInt(playerid, "specid"));
 	if(GetPVarInt(playerid,"ac_timer") > 0) SetPVarInt(playerid, "ac_timer",GetPVarInt(playerid,"ac_timer")-1);
	if(GetPlayerMoney(playerid) != PI[playerid][pMoney]) UpdatePlayerMoney(playerid,PI[playerid][pMoney]);
	if(GetPlayerState(playerid) == 2) 
	{
		new carid = GetPlayerVehicleID(playerid);
	    new Float:hpveh; GetVehicleHealth(carid, hpveh);
		if(hpveh < 350) SetVehicleHealth(carid, 351.0);
	}
	if(PI[playerid][data_MINUTE] == 60) 
	{
	    PI[playerid][data_MINUTE] = 0;
        if(PI[playerid][data_AFK] < 1) PI[playerid][data_TIME]++;
	    if(GetPVarInt(playerid, "ac_fly") >= 3) DeletePVar(playerid, "ac_fly");
		for(new i = 0; i < 13; i++)
	    if(PI[playerid][data_WARN] != 0) 
		{
	        if(PI[playerid][data_WARNTIME] >= 1) PI[playerid][data_WARNTIME]--;
	        else 
			{
	            PI[playerid][data_WARNTIME] = 0;
	            PI[playerid][data_WARN] = 0;
	            SCM(playerid, COLOR_LIGHTGREY, !"Все предупреждения были сняты, больше не нарушайте!");
	        }
	    }
	    if(PI[playerid][data_MUTE] == 1) 
		{
			PI[playerid][data_MUTETIME] -= 1;
			if(PI[playerid][data_MUTETIME] == 0) 
			{
				PI[playerid][data_MUTE] = 0;
				SCM(playerid, COLOR_LIGHTGREY, !"Ваш чат был разблокирован, больше не нарушайте!");
			}
		}
	    if(PI[playerid][data_VMUTE] == 1)
		{
			PI[playerid][data_VMUTETIME] -= 1;
			if(PI[playerid][data_VMUTETIME] == 0)
			{
				PI[playerid][data_VMUTE] = 0;
				SCM(playerid, COLOR_LIGHTGREY, !"Голосовой чат был разблокирован, больше не нарушайте!");
				SvMutePlayerDisable(playerid);
			}
		}
	}
	if(pCurrectMessageBomb[playerid] > 0) {
		if(pTimerMessageBomb[playerid] < gettime()) {
			new str1[145];
			if(pCurrectMessageBomb[playerid] == 2) {
				format(str1,sizeof(str1),"Портфель в руках (%s)",PI[playerid][pName]);
				ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
				pTimerMessageBomb[playerid] = gettime() + 1;
				pCurrectMessageBomb[playerid]++;
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 3) {
					format(str1,sizeof(str1),"%s открыл портфель",PI[playerid][pName]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 4) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"Портфель открыт (%s)",PI[playerid][pName]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 5) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"%s достал взрывчатку из портфеля",PI[playerid][pName]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 6) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"Взрывчатка в руках (%s)",PI[playerid][pName]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pCurrectMessageBomb[playerid] = 0;
					if(!PlayerToPoint(200.0, playerid, 1756.5381, 1731.6260, 15.3168)) return SCM(playerid, COLOR_BLACK,"Нужно находиться возле территории ВЧ!");
					bombplayer[playerid] = 1;
					SetPVarFloat(playerid, "bomb_pos_x", 1700.1427);
					SetPVarFloat(playerid, "bomb_pos_y", 1838.3263);
					SetPVarFloat(playerid, "bomb_pos_z", 15.7956);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid,1700.1427,1838.3263,15.7956,2.0);
					SCM(playerid, COLOR_YELLOW, !"Место для минирования обозначено на карте красным чекпоинтом.");
					SCM(playerid, COLOR_YELLOW, !"Подойдите к данному месту, после чего заминируйте забор и проникните на базу");
				}
			}
		}
	}
	if(pCurrectMessage[playerid] > 0) {
		if(pTimerMessage[playerid] < gettime()) {
			new str1[145];
			pCurrectMessage[playerid]++;
			if(pCurrectMessage[playerid] == 2) {
				format(str1,sizeof(str1),"Пакет с формой в руке (%s)",PI[playerid][pName]);
				ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
				pTimerMessage[playerid] = gettime() + 1;
			}
			else if(pTimerMessage[playerid] < gettime()) {
				if(pCurrectMessage[playerid] == 3) {
					format(str1,sizeof(str1),"%s передал пакет с формой человеку напротив",PI[playerid][pName]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					SCMf(playerid, 0x33ceffFF, "Вы предложили %s вступить в организацию (%s)",PI[GetPVarInt(playerid, "to_player")][pName], Fraction_Name[PI[playerid][pMember]]);
					static name[24];
					SetString(name, NameRang(playerid));
					name = NameRang(playerid);
					SCMf(GetPVarInt(playerid, "to_player"), 0x33ceffFF, "%s %s предложил Вам вступить в организацию (%s)",name,PI[playerid][pName], Fraction_Name[PI[playerid][pMember]]);
					pCurrectMessage[playerid] = 0;
					SendRequestForPlayer(playerid, GetPVarInt(playerid, "to_player"), 11);
				}
			}
		}
	}
 	if(PI[playerid][pJail] != 0 && PI[playerid][pJailTime] <= 0) 
	{
		switch(PI[playerid][pJail]) 
		{
			case 1: 
			{
				SetPlayerPosAC(playerid, -298.9116,-1547.7133,41.0897);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 61.5454);
				SetCameraBehindPlayer(playerid);
			}
		}
		PI[playerid][pJailTime] = 0;
		PI[playerid][pJail] = 0;

		PlayerSpawn(playerid);
		SCM(playerid, COLOR_LIGHTGREY, !"Вы отсидели положенный срок. Больше не нарушайте!");
	}
	if(minute == 0 && payday[playerid] == false) {
		payday[playerid] = true;
		PayDay(playerid);	
	}
	if(minute > 1) payday[playerid] = false;
 	if(PI[playerid][pDemorgan] != 0 && PI[playerid][pDemorganTIME] <= 0) 
	{
		PI[playerid][pDemorganTIME] = 0;
		PI[playerid][pDemorgan] = 0;
		PlayerSpawn(playerid);
		SCM(playerid, COLOR_LIGHTGREY, !"Вы вышли из деморгана. Больше не нарушайте!");
	}
	if(PI[playerid][data_CALL] != -1) 
	{
		if(!IsPlayerConnected(PI[playerid][data_CALL])) 
		{
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			PI[playerid][data_CALL] = -1;
			SetPVarInt(playerid,"call_m",0);
			SCM(playerid, COLOR_LIGHTGREY, !"Ваш собеседник вышел с сервера");
		}
		if(GetPVarInt(playerid,"call_m") == 1) 
		{
	   		PI[playerid][pNumberMoney]--;
			if(PI[playerid][pNumberMoney] <= 0) 
			{
	    		new id = PI[playerid][data_CALL];
				if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				if(!IsPlayerInAnyVehicle(id)) SetPlayerSpecialAction(id, SPECIAL_ACTION_STOPUSECELLPHONE);
				PI[id][data_CALL] = -1;
				SetPVarInt(id,"call_m",0);
				PI[playerid][data_CALL] = -1;
				SetPVarInt(playerid,"call_m",0);
				SCM(playerid, COLOR_LIGHTGREY, !"У Вас закончились деньги на счете");
				SCM(id, COLOR_LIGHTGREY, !"У вашего собеседника закончились деньги на счете");
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PI[playerid][data_AFK] <= 1) 
	{
 		new Float: Health,Float: Armour;
	  	new Float:Distance = GetPlayerDistanceFromPoint(playerid, oldposX[playerid], oldposY[playerid], oldposZ[playerid]);
		GetPlayerHealth(playerid, Health);
		if(PI[playerid][pHealthPoints] < Health) SetPlayerHealthAC(playerid, PI[playerid][pHealthPoints]);
		else PI[playerid][pHealthPoints] = Health;
		GetPlayerArmour(playerid, Armour);
		if(PI[playerid][data_ARM] < Armour) SetPlayerArmourAC(playerid, PI[playerid][data_ARM]);
		else PI[playerid][data_ARM] = Armour;
		new datagunid, dataammo;
		for(new slotgunid = 0; slotgunid < 13; slotgunid++) {
	 		GetPlayerWeaponData(playerid, slotgunid, datagunid, dataammo);
			if(dataammo > PI[playerid][data_AMMO][slotgunid]) {
			    ac_gun[playerid][slotgunid]++;
				if(ac_gun[playerid][slotgunid] == 3) printf("[ac_gun] playerid: %s, i: %d, datagunid: %d, dataammo: %d | ammo: %d",PI[playerid][pName], slotgunid, datagunid, dataammo,PI[playerid][data_AMMO][slotgunid]);
			}
			else if(dataammo < PI[playerid][data_AMMO][slotgunid] && ac_gun[playerid][slotgunid] == 0) PI[playerid][data_AMMO][slotgunid] = dataammo;
		}
        new carid = GetPlayerSurfingVehicleID(playerid);
		if(Distance > 45 && carid == INVALID_VEHICLE_ID) {
  			SetPVarInt(playerid, "ac_fly",GetPVarInt(playerid, "ac_fly")+1);
			if(GetPVarInt(playerid, "ac_fly") == 3) printf("[ac_fly] playerid: %s, distance: %d",PI[playerid][pName], Distance);
		}
		GetPlayerPos(playerid, oldposX[playerid], oldposY[playerid], oldposZ[playerid]);
	}
	PI[playerid][data_AFK]++;
	if(PI[playerid][data_AFK] > 1 && PI[playerid][data_AFK] < 60) 
	{
		new str[20];
		format(str, sizeof(str), "На паузе: %d сек", PI[playerid][data_AFK]);
		SetPlayerChatBubble(playerid, str, COLOR_TOMATO, 20.0, 1100);
	}
	else if(PI[playerid][data_AFK] >= 60) 
	{
		new str[20];
		format(str, sizeof(str), "На паузе: %d мин", PI[playerid][data_AFK]/60);
		SetPlayerChatBubble(playerid, str, COLOR_TOMATO, 20.0, 1100);
	}
	if(PI[playerid][data_AFK] > 1800) 
	{
		if(PI[playerid][pAdmin] >= 1) return 1;
		SCM(playerid, COLOR_GREY,"Превышено максимальное время паузы (30 минут)");
		SavePlayerData(playerid);
		TogglePlayerSpectating(playerid, false);
		Kick(playerid);
		return 1;
	}
	if(PlayerToKvadrat(playerid, 2048.77,1787.74, 2168.30,1845.31) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
	PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Мэрия
	PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // респавн бомжей
	PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
	PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 1 || // автошкола
	PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) if(GetPVarInt(playerid, "gPlayerInterface") == 0) PlayerTextDrawShow(playerid, GZ_p[playerid]);
	else PlayerTextDrawHide(playerid, GZ_p[playerid]);

	if(PI[playerid][data_3SECOND] == 3) 
	{
	    PI[playerid][data_3SECOND] = 0;
	    if(PI[playerid][pHospital] == 1 && GetPlayerSpecialAction(playerid) != PLAYER_STATE_WASTED && GetPlayerSpecialAction(playerid) != PLAYER_STATE_SPAWNED) 
		{
			if(PlayerToPoint(100.0, playerid, 1331.8745,2505.1877,1002.1400) || PlayerToPoint(100.0, playerid, 743.4705,1523.0537,2002.1899)) 
			{
				new Float:Health;
				GetPlayerHealth(playerid, Health);
				SetPlayerHealthAC(playerid, Health + 10);

				cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Курс лечения"), CEFSTR("487f5f"), CEFSTR("+10 HP"));
				if(PI[playerid][pHealthPoints] >= 100.0) 
				{
					PI[playerid][pHospital] = 0;
					PI[playerid][pHealthPoints] = Health;

					SCM(playerid, COLOR_WHITE, !"Курс лечения пройден, Вы можете покинуть палату");
					SCM(playerid, COLOR_WHITE, !"Если Вас не устраивает состояние здоровья, обратитесь к дежурному врачу");

					UpdatePlayerDataInt(playerid, "hospital", PI[playerid][pHospital], 15807);

					if(PI[playerid][pPassiveMode] == 1)
					{
						SCM(playerid, COLOR_HINT, !"[Пасивный режим]: {FFFFFF}Пасивный режим был выключен! Причина: находитесь в больнице");
						PassiveModeOff(playerid);
					}
				}
			}
		}
	}
	return 1;
}
callback: CheckNameDonate(playerid, inputtext[]) 
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) return SCM(playerid, COLOR_GREY, !"Данный ник уже занят на сервере");
	else 
	{
		new sql[256];
		mysql_format(mysql, sql, sizeof(sql), "INSERT INTO `nickname_history` ( `nh_owner`, `nh_oldname`, `nh_newname`, `nh_date`) VALUES ( '%d','%s' ,'%s', NOW())", PI[playerid][pID], PI[playerid][pName], CHANGE_NAME[playerid]);
		mysql_function_query(mysql, sql, false, "", "");

		SetPVarInt(playerid, "change_name_status", 0);

		mysql_queryf(mysql, "UPDATE `accounts` SET `Name` = '%e' WHERE `Name` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `punishment` SET `name` = '%s' WHERE `name` = '%s'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `fractions_blacklist` SET `bl_name2` = '%e' WHERE `bl_name` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `ownable` SET `Owner` = '%e' WHERE `Owner` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);

		strmid(CarInfo[PI[playerid][pLoadVehicleID]][cOwner], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);
		strmid(PI[playerid][pName], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);

		SetPlayerName(playerid, PI[playerid][pName]);

		PI[playerid][pDonate] -= 50;
		UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate], 18212);
		SCM(playerid, 0x33ccffFF, !"Вы успешно изменили никнейм за 50 донат-поинтов.");

		if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) 
		{
			new h = PI[playerid][data_HOUSE];
			strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
            UpdateHouseData(h);
            SaveHouseData(h);
		}
		if(PI[playerid][pBusiness] != INVALID_BUSINESS_ID) 
		{
			new b = PI[playerid][pBusiness];
			strmid(BizInfo[b][bOwner], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			UpdateBusinessData(b);
			SaveBusinessData(b);
		}
		if(PI[playerid][data_KV] != INVALID_KV_ID) 
		{
			new kv = PI[playerid][data_PADIK];
			new k = PI[playerid][data_KV];
			switch(k) 
			{
				case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			}
			UpdateKVData(kv, k);
			SaveKVData(kv);
		}
		SavePlayerData(playerid);
    }
    return 1;
}
callback: CheckName(playerid, inputtext[]) 
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SCM(playerid, COLOR_GREY, "Случайный никнейм уже занят другим игроком!");
	else 
	{
		if(PI[playerid][pAdmin] == 0)
		{
			new str_q[144];
			mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `punishment` SET `name` = '%s' WHERE `name` = '%s'", CHANGE_NAME[playerid], PI[playerid][pName]);
			mysql_function_query(mysql, str_q, false, "", "");
		}
		else SendAdminsMessagef(COLOR_GREY, "<Random Name> Игрок %s[%d] сменил ник на %s",PI[playerid][pName], playerid, CHANGE_NAME[playerid]);

		new sql[256];
		mysql_format(mysql, sql, sizeof(sql), "INSERT INTO `nickname_history` ( `nh_owner`, `nh_oldname`, `nh_newname`, `nh_date`) VALUES ( '%d','%s' ,'%s', NOW())", PI[playerid][pID], PI[playerid][pName], CHANGE_NAME[playerid]);
		mysql_function_query(mysql, sql, false, "", "");
		
		SetPVarInt(playerid,"change_name_status", 0);
		
		mysql_queryf(mysql, "UPDATE `accounts` SET `Name` = '%e' WHERE `Name` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `punishment` SET `name` = '%s' WHERE `name` = '%s'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `fractions_blacklist` SET `bl_name2` = '%e' WHERE `bl_name` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);
		mysql_queryf(mysql, "UPDATE `ownable` SET `Owner` = '%e' WHERE `Owner` = '%e'", false, CHANGE_NAME[playerid], PI[playerid][pName]);

		strmid(CarInfo[PI[playerid][pLoadVehicleID]][cOwner], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);
		strmid(PI[playerid][pName], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);
		SetPlayerName(playerid, PI[playerid][pName]);

		if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) 
		{
			new h = PI[playerid][data_HOUSE];
			strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
            UpdateHouseData(h);
            SaveHouseData(h);
		}
		if(PI[playerid][pBusiness] != INVALID_BUSINESS_ID) 
		{
			new b = PI[playerid][pBusiness];
			strmid(BizInfo[b][bOwner], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			UpdateBusinessData(b);
			SaveBusinessData(b);
		}
		if(PI[playerid][data_KV] != INVALID_KV_ID) 
		{
			new kv = PI[playerid][data_PADIK];
			new k = PI[playerid][data_KV];
			switch(k) 
			{
				case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][pName], 0, strlen(PI[playerid][pName]), MAX_PLAYER_NAME);
			}
			UpdateKVData(kv, k);
			SaveKVData(kv);
		}
		SavePlayerData(playerid);
    }
    return 1;
}
callback: OffLeader(playerid,name[]) 
{
    new rows, fields, rankk, temp[10];
    cache_get_data(rows, fields);
    if(rows) 
	{
	    for(new i = 0; i < MAX_PLAYERS; i++) 
		{
	        if(!IsPlayerConnected(i)) continue;
	        if(strcmp(PI[i][pName], name, true, 24) == 0) 
			{
	            SCM(i, COLOR_GREY, !"Вы были сняты с должности лидера");
				PI[i][pLeader] = 0;
				PI[i][pMember] = 0;
				SetPlayerSkinAC(i,PI[i][pSkin]);
				SetPlayerColorEx(i);
	        }
	    }
		for(new i = 0; i < rows; i++) 
		{
			cache_get_field_content(i, "rank", temp), rankk = strval(temp);
			if(rankk != 10) 
			{
				new str_q[144];
 				mysql_format(mysql,str_q, sizeof(str_q),"UPDATE `accounts` SET `leader` = '0', `member` = '0', `rank` = '0' WHERE `Name` = '%e'", name);
				mysql_function_query(mysql, str_q, false, "", "");
				SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] снял с лидерства оффлайн %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,name);
			}
			SCM(playerid, COLOR_GREY, !"Данный игрок не лидер");
		}
	}
	else SCM(playerid, COLOR_GREY, !"Данный аккаунт не найден в базе данных");
	return 1;
}
callback: LoadAllLeaders(playerid) 
{
    new rows, fields, leader,name[MAX_PLAYER_NAME],temp[20],string[625], string1[625], bugfix, login[30];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) 
	{
		cache_get_field_content(i, "Name", name, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(i, "Leader", temp), leader = strval (temp);
		cache_get_field_content(i, "LoginDate", login, mysql, 30);
		new ltext[64];
		switch(leader) 
		{
			case 1: ltext = "Правительство";
			case 2: ltext = "Войсковая часть";
			case 3: ltext = "Полиция";
   			case 4: ltext = "БЦРБ";
			case 5: ltext = "Скинхеды";
			case 6: ltext = "Гопота";
			case 7: ltext = "Кавказцы";
  		}
    	format(string,sizeof(string),"%s%s\t%s\t%s\n",string,ltext,name, login);
    	format(string1,sizeof(string1),"Организация\tИмя\tПоследний вход\n%s",string);
    	bugfix = 1;
	}
	if(bugfix == 1) return ShowPlayerDialog(playerid,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Список лидеров", string1, "Закрыть", "");
  	return ShowPlayerDialog(playerid,0, DIALOG_STYLE_MSGBOX, !"{ee3366}Список лидеров", "{FFFFFF}В данный момент лидеров нет", "Закрыть", "");
}
callback: AnimationOff(playerid) 
{
    PI[playerid][data_ANIM] = false;
	return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
}
callback: UnfreezePlayer(playerid) 
{
    TogglePlayerControllable(playerid, true);
    return SetPVarInt(playerid,"freeze",0);
}
callback: ChangePassword(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{FFFF99}Пример: 12345qwe", "Далее", "Назад");
    else SCM(playerid, COLOR_GREY, !"Пароль который Вы ввели не принадлежит данному аккаунту, повторите попытку"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT, !"{ee3366}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{FFFF99}Пример: 123qwe", "Далее", "Назад");
    return 1;
}
callback: SecondTimer() 
{
	global_minute++;
  	new hour_time,minuite_time, second_time, Year, Month, Day,month[10];
  	gettime(hour_time,minuite_time, second_time);
	getdate(Year, Month, Day);
	switch(Month) 
	{
		case 1: month = "01";
		case 2: month = "02";
		case 3: month = "03";
		case 4: month = "04";
		case 5: month = "05";
		case 6: month = "06";
		case 7: month = "07";
		case 8: month = "08";
		case 9: month = "09";
		case 10: month = "10";
		case 11: month = "11";
		case 12: month = "12";
	}
	capture_SecondTimer();
	if(global_minute == 60) 
	{
	    new hour, minute, second;
	    gettime(hour, minute, second);
	    switch(minute) 
		{
		    case 2: 
			{
				for(new b = 0; b < TotalBusiness; b++) 
				{
					if(BizInfo[b][bOwned] == 0) continue;
					if(BizInfo[b][bDays] == 0) continue;
					BizInfo[b][bProduct]--;
					UpdateBusinessData(b);
					SaveBusinessData(b);
				}
			}
			case 35: 
			{
			    SendClientMessageToAll(COLOR_MALINOVKA, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			    SendClientMessageToAll(COLOR_WHITE, "Для посещения игрового магазина посетите форум {ee3366}"SITE"");
				SendClientMessageToAll(COLOR_WHITE, "Общение игроков и тороговая площадка - ждём тебя! {ee3366}vk.com/"FREE"");
			    SendClientMessageToAll(COLOR_WHITE, "В нашей игре действует реферальная система. Подробности на {ee3366}vk.com/"VK"");
			    SendClientMessageToAll(COLOR_WHITE, "При возникновении вопросов по игре, обращяйтесь в тех. поддержку: {ee3366}vk.me/"VK"");
			    SendClientMessageToAll(COLOR_MALINOVKA, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			    new time = GetTickCount();
			    for(new k = 0; k < TotalKV; k++) SaveKVData(k);
			    for(new h = 0; h < TotalHouses; h++) SaveHouseData(h);
			    for(new b = 0; b < TotalBusiness; b++) SaveBusinessData(b);
			    SaveWarehouse();
			    if(console_Debbug == 1) printf("[server_log] save all. Time: %d ms.",GetTickCount()-time );
			}
			case 0: if(hour == 9) SendClientMessageToAll(COLOR_GREY, !"Внимание! Через 3 минуты произойдёт плановый перезапуск сервера");
            case 3: 
			{
                if(hour == 9 && restartserver == 0) 
				{
				    restartserver = 1;
					RestartCFG();
				}
            }
			case 59: 
			{
                if(hour == 23 && BusinessUpdate == 0) 
				{
				    BusinessUpdate = 1;
					SetBusinessUpdate();
				}
            }
		}
  		global_minute = 0;
		for(new carid; carid < MAX_VEHICLES; carid++) 
		{
			if(!IsAVelik(carid)) 
			{
				if(CarInfo[carid][cEngineStatus] == 1) 
				{
			  		if(CarInfo[carid][cFuel] <= 0) 
					{
			    		GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
						SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
						CarInfo[carid][cEngineStatus] = 0;
						CarInfo[carid][cFuel] = 0;
						return 1;
			    	}
			    	CarInfo[carid][cFuel] -= 1;
			   	}
			}
		}
	}
	return 1;
}
callback: LoadBans() {
    new rows, fields, temp[60],time = GetTickCount(),banac;
    cache_get_data(rows, fields);
    if(rows) {
    	for(new b = 0; b < rows; b++) {
         	cache_get_field_content(b, "id", temp), BANS_DATA[b][data_ID] = strval (temp);
         	cache_get_field_content(b, "day", temp), BANS_DATA[b][data_DAY] = strval (temp);
			TotalBans++;
   			if(BANS_DATA[b][data_DAY] <= 0) {
				new str_q[144];
			    mysql_format(mysql,str_q, sizeof(str_q), "DELETE FROM `banlist` WHERE `id` = '%d'", BANS_DATA[b][data_ID]);
	    		mysql_function_query(mysql, str_q, false, "", "");
	    		banac++;
			}
			else {
       			BANS_DATA[b][data_DAY]--;
				new str_q[144];
			    mysql_format(mysql,str_q, sizeof(str_q),"UPDATE `banlist` SET `day` = '%d' WHERE `id` = '%d'",BANS_DATA[b][data_DAY],BANS_DATA[b][data_ID]);
			    mysql_function_query(mysql, str_q, false, "", "");
			}
		}
		if(console_Debbug == 1) printf("[INFO]  Load bans accounts. Load: %d. Unban: %d. Ex unban: %d. Time: %d ms.",TotalBans,banac,TotalBans-banac, GetTickCount()-time);
  	}
    return 1;
}
callback: LoadAllMembers(playerid) 
{
    new rows, fields,temp[10];
    new name[MAX_PLAYER_NAME], rank, LoginDate[30], str_1[256*4];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) 
	{
		cache_get_field_content(i, "Name", name, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(i, "LoginDate", LoginDate, mysql, 30);
		cache_get_field_content(i, "rank", temp), rank = strval (temp);
		format(str_1,sizeof(str_1),"%s%s\t%d\t%s\n", str_1, name, rank, LoginDate);
	}
	ShowPlayerDialogf(playerid,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Список участников организации", "Закрыть", "", "Имя\tРанг\tПоследний вход\n%s",str_1);
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid) 
{
    if(clickedid == Text:INVALID_TEXT_DRAW && PI[playerid][data_CLICKTD] == true) 
	{
        if(PI[playerid][data_OPENCASINO] == true) 
		{
            HideCasinoGame(playerid);
            casino_stavka[playerid] = 0;
			casino_update[playerid] = 0;
			KillTimer(casino_timer[playerid]);
            return 1;
        }
  		if(PI[playerid][data_CLOTHESMENU] == true) 
		{
			TextDrawHideForPlayer(playerid, buy_clothes[0]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[1]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[2]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[3]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[4]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[5]);
		  	PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
 			PI[playerid][data_CLICKTD] = false;
 			PI[playerid][data_CLOTHESMENU] = false;
 			SetPlayerSkinAC(playerid,PI[playerid][pSkin]);
 			new b = GetPVarInt(playerid,"Clothes_biz");
 			SetPlayerPosAC(playerid,BizInfo[b][data_EXITX],BizInfo[b][data_EXITY],BizInfo[b][data_EXITZ]);
    		SetPlayerInterior(playerid,BizInfo[b][data_INT]);
    		SetPlayerVirtualWorld(playerid,BizInfo[b][data_VW]);
    		FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
			SetCameraBehindPlayer(playerid);
 			CancelSelectTextDraw(playerid);
			return 1;
		}
  		if(PI[playerid][pInAutoSalon] == true) 
		{
  			DestroyVehicle(PI[playerid][pAutoSalonCar]);
  			PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
			HideAutoSalonMenu(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPosAC(playerid,2315.6946,-1792.2155,21.9700);
			SetPlayerFacingAngle(playerid, 88.9423);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
	}
	else 
	{
     	if(clickedid == casino_bet) 
		{
		    if(casino_update[playerid] != 0) return SCM(playerid, COLOR_GREY,"Дождитесь окончания игры");
		    for(new i = 0; i < sizeof(casino_pos); i++) 
			{
		 	    if(PlayerToPoint(0.2, playerid, casino_pos[i][0], casino_pos[i][1], casino_pos[i][2]) && PI[playerid][data_OPENCASINO] == true) 
				{
				    ShowPlayerDialog(playerid, dialog_CASINO, DIALOG_STYLE_INPUT, "{ee3366}Color Game","Укажите вашу ставку", "Начать", "Отмена");
					return 1;
				}
	 		}
		}
	    if(clickedid == AutoSalon_ButtonColor[0]) SetPVarInt(playerid,"as_color",0);
	    if(clickedid == AutoSalon_ButtonColor[1]) SetPVarInt(playerid,"as_color",1);
	    if(clickedid == AutoSalon_Button[0]) 
		{ 
			new Cache: result, query[140];

			mysql_format(mysql, query, sizeof query, "SELECT * FROM ownable WHERE Owner='%e'", getName(playerid));
			result = mysql_query(mysql, query, true);

			if(cache_num_rows() >= 10)
			{	
				SendClientMessagef(playerid, COLOR_GREY, "У Вас нет свободных парковочный мест (занято: %d / 10)", cache_num_rows());
			}
			cache_delete(result);

			ShowPlayerDialog(playerid, 9230, DIALOG_STYLE_LIST, "{ee3366}Выбор метода оплаты","\
																			1. Купить за донат-поинты\n\
																			2. Купить за наличные", "Выбрать", "Отмена");
			return 1;
		}
		if(clickedid == AutoSalon_Button[1]) 
		{
	        PI[playerid][pChangerAutoSalon]--;
			if(PI[playerid][pChangerAutoSalon] <= -1) PI[playerid][pChangerAutoSalon] = sizeof(DealershipCars)-1;
			DestroyVehicle(PI[playerid][pAutoSalonCar]);
		    PI[playerid][pAutoSalonCar] = CreateVehicle(DealershipCars[PI[playerid][pChangerAutoSalon]][asModel], 294.8927,1720.3408,11.8301,22.2060, 0, 0, 36000);
			TextDrawShowForPlayer(playerid,AutoSalon_Stats[0]);
	    	SetVehicleVirtualWorld(PI[playerid][pAutoSalonCar], playerid);
	    	return 1;
		}
	    if(clickedid == AutoSalon_Button[2]) 
		{
	        PI[playerid][pChangerAutoSalon]++;
			if(PI[playerid][pChangerAutoSalon] >= sizeof(DealershipCars)) PI[playerid][pChangerAutoSalon] = 0;
			DestroyVehicle(PI[playerid][pAutoSalonCar]);
		    PI[playerid][pAutoSalonCar] = CreateVehicle(DealershipCars[PI[playerid][pChangerAutoSalon]][asModel], 294.8927,1720.3408,11.8301,22.2060, 0, 0, 36000);
	    	SetVehicleVirtualWorld(PI[playerid][pAutoSalonCar], playerid);
	    	return 1;
		}
		if(clickedid == AutoSalon_Stats[0]) 
		{
			new modelid = GetVehicleModel(PI[playerid][pAutoSalonCar]);

		    new BufferCar[144];
			if(modelid == 560) format(BufferCar, sizeof(BufferCar), "Электрический");
			else format(BufferCar, sizeof(BufferCar), "Бензиновый");
			
		    ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о транспорте", "Закрыть", "", "\
			{FFFFFF}Название:\t\t\t{3366cc}%s\n\
			{FFFFFF}Цена:\t\t\t\t{FFFF99}%d руб / %d дп\n\
			{FFFFFF}Тип двигателя:\t\t\t{FFFF99}%s\n\
			{FFFFFF}Максимальная скорость:\t{FFFF99}%d км/ч\n\
			{FFFFFF}Класс автомобиля:\t\t{FFFF99}%s", VehicleNames[modelid-400], DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate]*3000, DealershipCars[PI[playerid][pChangerAutoSalon]][asDonate], BufferCar, DealershipCars[PI[playerid][pChangerAutoSalon]][asSpeed],DealershipCars[PI[playerid][pChangerAutoSalon]][asClass]);
		}
		if(PI[playerid][data_CLOTHESMENU] == true) 
		{
		    if(clickedid == buy_clothes[4]) 
			{
				if(PI[playerid][pSex] == 1) 
				{
				    PI[playerid][pChangeSkin]--;
	       			if(PI[playerid][pChangeSkin] <= -1) PI[playerid][pChangeSkin] = 99;
	              	SetPlayerSkinAC(playerid,SkinMale[PI[playerid][pChangeSkin]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinMale[PI[playerid][pChangeSkin]][1]);
	    			PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
				else
				{
				    PI[playerid][pChangeSkin]--;
	       			if(PI[playerid][pChangeSkin] <= -1) PI[playerid][pChangeSkin] = 17;
	              	SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][pChangeSkin]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinFeMale[PI[playerid][pChangeSkin]][1]);
		    		PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
			}
			if(clickedid == buy_clothes[5]) 
			{
				if(PI[playerid][pSex] == 1) 
				{
				    PI[playerid][pChangeSkin]++;
	       			if(PI[playerid][pChangeSkin] >= 100) PI[playerid][pChangeSkin] = 0;
	              	SetPlayerSkinAC(playerid,SkinMale[PI[playerid][pChangeSkin]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinMale[PI[playerid][pChangeSkin]][1]);
	    			PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
				else 
				{
				    PI[playerid][pChangeSkin]++;
	       			if(PI[playerid][pChangeSkin] >= 18) PI[playerid][pChangeSkin] = 0;
	              	SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][pChangeSkin]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinFeMale[PI[playerid][pChangeSkin]][1]);
		    		PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
			}
			if(clickedid == buy_clothes[3]) 
			{
			    new b = GetPVarInt(playerid,"Clothes_biz");
			    if(BizInfo[b][bProduct] < 100 && BizInfo[b][bOwned] == 1) return SCM(playerid, COLOR_GREY,"В бизнесе недостаточно продуктов");
				if(PI[playerid][pSex] == 1) 
				{
				    new CenaSkin;
			    	CenaSkin = SkinMale[PI[playerid][pChangeSkin]][1];
					if(GetPlayerMoneyID(playerid) < CenaSkin) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
					PI[playerid][pSkin] = GetPlayerSkin(playerid);
					GivePlayerMoneyLog(playerid,-CenaSkin);
					TextDrawHideForPlayer(playerid, buy_clothes[0]);
				    TextDrawHideForPlayer(playerid, buy_clothes[1]);
				    TextDrawHideForPlayer(playerid, buy_clothes[2]);
				    TextDrawHideForPlayer(playerid, buy_clothes[3]);
				    TextDrawHideForPlayer(playerid, buy_clothes[4]);
				    TextDrawHideForPlayer(playerid, buy_clothes[5]);
				    PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
		          	PI[playerid][data_CLICKTD] = false;
		          	PI[playerid][data_CLOTHESMENU] = false;
		          	SetPlayerSkinAC(playerid,PI[playerid][pSkin]);
		 			SetPlayerPosAC(playerid,BizInfo[b][data_EXITX],BizInfo[b][data_EXITY],BizInfo[b][data_EXITZ]);
		    		SetPlayerInterior(playerid,BizInfo[b][data_INT]);
		    		SetPlayerVirtualWorld(playerid,BizInfo[b][data_VW]);
		    		FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		        	SetCameraBehindPlayer(playerid);
		        	CancelSelectTextDraw(playerid);
		        	SCM(playerid, COLOR_YELLOW,"Поздравляем Вас с покупкой новой одежды");
					if(BizInfo[b][bOwned] != 0) 
					{
						BizInfo[b][bProduct] -= 1;
						BizInfo[b][bMoney] += CenaSkin;
						UpdateBusinessData(b);
					}
				}
				else
				{
				    new CenaSkin;
			    	CenaSkin = SkinFeMale[PI[playerid][pChangeSkin]][1];
				    if(GetPlayerMoneyID(playerid) < CenaSkin) return SCM(playerid, COLOR_GREY,"У Вас недостаточно денег на руках");
					PI[playerid][pSkin] = GetPlayerSkin(playerid);
					GivePlayerMoneyLog(playerid,-CenaSkin);
					TextDrawHideForPlayer(playerid, buy_clothes[0]);
				    TextDrawHideForPlayer(playerid, buy_clothes[1]);
				    TextDrawHideForPlayer(playerid, buy_clothes[2]);
				    TextDrawHideForPlayer(playerid, buy_clothes[3]);
				    TextDrawHideForPlayer(playerid, buy_clothes[4]);
				    TextDrawHideForPlayer(playerid, buy_clothes[5]);
				    PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
		          	PI[playerid][data_CLICKTD] = false;
		          	PI[playerid][data_CLOTHESMENU] = false;
		          	SetPlayerSkinAC(playerid,PI[playerid][pSkin]);
		          	SetPlayerPosAC(playerid,BizInfo[b][data_EXITX],BizInfo[b][data_EXITY],BizInfo[b][data_EXITZ]);
		    		SetPlayerInterior(playerid,BizInfo[b][data_INT]);
		    		SetPlayerVirtualWorld(playerid,BizInfo[b][data_VW]);
		    		FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		        	SetCameraBehindPlayer(playerid);
		        	CancelSelectTextDraw(playerid);
		        	SCM(playerid, COLOR_YELLOW,"Поздравляем Вас с покупкой новой одежды");
					if(BizInfo[b][bOwned] != 0) {
						BizInfo[b][bProduct] -= 1;
						BizInfo[b][bMoney] += CenaSkin;
						UpdateBusinessData(b);
					}
				}
				return 1;
			}
		}
	}
	return 1;
}

callback: CasinoUpdate(playerid)
{
    casino_update[playerid]++;
	if(casino_update[playerid] < 6)
	{
 		casino_point[playerid][0] = random(3);
		switch(casino_point[playerid][0])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][0], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][0], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][0], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][0]);
		return 1;
	}

	else if(casino_update[playerid] < 11 && casino_update[playerid] > 5)
	{
 		casino_point[playerid][1] = random(3);
		switch(casino_point[playerid][1])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][1], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][1], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][1], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][1]);
		return 1;
	}
	else if(casino_update[playerid] < 16 && casino_update[playerid] > 10)
	{
 		casino_point[playerid][2] = random(3);
		switch(casino_point[playerid][2])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][2], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][2], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][2], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][2]);
		return 1;
	}
	else if(casino_update[playerid] < 21 && casino_update[playerid] > 15)
	{
 		casino_point[playerid][3] = random(3);
		switch(casino_point[playerid][3])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][3], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][3], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][3], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][3]);
		return 1;
	}
	else {
	    KillTimer(casino_timer[playerid]);
		new str_1[35];
	    if(casino_point[playerid][0] == casino_point[playerid][1] &&
		casino_point[playerid][2] == casino_point[playerid][3] &&
		casino_point[playerid][0] == casino_point[playerid][3]) {
		    new money = casino_stavka[playerid]*10;
		    GivePlayerMoneyLog(playerid, money);
		    cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы выиграли"));
		    new text[90];
		    format(text,sizeof(text),"Поздравляем! Вы выйграли %d рублей",money);
		    SCM(playerid ,0xFFFF33FF, text);
		}
		else {
		    cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы проиграли"));
		}
		casino_stavka[playerid] = 0;
		casino_update[playerid] = 0;
		new str_3[35];
		format(str_1, sizeof(str_1), "%d RUB", GetPlayerMoneyID(playerid));
		format(str_3, sizeof(str_3), "%d RUB", casino_stavka[playerid]);
		PlayerTextDrawSetString(playerid,casino_money[playerid][0],str_1);
		PlayerTextDrawSetString(playerid,casino_money[playerid][1],str_3);
	}
	return 1;
}
callback: WalkAnim(playerid)
{
    new keys, updown, leftright;
    GetPlayerKeys(playerid,keys,updown,leftright);
    if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
    {
  		if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
	return 1;
}
callback: ClearAnimPlayer(playerid) return ClearAnimations(playerid);
stock NotReklama(playerid, string[]) {
	new i, AR;
	for(i = strlen(string); i != 0; --i)
	switch(string[i]) {
		case '0'..'9': AR++;
	}
	if(AR > 7) {
		SendAdminsMessagef(0x66e0d6FF, "[Ghost-Message] Подозрение на %s[%d] (Сообщение: %s)",PI[playerid][pName],playerid,string);
		return 0;
  	}
	return 1;
}
stock GetPlayerGangZone(playerid) {
	for(new i; i <= totalgz; i++) if(IsPlayerToKvadrat(playerid,gz_info[i][gzminx],gz_info[i][gzminy],gz_info[i][gzmaxx],gz_info[i][gzmaxy])) return i;
	return -1;
}
IsPlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if((x <= max_x && x >= min_x) && (y <= max_y && y >= min_y)) return 1;
	return 0;
}
stock ShowCasinoGame(playerid)
{
    for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid, casino_fon[i]);
	for(new i = 0; i < 4; i++) PlayerTextDrawShow(playerid,casino_card[playerid][i]);
	for(new i = 0; i < 2; i++) PlayerTextDrawShow(playerid,casino_money[playerid][i]);
	TextDrawShowForPlayer(playerid, casino_bet);
    PI[playerid][data_OPENCASINO] = true;
    PI[playerid][data_CLICKTD] = true;
    SelectTextDraw(playerid,0xddddddff);
	return 1;
}
stock HideCasinoGame(playerid) {
	for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, casino_fon[i]);
	for(new i = 0; i < 4; i++) PlayerTextDrawHide(playerid,casino_card[playerid][i]);
	for(new i = 0; i < 2; i++) PlayerTextDrawHide(playerid,casino_money[playerid][i]);
	TextDrawHideForPlayer(playerid, casino_bet);
    PI[playerid][data_OPENCASINO] = false;
    PI[playerid][data_CLICKTD] = false;
    CancelSelectTextDraw(playerid);
	return 1;
}
stock ShowAutoSalonMenu(playerid) {
	SetPVarInt(playerid, "asalon", 1);
    PI[playerid][pInAutoSalon] = true;
    PI[playerid][data_CLICKTD] = true;
	for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid, AutoSalon_Button[i]);
	TextDrawShowForPlayer(playerid,AutoSalon_Stats[0]);
	SelectTextDraw(playerid,0xddddddff);
	return 1;
}
stock HideAutoSalonMenu(playerid) {
	SetPVarInt(playerid, "asalon", 0);
    PI[playerid][pInAutoSalon] = false;
    PI[playerid][data_CLICKTD] = false;
	for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, AutoSalon_Button[i]);
    for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, AutoSalon_ButtonColor[i]);
    for(new i = 0; i < 48; i++) TextDrawHideForPlayer(playerid, AutoSalon_Color[i]);
	TextDrawHideForPlayer(playerid,AutoSalon_Stats[0]);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock ShowClothesMenu(playerid,b) {
	if(PI[playerid][pMember] != 0) return SCM(playerid, COLOR_GREY,"Вы состоите в организации");
 	PI[playerid][data_CLICKTD] = true;
	PI[playerid][data_CLOTHESMENU] = true;
	SelectTextDraw(playerid,0xddddddff);
    SetPVarInt(playerid, "Clothes_biz", b);
	SCM(playerid,COLOR_TOMATO,"Чтобы закрыть донат меню, используйте: 'ESC'");
	PI[playerid][pChangeSkin] = 0;
	if(PI[playerid][pSex] == 1) SetPlayerSkinAC(playerid,SkinMale[PI[playerid][pChangeSkin]][0]);
	else SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][pChangeSkin]][0]);
	new string[9];
	format(string,sizeof(string),"%d",SkinMale[PI[playerid][pChangeSkin]][1]);
	PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], string);
	new virtworld = random(687);
	SetPlayerVirtualWorld(playerid,virtworld);
	SetPlayerInterior(playerid,0);
	TogglePlayerControllable(playerid, false);
	SetPlayerPosAC(playerid, -226.2288,487.0842,21.0635);
	SetPlayerFacingAngle(playerid,200.0);
	InterpolateCameraPos(playerid, -222.566482, 485.403137, 22.127206, -222.566482, 485.403137, 22.127206, 1000);
	InterpolateCameraLookAt(playerid, -227.177688, 486.782836, 20.773227, -227.177688, 486.782836, 20.773227, 1000);
	TextDrawShowForPlayer(playerid, buy_clothes[0]);
	TextDrawShowForPlayer(playerid, buy_clothes[1]);
	TextDrawShowForPlayer(playerid, buy_clothes[2]);
	TextDrawShowForPlayer(playerid, buy_clothes[3]);
	TextDrawShowForPlayer(playerid, buy_clothes[4]);
	TextDrawShowForPlayer(playerid, buy_clothes[5]);
	PlayerTextDrawShow(playerid, buy_clothes_m[playerid]);
	return 1;
}
stock ShowBusinessMenu(playerid,b) {
	switch(BizInfo[b][data_TYPE]) {
	    case 2: ShowShopMenu(playerid);
	    case 3: ShowClothesMenu(playerid,b);
		case 4: ShowEatMenu(playerid);
	}
	return 1;
}
stock ShowEatMenu(playerid) return ShowPlayerDialog(playerid, dialog_EAT_MENU, DIALOG_STYLE_LIST, "{ee3366}Закусочная", "Спранк (100 рублей)\nКофе (150 рублей)\nБургер (250 рублей)", "Купить", "Отмена");
stock UpdateHouseData(h) 
{
    DestroyDynamicMapIcon(HOUSE_DATA[h][data_MAPICON]);
    DestroyDynamicPickup(HOUSE_DATA[h][data_PICKUPENTER]);
    if(HOUSE_DATA[h][data_OWNED] == 0) 
	{
	    HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
	    HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 100.0);
	}
	else {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1272, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 100.0);
	}
	return 1;
}
stock SaveHouseData(h) {
	new str_q[256];
	new str_q2[256];
	str_q = "UPDATE `houses` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner", HOUSE_DATA[h][data_OWNER]);
	acc_int_strcat(str_q, sizeof(str_q), "owned", HOUSE_DATA[h][data_OWNED]);
	acc_int_strcat(str_q, sizeof(str_q), "lock", HOUSE_DATA[h][data_LOCK]);
	acc_int_strcat(str_q, sizeof(str_q), "day", HOUSE_DATA[h][data_DAY]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",HOUSE_DATA[h][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(mysql, str_q, true, "", "");
	return 1;
}
stock SaveKVData(kv) {
	new str_q[512];
	new str_q2[512];
	str_q = "UPDATE `kvartiry` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner1", KV_DATA[kv][data_OWNER_1]);
	acc_str_strcat(str_q, sizeof(str_q), "owner2", KV_DATA[kv][data_OWNER_2]);
	acc_str_strcat(str_q, sizeof(str_q), "owner3", KV_DATA[kv][data_OWNER_3]);
	acc_str_strcat(str_q, sizeof(str_q), "owner4", KV_DATA[kv][data_OWNER_4]);
	acc_str_strcat(str_q, sizeof(str_q), "owner5", KV_DATA[kv][data_OWNER_5]);
	acc_str_strcat(str_q, sizeof(str_q), "owner6", KV_DATA[kv][data_OWNER_6]);
	acc_int_strcat(str_q, sizeof(str_q), "owned1", KV_DATA[kv][data_OWNED][0]);
	acc_int_strcat(str_q, sizeof(str_q), "owned2", KV_DATA[kv][data_OWNED][1]);
	acc_int_strcat(str_q, sizeof(str_q), "owned3", KV_DATA[kv][data_OWNED][2]);
	acc_int_strcat(str_q, sizeof(str_q), "owned4", KV_DATA[kv][data_OWNED][3]);
	acc_int_strcat(str_q, sizeof(str_q), "owned5", KV_DATA[kv][data_OWNED][4]);
	acc_int_strcat(str_q, sizeof(str_q), "owned6", KV_DATA[kv][data_OWNED][5]);
	acc_int_strcat(str_q, sizeof(str_q), "lock1", KV_DATA[kv][data_LOCK][0]);
	acc_int_strcat(str_q, sizeof(str_q), "lock2", KV_DATA[kv][data_LOCK][1]);
	acc_int_strcat(str_q, sizeof(str_q), "lock3", KV_DATA[kv][data_LOCK][2]);
	acc_int_strcat(str_q, sizeof(str_q), "lock4", KV_DATA[kv][data_LOCK][3]);
	acc_int_strcat(str_q, sizeof(str_q), "lock5", KV_DATA[kv][data_LOCK][4]);
	acc_int_strcat(str_q, sizeof(str_q), "lock6", KV_DATA[kv][data_LOCK][5]);
	acc_int_strcat(str_q, sizeof(str_q), "day1", KV_DATA[kv][data_DAY][0]);
	acc_int_strcat(str_q, sizeof(str_q), "day2", KV_DATA[kv][data_DAY][1]);
	acc_int_strcat(str_q, sizeof(str_q), "day3", KV_DATA[kv][data_DAY][2]);
	acc_int_strcat(str_q, sizeof(str_q), "day4", KV_DATA[kv][data_DAY][3]);
	acc_int_strcat(str_q, sizeof(str_q), "day5", KV_DATA[kv][data_DAY][4]);
	acc_int_strcat(str_q, sizeof(str_q), "day6", KV_DATA[kv][data_DAY][5]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",KV_DATA[kv][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(mysql, str_q, true, "", "");
	return 1;
}
stock UpdateKVData(kv, k) {
	DestroyDynamic3DTextLabel(KV_DATA[kv][data_INFO][k]);
    new owner[MAX_PLAYER_NAME], class_kv[9],str[174];
	switch(k) {
		case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
		case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
		case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
		case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
		case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
		case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
	}
	switch(KV_DATA[kv][data_CLASS][k]) {
	    case 0: class_kv = "Хрущёвка";
	    case 1: class_kv = "Простая";
	    case 2: class_kv = "Элитный";
	}
	if(KV_DATA[kv][data_OWNED][k] == 0) {
        format(str,sizeof(str), "\
		{ffffff}Номер квартиры: {ffffff}№%d\n\
		{ffffff}Название: {ffffff}%s\n\
		{ffffff}Стоимость: {ffffff}%d рублей\n\
		{ffffff}Используйте: {3377cc}/buykv",k+1, class_kv, KV_DATA[kv][data_PRICE][k]);
        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
    }
    else {
		format(str,sizeof(str), "\
		{ffffff}Номер квартиры: {ffffff}№%d\n\
		{ffffff}Название: {FFFFFF}%s\n\
		{ffffff}Владелец: {3377cc}%s\n\
		Стоимость: {3377cc}%d руб",k+1, class_kv, owner, KV_DATA[kv][data_PRICE][k]);
        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
	}	
	new kk;
	for(new kq = 0; kq < 6; kq++) {
		if(KV_DATA[kv][data_OWNED][kq] == 0)
		{}
		else kk++;
	}
	if(kk == 6) {
	    DestroyDynamicMapIcon(KV_DATA[kv][data_MAPICON]);
		KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 32, -1, 0, -1, -1, 100.0);
	}
	else {
	    DestroyDynamicMapIcon(KV_DATA[kv][data_MAPICON]);
		KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 31, -1, 0, -1, -1, 100.0);
	}
	return 1;
}
stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return 1;
}
stock RemovePlayerFromVehicleAC(playerid) {
    GetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return RemovePlayerFromVehicle(playerid);
}
stock SetPlayerSkinAC(playerid, skinid) {
	ClearAnimations(playerid);
	SetPlayerSkin(playerid, skinid);
	return 1;
}
stock SetPlayerPosAC(playerid,Float:x,Float:y,Float:z) {
	oldposX[playerid] = x;
	oldposY[playerid] = y;
	oldposZ[playerid] = z;
	DeletePVar(playerid, "ac_fly");
	SetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return 1;
}
stock PutPlayerInVehicleAC(playerid,car,set) {
    DeletePVar(playerid, "ac_fly");
	PutPlayerInVehicle(playerid,car,set);
	return 1;
}
stock ReportDialog(playerid) {
	if(PI[playerid][data_MUTE] != 0) return SCM(playerid, COLOR_GREY,"У Вас мут");
	if(GetPVarInt(playerid,"Counting_Report") > gettime()) return SCM(playerid, COLOR_GREY,"Эту команду можно использовать 1 раз в 2 минуты");
	SetPVarInt(playerid,"Counting_Report",gettime() + 120);
	return ShowPlayerDialog(playerid,dialog_REPORT,DIALOG_STYLE_LIST,"{ee3366}Выберите тип","1. Вопрос или помощь\n2. Жалоба на игрока","Далее","Назад");
}
stock SendDBMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(GetPVarInt(i, "job_db") != 0) SCM(i, color, text);
	}
	return 1;
}
stock SendLeaderMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][pLeader] >= 1) SCM(i, color, text);
	}
	return 1;
}
stock SendAdminsMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_CADMIN] != 1) if(PI[i][pAdmin] >= 1) SCM(i, color, text);
	}
	return 1;
}
stock SendOpgMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][pMember] == 5 || PI[i][pMember] == 6 || PI[i][pMember] == 7) if(PI[i][pAdmin] >= 1) SCM(i, color, text);
	}
	return 1;
}
stock SendVIPMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_VIP] >= 1) SCM(i, color, text);
	}
	return 1;
}
SetPlayerWalkingStyle(playerid, style) PI[playerid][data_WALK_STYLE] = style;
stock GetPlayerWalkingStyle(playerid) return PI[playerid][data_WALK_STYLE];
stock ClearAnim(playerid) {
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
	SetPlayerSpecialAction(playerid, 0);
	return 1;
}
stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
stock FreezePlayer(playerid) {
    SetPVarInt(playerid,"freeze",1);
	cef_emit_event(playerid, "show-center-notify", CEFINT(4), CEFSTR("Пожалуйста, подождите..."));
	TogglePlayerControllable(playerid, false);
	return 1;
}
stock PlaySoundForAll(soundid, Float:x, Float:y, Float:z) {
	for (new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    PlayerPlaySound(i, soundid, x, y, z);
	}
}
stock ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5) {
    if(IsPlayerConnected(playerid)) {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        new vw = GetPlayerVirtualWorld(playerid);
        for(new i = 0; i < MAX_PLAYERS; i++) {
            if(!IsPlayerConnected(i)) continue;
            if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == vw) {
                GetPlayerPos(i, posx, posy, posz);
                tempposx = (oldposx -posx);
                tempposy = (oldposy -posy);
                tempposz = (oldposz -posz);
                if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SCM(i, col1, string);
                else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SCM(i, col2, string);
                else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SCM(i, col3, string);
                else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SCM(i, col4, string);
                else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SCM(i, col5, string);
            }
            else {}
        }
    }
    return 1;
}
stock RestartCFG() {
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		SCM(i, COLOR_TOMATO, "");
		SCM(i, COLOR_TOMATO, "");
		SCM(i, COLOR_TOMATO, "");
		SCM(i, COLOR_TOMATO, "Внимание! Происходит перезапуск сервера");
		SCM(i, COLOR_TOMATO, "Пожалуйста, перезайдите через несколько минут");
		SCM(i, COLOR_TOMATO, "");
		SCM(i, COLOR_TOMATO, "");
		SCM(i, COLOR_TOMATO, "");
		Kick(i);
	}
	for(new h = 0; h < TotalHouses; h++) 
	{
		if(HOUSE_DATA[h][data_OWNED] == 1) 
		{
			if(HOUSE_DATA[h][data_DAY] > 1) HOUSE_DATA[h][data_DAY]--;
			else 
			{
	            mysql_tqueryf(mysql, "UPDATE `accounts` SET `house` = '-1', `salary` = '%d' WHERE `house` = '%d'",HOUSE_DATA[h][data_PRICE]/2, h);
    			strmid(HOUSE_DATA[h][data_OWNER], "none", 0, strlen(HOUSE_DATA[h][data_OWNER]), 24);
    			HOUSE_DATA[h][data_OWNED] = 0;
			}
			SaveHouseData(h);
		}
	}
	for(new kv = 0; kv < TotalKV; kv++)
	{
		for(new k = 0; k < 6; k++) 
		{
  			if(KV_DATA[kv][data_OWNED][k] == 1) 
			{
				if(KV_DATA[kv][data_DAY][k] > 1) KV_DATA[kv][data_DAY][k]--;
				else 
				{
				    switch(k) 
					{
						case 0: strmid(KV_DATA[kv][data_OWNER_1], "none", 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
						case 1: strmid(KV_DATA[kv][data_OWNER_2], "none", 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
						case 2: strmid(KV_DATA[kv][data_OWNER_3], "none", 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
						case 3: strmid(KV_DATA[kv][data_OWNER_4], "none", 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
						case 4: strmid(KV_DATA[kv][data_OWNER_5], "none", 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
						case 5: strmid(KV_DATA[kv][data_OWNER_6], "none", 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
					}
				    mysql_tqueryf(mysql, "UPDATE `accounts` SET `kv` = '-1', `padik` = '-1', `salary` = '%d' WHERE `padik` = '%d' AND `kv` = '%d'", KV_DATA[kv][data_PRICE][k]/2, kv, k);
	    			KV_DATA[kv][data_OWNED][k] = 0;
				}
			}
		}
		SaveKVData(kv);
	}
	/*for(new b = 0; b < TotalBusiness; b++) 
	{
		if(BizInfo[b][bOwned] == 1) 
		{
			if(BizInfo[b][bDays] > 1) BizInfo[b][bDays]--;
			else 
			{
	            mysql_tqueryf(mysql, "UPDATE `accounts` SET `business` = '-1', `salary` = '%d' WHERE `business` = '%d'",BizInfo[b][bPrice]/2,b);
    			strmid(BizInfo[b][bOwner], "none", 0, strlen(BizInfo[b][bOwner]), 24);
    			BizInfo[b][bOwned] = 0;
			}
			SaveBusinessData(b);
		}
	}*/
 	SaveWarehouse();
	mysql_function_query(mysql, "SELECT * FROM `banlist`",true, "LoadBans", "");
	mysql_function_query(mysql, "SELECT * FROM `fractions_blacklist`",true, "LoadBlackList", "");
	mysql_function_query(mysql, "SELECT * FROM `accounts`",true, "LoadBang", "");
	return 1;
}
stock Player_Speed(playerid) {
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
   	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
   	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
    return floatround(ST[3]);
}
stock LoadTextDraws() 
{
    GZ[0] = TextDrawCreate(580.500000, 150.977699, "interface:ZZ");
	TextDrawLetterSize(GZ[0], 0.000000, 0.000000);
	TextDrawTextSize(GZ[0], 70.500000, 50.044433);
	TextDrawAlignment(GZ[0], 1);
	TextDrawColor(GZ[0], 862362111);
	TextDrawSetShadow(GZ[0], 0);
	TextDrawSetOutline(GZ[0], 0);
	TextDrawFont(GZ[0], 4);

    casino_fon[0] = TextDrawCreate(156.500000, 88.977699, "LD_SPAC:white");
	TextDrawLetterSize(casino_fon[0], 0.000000, 0.000000);
	TextDrawTextSize(casino_fon[0], 325.500000, 242.044433);
	TextDrawAlignment(casino_fon[0], 1);
	TextDrawColor(casino_fon[0], 862362111);
	TextDrawSetShadow(casino_fon[0], 0);
	TextDrawSetOutline(casino_fon[0], 0);
	TextDrawFont(casino_fon[0], 4);

	casino_bet = TextDrawCreate(285.000000, 284.977783, "LD_SPAC:white");
	TextDrawLetterSize(casino_bet, 0.000000, 0.000000);
	TextDrawTextSize(casino_bet, 70.000000, 32.355560);
	TextDrawAlignment(casino_bet, 1);
	TextDrawColor(casino_bet, -1);
	TextDrawSetShadow(casino_bet, 0);
	TextDrawSetOutline(casino_bet, 0);
	TextDrawFont(casino_bet, 4);
	TextDrawSetSelectable(casino_bet, true);

	casino_fon[1] = TextDrawCreate(321.000000, 286.222229, "BET");
	TextDrawLetterSize(casino_fon[1], 0.652999, 2.850668);
	TextDrawAlignment(casino_fon[1], 2);
	TextDrawColor(casino_fon[1], 862362111);
	TextDrawSetShadow(casino_fon[1], 0);
	TextDrawSetOutline(casino_fon[1], 0);
	TextDrawBackgroundColor(casino_fon[1], 51);
	TextDrawFont(casino_fon[1], 2);
	TextDrawSetProportional(casino_fon[1], 1);

	AutoSalon_Stats[0] = TextDrawCreate(293.3334, 371.5334, "Interface:info");
	TextDrawTextSize(AutoSalon_Stats[0], 77.0000, 54.0000);
	TextDrawAlignment(AutoSalon_Stats[0], 1);
	TextDrawColor(AutoSalon_Stats[0], -1);
	TextDrawBackgroundColor(AutoSalon_Stats[0], 255);
	TextDrawFont(AutoSalon_Stats[0], 4);
	TextDrawSetProportional(AutoSalon_Stats[0], 0);
	TextDrawSetShadow(AutoSalon_Stats[0], 0);
	TextDrawSetSelectable(AutoSalon_Stats[0], true);

	AutoSalon_Button[2] = TextDrawCreate(391.3334, 385.2223, "Interface:next");
	TextDrawTextSize(AutoSalon_Button[2], 95.0000, 60.0000);
	TextDrawAlignment(AutoSalon_Button[2], 1);
	TextDrawColor(AutoSalon_Button[2], -1);
	TextDrawBackgroundColor(AutoSalon_Button[2], 255);
	TextDrawFont(AutoSalon_Button[2], 4);
	TextDrawSetProportional(AutoSalon_Button[2], 0);
	TextDrawSetShadow(AutoSalon_Button[2], 0);
	TextDrawSetSelectable(AutoSalon_Button[2], true);

	AutoSalon_Button[1] = TextDrawCreate(193.6665, 385.2223, "Interface:back");
	TextDrawTextSize(AutoSalon_Button[1], 86.0000, 59.0000);
	TextDrawAlignment(AutoSalon_Button[1], 1);
	TextDrawColor(AutoSalon_Button[1], -1);
	TextDrawBackgroundColor(AutoSalon_Button[1], 255);
	TextDrawFont(AutoSalon_Button[1], 4);
	TextDrawSetProportional(AutoSalon_Button[1], 0);
	TextDrawSetShadow(AutoSalon_Button[1], 0);
	TextDrawSetSelectable(AutoSalon_Button[1], true);

	AutoSalon_Button[0] = TextDrawCreate(286.9999, 401.8146, "Interface:choice");
	TextDrawTextSize(AutoSalon_Button[0], 81.0000, 55.0000);
	TextDrawAlignment(AutoSalon_Button[0], 1);
	TextDrawColor(AutoSalon_Button[0], -1);
	TextDrawBackgroundColor(AutoSalon_Button[0], 255);
	TextDrawFont(AutoSalon_Button[0], 4);
	TextDrawSetProportional(AutoSalon_Button[0], 0);
	TextDrawSetShadow(AutoSalon_Button[0], 0);
	TextDrawSetSelectable(AutoSalon_Button[0], true);

	AutoSalon_Color[0] = TextDrawCreate(12.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[1] = TextDrawCreate(35.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[2] = TextDrawCreate(58.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[3] = TextDrawCreate(81.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[4] = TextDrawCreate(104.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[5] = TextDrawCreate(127.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[6] = TextDrawCreate(12.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[7] = TextDrawCreate(35.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[8] = TextDrawCreate(58.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[9] = TextDrawCreate(81.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[10] = TextDrawCreate(104.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[11] = TextDrawCreate(127.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[12] = TextDrawCreate(12.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[13] = TextDrawCreate(35.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[14] = TextDrawCreate(58.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[15] = TextDrawCreate(81.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[16] = TextDrawCreate(104.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[17] = TextDrawCreate(127.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[18] = TextDrawCreate(12.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[19] = TextDrawCreate(35.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[20] = TextDrawCreate(58.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[21] = TextDrawCreate(81.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[22] = TextDrawCreate(104.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[23] = TextDrawCreate(127.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[24] = TextDrawCreate(12.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[25] = TextDrawCreate(35.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[26] = TextDrawCreate(58.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[27] = TextDrawCreate(81.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[28] = TextDrawCreate(104.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[29] = TextDrawCreate(127.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[30] = TextDrawCreate(12.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[31] = TextDrawCreate(35.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[32] = TextDrawCreate(58.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[33] = TextDrawCreate(81.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[34] = TextDrawCreate(104.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[35] = TextDrawCreate(127.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[36] = TextDrawCreate(12.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[37] = TextDrawCreate(35.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[38] = TextDrawCreate(58.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[39] = TextDrawCreate(81.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[40] = TextDrawCreate(104.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[41] = TextDrawCreate(127.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[42] = TextDrawCreate(12.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[43] = TextDrawCreate(35.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[44] = TextDrawCreate(58.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[45] = TextDrawCreate(81.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[46] = TextDrawCreate(104.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[47] = TextDrawCreate(127.000000, 289.519958, "LD_SPAC:white");
	for(new i = 0; i < 48; i++) 
	{
		TextDrawLetterSize(AutoSalon_Color[i], 0.000000, 0.000000);
		TextDrawTextSize(AutoSalon_Color[i], 21.500000, 26.879997);
		TextDrawAlignment(AutoSalon_Color[i], 1);
		TextDrawColor(AutoSalon_Color[i], color_veh[i][ciTD]);
		TextDrawSetShadow(AutoSalon_Color[i], 0);
		TextDrawSetOutline(AutoSalon_Color[i], 0);
		TextDrawFont(AutoSalon_Color[i], 4);
		TextDrawSetSelectable(AutoSalon_Color[i], true);
	}
	buy_clothes[0] = TextDrawCreate(19.000000, 142.488891, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[0], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[0], 55.000000, 28.622222);
	TextDrawAlignment(buy_clothes[0], 1);
	TextDrawColor(buy_clothes[0], 0x339999FF);
	TextDrawSetShadow(buy_clothes[0], 0);
	TextDrawSetOutline(buy_clothes[0], 0);
	TextDrawFont(buy_clothes[0], 4);
	TextDrawSetSelectable(buy_clothes[0], true);
	buy_clothes[1] = TextDrawCreate(19.000000, 173.355590, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[1], 26.500000, 31.733329);
	TextDrawAlignment(buy_clothes[1], 1);
	TextDrawColor(buy_clothes[1], 0x339999FF);
	TextDrawSetShadow(buy_clothes[1], 0);
	TextDrawSetOutline(buy_clothes[1], 0);
	TextDrawFont(buy_clothes[1], 4);
	TextDrawSetSelectable(buy_clothes[1], true);
	buy_clothes[2] = TextDrawCreate(47.500000, 173.111145, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[2], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[2], 26.500000, 31.733329);
	TextDrawAlignment(buy_clothes[2], 1);
	TextDrawColor(buy_clothes[2], 0x339999FF);
	TextDrawSetShadow(buy_clothes[2], 0);
	TextDrawSetOutline(buy_clothes[2], 0);
	TextDrawFont(buy_clothes[2], 4);
	TextDrawSetSelectable(buy_clothes[2], true);
	buy_clothes[3] = TextDrawCreate(281.6667, 320.5111, "Interface:choice"); // пусто
	TextDrawTextSize(buy_clothes[3], 75.0000, 53.0000);
	TextDrawAlignment(buy_clothes[3], 1);
	TextDrawColor(buy_clothes[3], -1);
	TextDrawBackgroundColor(buy_clothes[3], 255);
	TextDrawFont(buy_clothes[3], 4);
	TextDrawSetProportional(buy_clothes[3], 0);
	TextDrawSetShadow(buy_clothes[3], 0);
	TextDrawSetSelectable(buy_clothes[3], true);
	buy_clothes[4] = TextDrawCreate(393.0000, 315.1186, "Interface:back"); // пусто
	TextDrawTextSize(buy_clothes[4], 82.0000, 64.0000);
	TextDrawAlignment(buy_clothes[4], 1);
	TextDrawColor(buy_clothes[4], -1);
	TextDrawBackgroundColor(buy_clothes[4], 255);
	TextDrawFont(buy_clothes[4], 4);
	TextDrawSetProportional(buy_clothes[4], 0);
	TextDrawSetShadow(buy_clothes[4], 0);
	TextDrawSetSelectable(buy_clothes[4], true);
	buy_clothes[5] = TextDrawCreate(151.6666, 313.0444, "Interface:next"); // пусто
	TextDrawTextSize(buy_clothes[5], 89.0000, 68.0000);
	TextDrawAlignment(buy_clothes[5], 1);
	TextDrawColor(buy_clothes[5], -1);
	TextDrawBackgroundColor(buy_clothes[5], 255);
	TextDrawFont(buy_clothes[5], 4);
	TextDrawSetProportional(buy_clothes[5], 0);
	TextDrawSetShadow(buy_clothes[5], 0);
	TextDrawSetSelectable(buy_clothes[5], true);
    return 1;
}
stock LoadPlayerTextDraws(playerid) {
    casino_card[playerid][0] = CreatePlayerTextDraw(playerid, 166.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][0], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][0], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][0], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][0], 4);
	casino_card[playerid][1] = CreatePlayerTextDraw(playerid, 244.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][1], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][1], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][1], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][1], 4);
	casino_card[playerid][2] = CreatePlayerTextDraw(playerid, 322.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][2], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][2], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][2], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][2], 4);
	casino_card[playerid][3] = CreatePlayerTextDraw(playerid, 400.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][3], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][3], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][3], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][3], 4);
	casino_money[playerid][0] = CreatePlayerTextDraw(playerid, 323.500000, 95.199981, "BANK: 10000 RUB");
	PlayerTextDrawLetterSize(playerid, casino_money[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, casino_money[playerid][0], 2);
	PlayerTextDrawColor(playerid, casino_money[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, casino_money[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, casino_money[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, casino_money[playerid][0], 51);
	PlayerTextDrawFont(playerid, casino_money[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, casino_money[playerid][0], 1);
	casino_money[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 253.866668, "1000 RUB");
	PlayerTextDrawLetterSize(playerid, casino_money[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, casino_money[playerid][1], 2);
	PlayerTextDrawColor(playerid, casino_money[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, casino_money[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, casino_money[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, casino_money[playerid][1], 51);
	PlayerTextDrawFont(playerid, casino_money[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, casino_money[playerid][1], 1);
	buy_clothes_m[playerid] = CreatePlayerTextDraw(playerid, 341.000000, 339.110900, "8000000");
	PlayerTextDrawLetterSize(playerid, buy_clothes_m[playerid], 0.597499, 2.875555);
	PlayerTextDrawAlignment(playerid, buy_clothes_m[playerid], 2);
	PlayerTextDrawColor(playerid, buy_clothes_m[playerid], -1);
	PlayerTextDrawSetShadow(playerid, buy_clothes_m[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_clothes_m[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, buy_clothes_m[playerid], 51);
	PlayerTextDrawFont(playerid, buy_clothes_m[playerid], 2);
	PlayerTextDrawSetProportional(playerid, buy_clothes_m[playerid], 1);

}
stock PlayerToKvadrat(playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

stock PlayerRegistration(playerid) 
{
    return ShowPlayerDialog(playerid, dialog_REGISTER, DIALOG_STYLE_PASSWORD, !"{ee3366}Регистрация", !"{FFFFFF}Добро пожаловать на {FFA500}"NAMESERVER"{FFFFFF}!\n\nЭтот аккаунт {FFFF99}не зарегистрирован{FFFFFF}на нашем сервере.\nПридумайте пароль, соответствующий следующим критериям:\n\n{FFFF99}Длина пароля: от 6 до 30 символов\n{FFFF99}Пароль должен содержать буквы и цифры\n{FFFF99}Пароль чувствителен к регистру.", !"Далее", !"");
}
stock PlayerLogin(playerid) 
{	
	SetPVarInt(playerid, "RegStatus", 0);

	if(console_Debbug == 1) printf("PlayerLogin take player.. %s", PI[playerid][pName]);

	ShowPlayerDialogf(playerid, dialog_LOGIN, DIALOG_STYLE_PASSWORD, !"{ee3366}Авторизация", !"Войти", !"", "\
	{FFFFFF}Добро пожаловать на {FFA500}"NAMESERVER"{FFFFFF}!\n\n\
	Пройдите авторизацию, чтобы начать играть\n\
	Ваш логин: {FFFF99}%s{FFFFFF}\n\
	Введите свой пароль в поле ниже:\n\n\
	{696969}Примичение: у Вас есть только 3 попытки на ввод пароля", PI[playerid][pName]);

	return SetPlayerVirtualWorld(playerid, playerid);
}
stock ClearCarData(car) 
{
	CarInfo[car][cLock] = 0;
	CarInfo[car][cEngineStatus] = 0;
	CarInfo[car][cLamp] = 0;
	CarInfo[car][cAutoSchool] = INVALID_PLAYER_ID;
	CarInfo[car][cRent] = INVALID_PLAYER_ID;
	CarInfo[car][cLoadValue] = 0;
	CarInfo[car][cLoad] = 0;
	CarInfo[car][cAmmo] = 0;
	CarInfo[car][cMetall] = 0;
	return 1;
}
stock ShowStats(playerid, forid = -1) 
{
	new sex_text[8],org_text[20],number_text[12],hous[20],kvs[20],kkvs[20],bis[20],status[20],vip_check[10],vip_color[10],invpt,invmt,invdr;
	new str_3[1048];
	new str_1[256];
	switch(PI[playerid][data_NUMBER]) 
	{
	    case 0: number_text = "Нет";
	    default: format(number_text,sizeof(number_text),"%d",PI[playerid][data_NUMBER]);
	}
	switch(PI[playerid][pLevel])
	{
		case 1..3: status = "Новичок";
		case 4..9: status = "Освоившийся";
		default: status = "Опытный";
	}
	switch(PI[playerid][data_PADIK]) 
	{
		case INVALID_KV_ID: kvs = "Бездомный";
		default: format(kvs,sizeof(kvs),"№%d",PI[playerid][data_PADIK]+1);
	}
	switch(PI[playerid][data_KV]) 
	{
		case INVALID_KV_ID: kkvs = "Бездомный";
		default: format(kkvs,sizeof(kkvs),"№%d",PI[playerid][data_KV]+1);
	}
	switch(PI[playerid][data_HOUSE]) 
	{
		case INVALID_HOUSE_ID: hous = "Бездомный";
		default: format(hous,sizeof(hous),"№%d",PI[playerid][data_HOUSE]+1);
	}
	switch(PI[playerid][pBusiness]) 
	{
		case INVALID_BUSINESS_ID: bis = "Нет";
		default: format(bis,sizeof(bis),"№%d",PI[playerid][pBusiness]+1);
	}
	switch(PI[playerid][pMember]) 
	{
	    case 0: org_text = "Нет";
		case 1: org_text = "Правительство";
		case 2: org_text = "Войсковая часть";
		case 3: org_text = "Полиция";
		case 4: org_text = "БЦРБ";
		case 5: org_text = "Скинхеды";
		case 6: org_text = "Гопота";
		case 7: org_text = "Кавказцы";
	}
	switch(PI[playerid][pSex]) 
	{
		case 1: sex_text = "Мужской";
		case 2: sex_text = "Женский";
	}
	switch(PI[playerid][data_VIP]) 
	{
		case 0: vip_check = "Неактивна";
		case 1..365: vip_check = "Активна";
	}
	switch(PI[playerid][data_VIP]) 
	{
		case 0: vip_color = "285d9f";
		case 1..365: vip_color = "ffcd00";
	}
	switch(PI[playerid][data_VIP]) 
	{
		case 0: invpt = 400;
		case 1: invpt = 800;
	}
	switch(PI[playerid][data_VIP]) 
	{
		case 0: invmt = 40;
		case 1..365: invmt = 80;
	}
	switch(PI[playerid][data_VIP]) 
	{
		case 0: invdr = 1000;
		case 1..365: invdr = 2000;
	}
	new nextlvl = PI[playerid][pLevel]+1;
	new nextexp = nextlvl*4;
	format(str_1,sizeof(str_1),"{FFFFFF}Имя:\t\t\t\t{285d9f}%s\n",PI[playerid][pName]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{FFFFFF}Номер персонажа:{FFA500}\t\t%d\n",PI[playerid][pID]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{FFFFFF}Подписка:\t\t\t{%s}%s\n", vip_color,vip_check);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{FFFFFF}___________________________________\n\n");
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Уровень:\t\t\t%d\n",PI[playerid][pLevel]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Очки опыта:\t\t\t%d / %d\n",PI[playerid][data_EXP], nextexp);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Пол:\t\t\t\t%s\n",sex_text);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Номер телефона:\t\t%s\n",number_text);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Баланс телефона:\t\t%d руб\n",PI[playerid][pNumberMoney]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Законопослушность:\t\t%d\n",PI[playerid][pRespect]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Уровень розыска:\t\t%d\n",PI[playerid][pWanted]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Вещества:\t\t\t%d / %d\n",PI[playerid][data_DRUGS], invdr);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Зависимость:\t\t\t%d\n",PI[playerid][data_USEDRUGS]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Металл:\t\t\t%d / %d\n",PI[playerid][data_MET], invmt);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Патроны:\t\t\t%d / %d\n",PI[playerid][data_PATR], invpt);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Маска:\t\t\t\t%d / 1\n",PI[playerid][data_MASK]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Аптечки:\t\t\t%d / 3\n",PI[playerid][pHealPack]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"___________________________________\n\n");
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Организация:\t\t\t%s\n",org_text);
	strcat(str_3,str_1);
	switch(PI[playerid][pMember]) 
	{
 	    case 0:format(str_1,sizeof(str_1),"Должность:\t\t\tНет\n"),strcat(str_3,str_1);
 	    case 1:format(str_1,sizeof(str_1),"Должность:\t\t\t%s\n",rang_gov[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
		case 2:format(str_1,sizeof(str_1),"Звание:\t\t\t%s\n",rang_army[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
		case 3:format(str_1,sizeof(str_1),"Звание:\t\t\t%s\n",rang_police[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
		case 4:format(str_1,sizeof(str_1),"Должность:\t\t\t%s\n",rang_hospital[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
	    case 5:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_skinhead[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
	    case 6:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_gopota[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
	    case 7:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_kavkaz[PI[playerid][pRang]-1][frName]),strcat(str_3,str_1);
	}
	if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) 
	{
		format(str_1,sizeof(str_1),"Место жительства:\t\t%s\n",hous);
		strcat(str_3,str_1);
	}
	else if(PI[playerid][data_KV] != INVALID_KV_ID) 
	{
		format(str_1,sizeof(str_1),"Место жительства:\t\t%s\n",kkvs);
		strcat(str_3,str_1);
	}
	else 
	{
		format(str_1,sizeof(str_1),"Место жительства:\t\tБездомный\n");
		strcat(str_3,str_1);
	}
	format(str_1,sizeof(str_1),"Бизнес:\t\t\t%s\n",bis);
	strcat(str_3, str_1);

	if(forid == -1) ShowPlayerDialog(playerid, 8009, DIALOG_STYLE_MSGBOX, !"{ee3366}Статистика игрока", str_3, "Закрыть","Назад");
	else ShowPlayerDialog(forid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Статистика игрока", str_3, "Закрыть","Назад");

	return 1;
}
stock ClearPlayerData(playerid) 
{
	PI[playerid][pTempJob] = 0; 

	PI[playerid][pTempMember] = -1;

	PI[playerid][pRentMoto] = INVALID_VEHICLE_ID;

	PI[playerid][PTempJobValue_1] = 0; 
	PI[playerid][PTempJobValue_2] = 0; 
	PI[playerid][pTempJobMoney] = 0; 

	PI[playerid][pOnCapture] = 0;
	PI[playerid][pCaptureManager] = 0;

    ClearProposition(playerid);
	for(new i = 0; i < 13; i++) {
		PI[playerid][data_GUN][i] = 0;
		PI[playerid][data_AMMO][i] = 0;
	}
    shield[playerid] = false;
    PI[playerid][data_TIME] = 0;
    PI[playerid][data_911_1] = 0;
	PI[playerid][pID] = 0;
	PI[playerid][data_911_2] = 0;
	IsPlayerLogged{playerid} = false;
	PI[playerid][pSex] = 0;
	animan{playerid}                    = false;
	PI[playerid][pSkin] = 0;
	PI[playerid][pOrgSkin] = 0;
	PI[playerid][pMoney] = 0;
	PI[playerid][pAdmin] = 0;
	PI[playerid][pLevel] = 0;
	PI[playerid][data_EXP] = 0;
	PI[playerid][pMember] = 0;
	PI[playerid][pLeader] = 0;
	PI[playerid][pRang] = 0;
	for(new i = 0; i < 4; i++) casino_point[playerid][i] = 0;
	casino_update[playerid] = 0;
	casino_stavka[playerid] = 0;
	PI[playerid][data_OPENCASINO] = false;
	PI[playerid][data_ANIM] = false;
	PI[playerid][data_3SECOND] = 0;
	PI[playerid][data_MINUTE] = 0;
	PI[playerid][pChangeSkin] = 0;
	PI[playerid][data_MUTE] = 0;
	PI[playerid][data_MUTETIME] = 0;
	PI[playerid][data_WARN] = 0;
	PI[playerid][data_WARNTIME] = 0;
	PI[playerid][pBank] = 0;
	PI[playerid][data_PUTPATR] = 0;
	PI[playerid][data_PUTMET] = 0;
	PI[playerid][data_EFIR] = false;
	PI[playerid][pPayDayMoney] = 0;
	PI[playerid][data_AFK] = -1;
	PI[playerid][pDriveLicense] = 0;
	PI[playerid][pGunLicense] = 0;
	PI[playerid][data_PATR] = 0;
	PI[playerid][data_DRUGS] = 0;
	PI[playerid][pWanted] = 0;
	PI[playerid][pRespect] = 0;
	PI[playerid][data_NUMBER] = 0;
	PI[playerid][pNumberMoney] = 0;
	PI[playerid][data_MET] = 0;
	PI[playerid][pStartJob] = 0;
	PI[playerid][pJailTime] = 0;
	PI[playerid][pJail] = 0;
	PI[playerid][data_VIP] = 0;
	PI[playerid][pDonate] = 0;
	PI[playerid][data_PHONE] = 0;
	PI[playerid][data_PHONEBOOK] = 0;
	PI[playerid][data_DIR] = 0;
	PI[playerid][pSatiety] = 0;
	PI[playerid][data_DRINK] = 0;
	PI[playerid][pHealthPoints] = 100.0;
	PI[playerid][data_ARM] = 100.0;
	PI[playerid][data_MED] = 0;
	PI[playerid][data_SPAWN] = 0;
	PI[playerid][pHospital] = 0;
	PI[playerid][data_JOB] = 0;
	PI[playerid][pHealPack] = 0;
	PI[playerid][data_MASK] = 0;
	PI[playerid][data_MASK_M] = 0;
	PI[playerid][data_CALL] = -1;
	PI[playerid][data_CLICKTD] = false;
	PI[playerid][data_CLOTHESMENU] = false;
	PI[playerid][pInAutoSalon] = false;
	PI[playerid][data_FIXCOMPL] = 0;
	PI[playerid][pCanisters] = 0;
	PI[playerid][data_SETMARK] = 0;
	PI[playerid][pSkillPistol] = 0;
	PI[playerid][pSkillSDPistol] = 0;
	PI[playerid][pSkillDeagle] = 0;
	PI[playerid][pSkillShotgun] = 0;
	PI[playerid][pSkillMP5] = 0;
	PI[playerid][data_AK47] = 0;
	PI[playerid][pSkillRifle] = 0;
	PI[playerid][pLoadVehicleID] = INVALID_VEHICLE_ID;
	PI[playerid][data_HOUSE] = INVALID_HOUSE_ID;
	PI[playerid][pBusiness] = INVALID_BUSINESS_ID;
	PI[playerid][data_KV] = INVALID_KV_ID;
	PI[playerid][data_PADIK] = INVALID_KV_ID;
	PI[playerid][data_ASH_CAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_CHEK] = 0;
	PI[playerid][data_ASH_TEST] = 0;
	PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
	PI[playerid][pChangerAutoSalon] = 0;
	PI[playerid][pAutoSalonColor] = 0;
	PI[playerid][pVkontakteID] = 0;
	PI[playerid][pUseAccessory] = 0;
	PI[playerid][pTakeAcs] = 0;
	PI[playerid][pAdminStatus] = 0;
	PI[playerid][data_schooltestlevel] = 0;
	PI[playerid][pPlayerDetecting] = 0;
	PI[playerid][pOnMP] = 0;
	PI[playerid][pTester] = 0;
	TimerForPlayer[playerid] = MAX_PLAYERS;
	FollowBy[playerid] = MAX_PLAYERS;
	clearDialogTimer(playerid);
	SetPVarInt(playerid, "DeathOnCapture", 0);
	SetPVarInt(playerid, "TempFollowBy", -1);
	SetPVarInt(playerid, "anim_load",1);
	SetPVarInt(playerid, "RegStatus", 0);

	PI[playerid][pRequestValue] = -1;
	PI[playerid][pRequestType] = -1;
	PI[playerid][pRequestIDFor] = -1;
	PI[playerid][pRequestIDFrom] = -1;
}
stock GivePlayerMoneyLog(playerid,amount) 
{
    if(IsPlayerConnected(playerid)) 
	{
	    GivePlayerMoney(playerid,amount);
	    PI[playerid][pMoney] += amount;
        new ctext[20];
	    if(amount < 0) {
	        format(ctext,sizeof(ctext),"%d руб.",amount);
   			SetPlayerChatBubble(playerid, ctext, COLOR_TOMATO, 20.0, 1500);
	    }
	    else {
	        format(ctext,sizeof(ctext),"+%d руб.",amount);
         	SetPlayerChatBubble(playerid, ctext, 0x99ff99FF, 20.0, 1500);
	    }
		UpdatePlayerDataInt(playerid, "Money", PI[playerid][pMoney],18933);
    }
}
stock RandomEX(min, max) {
	new a = random(max - min) + min;
	return a;
}
stock UpdatePlayerMoney(playerid,amount) 
{
    if(IsPlayerConnected(playerid)) 
	{
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
    }
}

stock GetPlayerMoneyID(playerid) return PI[playerid][pMoney];

stock ResetWeaponAll(playerid) 
{
    ResetPlayerWeapons(playerid);
    for(new s; s != 13; s++) 
	{
        PI[playerid][data_GUN][s] = 0;
        PI[playerid][data_AMMO][s] = 0;
    }
    return 1;
}
stock getWeaponIdSlot(weaponid) {
    switch(weaponid) {
        case 0, 1: return 0;
        case 2..9: return 1;
        case 10..15: return 10;
        case 16..18, 39: return 8;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28, 29, 32: return 4;
        case 30, 31: return 5;
        case 33, 34: return 6;
        case 35..38: return 7;
        case 40: return 12;
        case 41..43: return 9;
        case 44..46: return 11;
    }
    return -1;
}
stock ResetWeaponSlot(playerid, slot) {
    if(!IsPlayerConnected(playerid)) return 0;
    new weapon[13], ammo[13];
    for(new i = 0; i < 13; i++) {
        if(i != slot) {
			weapon[i] = PI[playerid][data_GUN][i];
			ammo[i] = PI[playerid][data_AMMO][i];
		}
    }
    ResetWeaponAll(playerid);
    for(new i = 0; i < 13; i++) if(i != slot) GiveWeapon(playerid, weapon[i], ammo[i]);
    return 1;
}
stock SetWeapon(playerid, gunid, ammo) {
    new slotgunid = getWeaponIdSlot(gunid);
    ResetWeaponSlot(playerid, slotgunid);
    GivePlayerWeapon(playerid, gunid, ammo);
    PI[playerid][data_GUN][slotgunid] = gunid;
    PI[playerid][data_AMMO][slotgunid] = ammo;
    ac_gun[playerid][slotgunid] = 1;
    return 1;
}
stock GiveWeapon(playerid, gunid, ammo) 
{
    new slotgunid = getWeaponIdSlot(gunid);
    GivePlayerWeapon(playerid, gunid, ammo);
    PI[playerid][data_GUN][slotgunid] = gunid;
    PI[playerid][data_AMMO][slotgunid] += ammo;
    ac_gun[playerid][slotgunid] = 1;
    return 1;
}
stock ShowAdmInfo(playerid, targetid) 
{
	cef_emit_event(playerid, "show-spectate");
	cef_emit_event(playerid, "hide-speed");
	new Float:hp,Float:arm;
	new str_pos[40], str_intvw[60], str_info[60], str_hp[15], str_arm[15];
	GetPlayerHealth(targetid,hp);
	GetPlayerArmour(targetid,arm);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(targetid, x, y, z);
	new hour, minute, second;
	gettime(hour, minute, second);

	format(str_pos,sizeof(str_pos),"%.2f, %.2f, %.2f", x, y, z);
	format(str_intvw,sizeof(str_intvw),"%d/%d", GetPlayerVirtualWorld(targetid), GetPlayerInterior(targetid));
	format(str_info,sizeof(str_info),"%s(%d)(#%d/#1)",PI[targetid][pName], targetid, PI[targetid][pID]);
	format(str_hp,sizeof(str_hp),"%.2f HP", hp);
	format(str_arm,sizeof(str_arm),"%.2f ARM", arm);

	cef_emit_event(playerid, "update-spectate", CEFINT(1), CEFSTR(str_info));
	cef_emit_event(playerid, "update-spectate", CEFINT(2), CEFINT(GetPlayerPing(targetid)));
	cef_emit_event(playerid, "update-spectate", CEFINT(3), CEFINT(GetPlayerFPS(targetid)));
	cef_emit_event(playerid, "update-spectate", CEFINT(4), CEFINT(GetPlayerState(targetid)));
	cef_emit_event(playerid, "update-spectate", CEFINT(5), CEFSTR(str_hp));
	cef_emit_event(playerid, "update-spectate", CEFINT(6), CEFSTR(str_arm));
	cef_emit_event(playerid, "update-spectate", CEFINT(7), CEFSTR(str_intvw));
	cef_emit_event(playerid, "update-spectate", CEFINT(8), CEFSTR(str_pos));
	cef_emit_event(playerid, "update-spectate", CEFINT(9), CEFSTR(Player_Speed(targetid)));
	return 1;
}
stock HideAdmInfo(playerid) cef_emit_event(playerid, "hide-spectate");
stock GetPlayerFPS(playerid) 
{
	static 	fps_player_drunk_level[MAX_PLAYERS],
			fps_drunk_level,
			fps_counter;

	if((fps_drunk_level = GetPlayerDrunkLevel(playerid)) < 100) 
	{
		SetPlayerDrunkLevel(playerid, 2000);
	}
	else if(fps_player_drunk_level[playerid] != fps_drunk_level)
	{
		fps_counter = fps_player_drunk_level[playerid] - fps_drunk_level;

		fps_player_drunk_level[playerid] = fps_drunk_level;

		if(0 < fps_counter < 256) 
			return fps_counter - 1;
	}
	return 0;
}
stock SettingSpawn(playerid) 
{	
	TogglePlayerControllable(playerid, true);
	new skin = GetSkinOfPlayer(playerid);

	if(GetPVarInt(playerid, "SpecBool") == 1) 
	{
	    DeletePVar(playerid, "SpecBool");
		SetPlayerPosAC(playerid, GetPVarFloat(playerid,"SpecX"), GetPVarFloat(playerid,"SpecY"), GetPVarFloat(playerid,"SpecZ"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"SpecFA"));
		SetPlayerInterior(playerid,GetPVarInt(playerid,"SpecInt"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"SpecWorld"));
		HideAdmInfo(playerid);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		SetSpawnInfoEx(playerid, skin, -256.0461, 469.3669, -29.6109, 180.0);
		return true;
	}
	if(GetPVarInt(playerid, "DeathOnCapture") == 1)
	{
		if(PI[playerid][pMember] == Command[0]) SetSpawnInfoEx(playerid, skin, 1555.0516,-1227.5444,18.7625, 180.0);
		if(PI[playerid][pMember] == Command[1]) SetSpawnInfoEx(playerid, skin, 1538.0566,-1268.1489,18.7625, 180.0);

		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerHealthAC(playerid, 176);

		ResetPlayerWeapons(playerid);

		return true;
	}
	if(PI[playerid][pJail] > 0) 
	{
		SetSpawnInfoEx(playerid, skin, 147.3188,1889.2491,-31.0747, 180.0);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,1);
		SetPlayerHealth(playerid, 100.00);
		Freeze(playerid);
		return true;
	}
	else if(PI[playerid][pDemorgan] > 0 && PI[playerid][pDemorganTIME] > 0)
	{
		SetSpawnInfoEx(playerid, skin, 14.5554,2.1119,1001.2870, 180.0);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,1);
		SetPlayerHealth(playerid, 100.00);
		Freeze(playerid);
		return true;
	}
	if(PI[playerid][pHospital] != 0)
	{
		if(PI[playerid][pHealthPoints] < 5) SetPlayerHealth(playerid, 20), PI[playerid][pHealthPoints] = 20;
		if(PI[playerid][pMember] == 2) 
		{
			SetSpawnInfoEx(playerid, skin, 743.4705,1523.0537,2002.1899, 180.0);
			SetPlayerVirtualWorld(playerid, 5);
			SetPlayerInterior(playerid, 5);
			Freeze(playerid);
		}
		else 
		{
			SetSpawnInfoEx(playerid, skin, 1331.8745,2505.1877,1002.1400, 180.0);
			SetPlayerVirtualWorld(playerid, 1); // был 0
			SetPlayerInterior(playerid,	2);
			Freeze(playerid);
		}
		return true;
	}
	else
	{
		if(PI[playerid][data_SPAWN] == 0)
		{
			if(PI[playerid][pLevel] <= 1) 
			{
				SetSpawnInfoEx(playerid, skin, 1803.5269,2506.7034,15.8725,308.2673);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Freeze(playerid);
				return true;
			}
			if(PI[playerid][pLevel] >= 3) 
			{
				SetSpawnInfoEx(playerid, skin, 1803.5269,2506.7034,15.8725,308.2673);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,0);
				Freeze(playerid);
				return true;
			}
		}
		if(PI[playerid][data_SPAWN] == 1)
		{
			switch(PI[playerid][pMember])
			{
				case 1:
				{
					SetSpawnInfoEx(playerid, skin, -33.6630,1825.1287,-35.9791, 180.0);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 1);
					Freeze(playerid);
					return true;
				}
				case 2:
				{
					SetSpawnInfoEx(playerid, skin, 743.5262,1521.9760,2002.1899, 180.0);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 1);
					Freeze(playerid);
					return true;
				}
				case 3:
				{
					SetSpawnInfoEx(playerid, skin, 133.8690,1893.0160,-31.9697, 180.0);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 1);
					Freeze(playerid);
					return true;
				}
				case 4:
				{
					SetSpawnInfoEx(playerid, skin, -2842.3259,2814.4868,1002.1600, 180.0);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					Freeze(playerid);
					return true;
				}
				case 5:
				{
					SetSpawnInfoEx(playerid, skin, -2128.9922,2407.0442,1501.8101, 180.0);
					SetPlayerVirtualWorld(playerid,3);
					SetPlayerInterior(playerid,3);
					Freeze(playerid);
					return true;
				}
				case 6:
				{
					SetSpawnInfoEx(playerid, skin, -2128.9922,2407.0442,1501.8101, 180.0);
					SetPlayerVirtualWorld(playerid,2);
					SetPlayerInterior(playerid,2);
					Freeze(playerid);
					return true;
				}
				case 7:
				{
					SetSpawnInfoEx(playerid, skin, -2128.9922,2407.0442,1501.8101, 180.0);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					Freeze(playerid);
					return true;
				}
			}
		}
		if(PI[playerid][data_SPAWN] == 2)
		{
			if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID)
			{
				new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
				SetPVarInt(playerid, "padik",kv);
				SetSpawnInfoEx(playerid, skin, KV_DATA[kv][data_CAR_POSX], KV_DATA[kv][data_CAR_POSY], KV_DATA[kv][data_CAR_POSZ], KV_DATA[kv][data_CAR_POSA]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				Freeze(playerid);
				SCMf(playerid, COLOR_GREEN, "Ваша квартира оплачена на %d дня/дней",KV_DATA[kv][data_DAY][k]);
				return true;
			}
			else if(PI[playerid][data_KV] == INVALID_KV_ID)
			{
				new h = PI[playerid][data_HOUSE];
				SetSpawnInfoEx(playerid, skin, HOUSE_DATA[h][data_CARX],HOUSE_DATA[h][data_CARY],HOUSE_DATA[h][data_CARZ], HOUSE_DATA[h][data_CARANGLE]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				Freeze(playerid);
				SCMf(playerid, COLOR_GREEN, "Ваш дом оплачен на %d дня/дней",HOUSE_DATA[h][data_DAY]);
				return true;
			}
		}
	}
	for(new i = 0; i < 13; i++) if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
	SetSpawnInfoEx(playerid, skin, 1803.5269,2506.7034,15.8725,308.2673);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	Freeze(playerid);
	return true;
}
stock SaveWarehouse() 
{
	new str_q[590];
	new str_q2[590];
	str_q = "UPDATE `warehouse` SET ";
	acc_int_strcat(str_q, sizeof(str_q), "rostov_metal", rostov_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_patr", rostov_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_narko", rostov_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_storage", rostov_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "gopota_metal", gopota_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "gopota_patr", gopota_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "gopota_narko", gopota_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "gopota_storage", gopota_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "kavkaz_metal", kavkaz_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "kavkaz_patr", kavkaz_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "kavkaz_narko", kavkaz_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "kavkaz_storage", kavkaz_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "army_metal", army_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "armystorage", ArmyStorage);
	acc_int_strcat(str_q, sizeof(str_q), "army_patr", army_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "smi_money", smi_money);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_kavkaz", m_kavkaz);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_gopota", m_gopota);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_skinhead", m_skinhead);
	acc_int_strcat(str_q, sizeof(str_q), "metall", MineOreStock);
	acc_int_strcat(str_q, sizeof(str_q), "coal", MineCoalStock);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '1'");
	strcat(str_q, str_q2);
	mysql_function_query(mysql, str_q, false, "", "");
}
stock acc_int_strcat(query[], len, name[], number) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%d',",name, number);
 	strcat(query, stringer, len);
 	return 1;
}
stock acc_float_strcat(query[], len, name[], Float:number) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%f',", name, number);
 	strcat(query, stringer, len);
 	return 1;
}
stock acc_str_strcat(query[], len, name[], str[]) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%s',",name, str);
 	strcat(query, stringer, len);
 	return 1;
}
stock GetFreeSeat(vehicleid) {
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3],cnt;
	for(new i;i<MAX_PLAYERS;i++) {
		if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i;i<3;i++) if(!seat[i]) return i+1;
	return -1;
}
stock GetMaxSeat(modelid) {
	switch(modelid) {
		case 596..598,427,490: return 4;
		case 599,497,528: return 2;
	}
	return -1;
}
stock SetPlayerSkills(playerid) 
{
	if(GunSystem == 1)
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, PI[playerid][pSkillPistol]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PI[playerid][pSkillSDPistol]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PI[playerid][pSkillDeagle]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PI[playerid][pSkillShotgun]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PI[playerid][pSkillMP5]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PI[playerid][data_AK47]*10);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PI[playerid][pSkillRifle]*10);
	}
	else 
	{
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1000);
	}
    return 1;
}
stock addkv(playerid) 
{
    new Float:a1 = GetPVarFloat(playerid, "aEnterX");
    new Float:a2 = GetPVarFloat(playerid, "aEnterY");
    new Float:a3 = GetPVarFloat(playerid, "aEnterZ");
    new Float:a4 = GetPVarFloat(playerid, "aCarX");
    new Float:a5 = GetPVarFloat(playerid, "aCarY");
    new Float:a6 = GetPVarFloat(playerid, "aCarZ");
    new Float:a7 = GetPVarFloat(playerid, "aCarAngle");
	new str_q[512];
	mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `kvartiry` ( `enter_x`, `enter_y`, `enter_z`, `car_posx`, `car_posy`, `car_posz`, `car_posa`) VALUES ( '%f', '%f', '%f', '%f', '%f', '%f', '%f')",a1,a2,a3,a4,a5,a6,a7);
    mysql_function_query(mysql, str_q, false, "", "");
    CreateDynamicMapIcon(GetPVarFloat(playerid, "aEnterX"), GetPVarFloat(playerid, "aEnterY"), GetPVarFloat(playerid, "aEnterZ"), 31, -1, 0, -1, -1, 100.0);
    CreateDynamicPickup(1273, 23, GetPVarFloat(playerid, "aEnterX"), GetPVarFloat(playerid, "aEnterY"), GetPVarFloat(playerid, "aEnterZ"),-1);
	return 1;
}
stock AddHouse(playerid) {
    new h = TotalHouses;
    new Float:a1 = GetPVarFloat(playerid, "aEnterX");
    new Float:a2 = GetPVarFloat(playerid, "aEnterY");
    new Float:a3 = GetPVarFloat(playerid, "aEnterZ");
    new Float:a4 = GetPVarFloat(playerid, "aExitX");
    new Float:a5 = GetPVarFloat(playerid, "aExitY");
    new Float:a6 = GetPVarFloat(playerid, "aExitZ");
    new a7 = GetPVarInt(playerid, "aInt");
    new a8 = GetPVarInt(playerid, "aClass");
    new a9 = GetPVarInt(playerid, "aPrice");
    new Float:a10 = GetPVarFloat(playerid, "aCarX");
    new Float:a11 = GetPVarFloat(playerid, "aCarY");
    new Float:a12 = GetPVarFloat(playerid, "aCarZ");
    new Float:a13 = GetPVarFloat(playerid, "aCarAngle");
    SetPVarInt(playerid,"addhouse", 0);
    SCM(playerid, COLOR_HINT, !"[Подсказка]: {FFFFFF}Дом был успешно добавлен!");
    HOUSE_DATA[h][data_ENTERX] = a1;
    HOUSE_DATA[h][data_ENTERY] = a2;
    HOUSE_DATA[h][data_ENTERZ] = a3;
    HOUSE_DATA[h][data_EXITX] = a4;
    HOUSE_DATA[h][data_EXITY] = a5;
    HOUSE_DATA[h][data_EXITZ] = a6;
    HOUSE_DATA[h][data_INT] = a7;
    HOUSE_DATA[h][data_CLASS] = a8;
    HOUSE_DATA[h][data_PRICE] = a9;
    HOUSE_DATA[h][data_CARX] = a10;
    HOUSE_DATA[h][data_CARY] = a11;
    HOUSE_DATA[h][data_CARZ] = a12;
    HOUSE_DATA[h][data_CARANGLE] = a13;
    if(HOUSE_DATA[h][data_OWNED] == 0) {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 200.0);
	}
	else {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(19131, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],0);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 200.0);
	}
	TotalHouses++;
	new str_q[712];
   	mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `houses` ( `enterx`, `entery`, `enterz`, `exitx`, `exity`, `exitz`, `carx`, `cary`, `carz`, `cara`, `int`, `class`, `price`) VALUES ( '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d')",a1,a2,a3,a4,a5,a6,a10,a11,a12,a13,a7,a8,a9);
    mysql_function_query(mysql, str_q, false, "", "");
	return 1;
}
stock IsPlayerCops(playerid) {
	switch(PI[playerid][pMember]) {
 		case 3: return 1;
	}
	return 0;
}
stock IsPlayerOPG(playerid) {
	switch(PI[playerid][pMember]) {
	    case 5,6,7: return 1;
	}
	return 0;
}
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z) {
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
stock SendDepMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		switch(PI[i][pMember]) {
		    case 1,2,3,4,8,9: SCM(i, color, text);
		}
	}
	return 1;
}
stock SetPlayerColorEx(playerid) 
{
	new M = PI[playerid][pMember];
    SetPlayerColor(playerid, PLAYER_COLOR_TEAM[M]);
	return PLAYER_COLOR_TEAM[M];
}
stock SetPlayerHealthAC(playerid, Float: Health) 
{
    PI[playerid][pHealthPoints] = Health;
    SetPlayerHealth(playerid, Health);
    return 1;
}
stock SetPlayerArmourAC(playerid, Float: Armour) {
    PI[playerid][data_ARM] = Armour;
    SetPlayerArmour(playerid, Armour);
    return 1;
}
CMD:givemetall(playerid,params[]) 
{
    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, !"Данную команду можно использовать только со 2 уровня");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givemetall [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Данного ID нет на сервере");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Данный игрок не прошел авторизацию");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя передавать самому себе");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	if(params[1] <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
	if(params[1] > 80) return SCM(playerid, COLOR_GREY, !"Разрешено передавать не более 80 металла за один раз");
	if(PI[playerid][data_MET] < params[1]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно металла на руках");
	GivePlayerMetall(playerid,-params[1]);
	GivePlayerMetall(params[0],params[1]);
	SCMf(playerid, COLOR_GREEN, "Вы передали %s[%d] %d кг металла", getName(params[0]), params[0], params[1]);
	SCMf(playerid, COLOR_GREEN, "Игрок %s[%d] передал Вам %d кг металла",PI[playerid][pName], playerid, params[1]);
	format(str,sizeof(str),"%s передал(а) металл %s",PI[playerid][pName], getName(params[0]));
    ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
    SetPlayerChatBubble(playerid, "Передал(а) металл", 0xFF99CCFF, 20.0, 4000);
	return 1;
}
CMD:tpcor(playerid, params[]) 
{
    if(CheckAdmin(playerid)) return 1;
    new Float:tpX, Float:tpY, Float:tpZ;
    if(sscanf(params, "fff", tpX, tpY, tpZ)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /tpcor [X] [Y] [Z]");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
	{
        SetVehiclePos(GetPlayerVehicleID(playerid), tpX, tpY, tpZ);
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
    }
    else SetPlayerPos(playerid, tpX, tpY, tpZ);
    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid));
    SetPlayerInterior(playerid, GetPlayerInterior(playerid));
    return 1;
}
CMD:flip(playerid, params[]) 
{
    if(CheckAdmin(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /flip [ID игрока]");
	if(!IsPlayerLogged{params[0]})return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(GetPlayerState(params[0])!=2) return SCM(playerid, COLOR_GREY,"Игрок не в машине");
	new cpos = GetPlayerVehicleID(params[0]);
	new Float:X, Float:Y, Float:Z, Float:A;
	GetVehiclePos(cpos, X, Y, Z);
	SetVehiclePos(cpos,X, Y, Z);
	GetVehicleZAngle(cpos, A);
	SetVehicleZAngle(cpos, A);
	RepairVehicle(cpos);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] перевернул транспорт игрока %s[%d]", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName],playerid,getName(params[0]),params[0]);
	return 1;
}
CMD:ans(playerid,params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
	if(sscanf(params,"us[90]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /ans [ID игрока] [текст]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете ответить самому себе");

    NotReklama(playerid, params[1]);

    SCMf(params[0], COLOR_BLACKRED, "Игровой мастер ответил Вам: {FFFFFF}%s", params[1]);
    SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] написал игроку %s[%d]:{FFFFFF} %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, getName(params[0]), params[0], params[1]);

	if(PI[params[0]][pAdmin] <= 0) 
	{
		PI[playerid][pAdminReports]++;
		UpdatePlayerDataInt(playerid, "AdminReports", PI[playerid][pAdminReports],19699);
	}

    PlayerPlaySound(params[0], 1085, 0.0, 0.0, 0.0);
    return 1;
}
CMD:change(playerid,params[]) 
{
    if(CheckAdmin(playerid, 5)) return 1;
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /change [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(GetPVarInt(params[0],"change_name_status") != 1) return SCM(playerid, COLOR_GREY, !"Данный игрок подавал заявку на смену никнейма");
	new str_q[256];
	mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'", CHANGE_NAME[params[0]]);
	mysql_function_query(mysql, str_q, true, "CheckName", "ds", params[0], CHANGE_NAME[params[0]]);
	return 1;
}
CMD:warn(playerid,params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
	if(sscanf(params,"us[32]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /warn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Вы не можете выдать себе предупреждение");
    if(PI[params[0]][pAdmin] > PI[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, !"Нельзя применить к игровому мастеру");
    PI[params[0]][pMember] = 0;
	PI[params[0]][pLeader] = 0;
	PI[params[0]][pRang] = 0;
	PI[params[0]][pAdmin] = 0;
	UpdatePlayerDataInt(playerid, "Admin", PI[params[0]][pAdmin],20073);

	if(PI[params[0]][pOnCapture] == 1)
	{
		AutoKickCapture(params[0]);
		CheckCount(params[0]);
	}

	if(PI[params[0]][data_WARN] < 3) 
	{
	    PI[params[0]][data_WARN]++;
	    PI[params[0]][data_WARNTIME] += 3600;
	    SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s выдал предупреждение игроку %s [%d/3]. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), getName(params[0]), PI[params[0]][data_WARN], params[1]);
	    SendClientMessagef(playerid, COLOR_TOMATO, "Игровой мастер #%d выдал Вам предупреждение [%d/3]. Причина: %s", PI[playerid][pAdminNumber], params[1]);
		SCM(params[0], COLOR_LIGHTGREY, !"До снятия всех предупреждений запрещено вступать во фракции");
		CreatePunishment(playerid, params[0], 2, params[1]);
	    return Kick(params[0]);
	}
	if(PI[params[0]][data_WARN] >= 3) 
	{
		new str_q[512];
	    mysql_format(mysql,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '7', '%e', '%e')",getName(params[0]),getName(playerid),params[2],PI[params[0]][pLoginIP]);
	    mysql_function_query(mysql, str_q, false, "", "");
		Kick(params[0]);
		SendAdminsMessagef(COLOR_TOMATO, "[%s #%d] %s заблокировал %s на 7 дней. Причина: 3 предупреждения", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),getName(params[0]));
		SendClientMessagef(playerid, COLOR_TOMATO, "Игровой мастер #%d заблокировал Вас на 7 дней. Причина: 3 предупреждения", PI[playerid][pAdminNumber], params[1]);
		return 1;
	}
	return 1;
}
alias::report("rep");
alias:menu("mm", "mn", "mainmenu");
CMD:report(playerid) return ReportDialog(playerid);
CMD:menu(playerid) return ShowMainMenu(playerid);
cmd:info(playerid) return ShowDialogResurs(playerid);

CMD:hi(playerid,params[]) 
{
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /hi [ID игрока]");
	if(!IsPlayerConnected(params[0]))return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(playerid == params[0]) return 1;
	if(!ProxDetectorS(3.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");
	return SendRequestForPlayer(playerid, params[0], 4);
}
CMD:s(playerid, params[]) // +
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /s [текст]");
    NotReklama(playerid, params[0]);
    global_str[0] = EOS; f(global_str, 150, "%s[%d] крикнул: %s",getName(playerid),playerid,params[0]);
	ProxDetector(50.0, playerid, global_str, -1, -1, -1, -1, -1);
	SetPlayerChatBubblef(playerid, -1, 20.0, 4000, "%s", params[0]);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"ON_LOOKERS","shout_01",1000.0,0,0,0,0,0,1);
	return 1;
}
CMD:me(playerid,params[]) // +
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /me [текст]");
    NotReklama(playerid, params[0]);
	global_str[0] = EOS, f(global_str, sizeof(global_str), "%s %s",getName(playerid), params[0]);
	ProxDetector(30.0, playerid, global_str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubblef(playerid, 0xFF99CCFF, 20.0, 4000, "%s %s", getName(playerid), params[0]);
	return 1;
}
CMD:todo(playerid, params[]) // +
{
    new text[40], text2[40];
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
    if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"/todo [Сообщение]*[Действие]");
	f(text2, sizeof(text2), "\"%s\", - сказал %s,{FF99FF} %s.",text, getName(playerid), text2);
    return ProxDetector(30.0, playerid, text2, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
}
CMD:do(playerid,params[]) // +
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /do [текст]");
    NotReklama(playerid, params[0]);
    format(global_str, 140, "%s (%s)",params[0], getName(playerid));
	ProxDetector(30.0, playerid, global_str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, params, 0xFF99CCFF, 20.0, 5000);
}
CMD:b(playerid,params[]) // +
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /b [OOC (nonRP) сообщение]");
    NotReklama(playerid, params[0]);
    format(global_str, 140, "(( %s[%d]: %s ))", getName(playerid),playerid,params[0]);
	ProxDetector(30.0, playerid, global_str, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA);
	return SetPlayerChatBubble(playerid, params, 0xAFAFAFAA, 35.0, 4000);
}
alias:b("n");
CMD:try(playerid,params[]) // +
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /try [текст]");
    NotReklama(playerid, params[0]);

	switch random(10) do
	{
		case 0..4: f(global_str, 150, "%s %s {26A65B}(удачно)", getName(playerid), params[0]);
    	case 5..9: f(global_str, 150, "%s %s {EF4836}(неудачно)", getName(playerid), params[0]);
	}

	ProxDetector(30.0, playerid, global_str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, params, 0xFF99CCFF, 20.0, 5000);
}
CMD:makegm(playerid, params[]) 
{
    if(CheckAdmin(playerid, 8)) return 1;
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /makegm [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[params[0]][pAdmin] >= PI[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, !"Чтобы изменить уровень данного игрового мастера обратитесь к основателю.");
	if(PI[playerid][pAdmin] < PI[params[0]][pAdmin]) return SCM(playerid, COLOR_GREY, !"Нельзя изменить уровень игрового мастера который выше Вас");
	SetPVarInt(playerid, "AdmID", params[0]);
	return ShowPlayerDialog(playerid, 8000, DIALOG_STYLE_LIST, "{ee3366}Выдача прав игрового мастера", "\
	Снять права игрового мастера\n\
	1. NGM\n\
	2. JRGM\n\
	3. GM\n\
	4. GM+\n\
	5. LGM\n\
	6. SGM\n\
	7. SGM+\n\
	8. DEV", "Далее", "Отмена");
}
CMD:addhouse(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	return ShowPlayerDialog(playerid,dialog_ADD_HOUSE,DIALOG_STYLE_MSGBOX, !"{ee3366}Добавление дома","{FFFFFF}Вы желаете добавить дом?","Да","Отмена");
}
CMD:tph(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	if(GetPVarInt(playerid, "addhouse") == 0) return SCM(playerid, COLOR_GREY, !"Вы не начали добавлять дом");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPVarFloat(playerid,"aEnterX",x);
	SetPVarFloat(playerid,"aEnterY",y);
	SetPVarFloat(playerid,"aEnterZ",z);
	return ShowPlayerDialog(playerid, dialog_ADD_HOUSE_1, DIALOG_STYLE_LIST, "{ee3366}Выберите интерьер", "2 этажа. Средний\n1 этаж. Сельский дом", "Выбрать", "Отмена");
}
CMD:ahelp(playerid) 
{
	if(PI[playerid][pAdmin] == 0) return 1;
    new dialog[123];
	format(dialog, sizeof(dialog), "1. NGM%s%s%s%s%s%s", (PI[playerid][pAdmin] >= 2) ? ("\n2. JRGM") : (""), (PI[playerid][pAdmin] >= 3) ? ("\n3. GM") : (""), (PI[playerid][pAdmin] >= 4) ? ("\n4. GM+") : (""), (PI[playerid][pAdmin] >= 5) ? ("\n5. LGM") : (""), (PI[playerid][pAdmin] >= 6) ? ("\n6. SGM") : (""), (PI[playerid][pAdmin] >= 7) ? ("\n7. SGM") : (""), (PI[playerid][pAdmin] > 8) ? ("\n8. DEV") : (""));
	return ShowPlayerDialog(playerid, dialog_ADMCOMMAND, DIALOG_STYLE_LIST, "{ee3366}Команды игрового мастера", dialog, "Выбрать", "Закрыть");
}
CMD:pay(playerid,params[]) 
{
	if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, !"Данную команду можно использовать со 2 уровня");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /pay [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя передать деньги самому себе");
    if(GetPVarInt(playerid,"Counting_pay") > gettime()) return SCM(playerid, COLOR_GREY, !"Команду можно использовать раз в 15 секунд");
    SetPVarInt(playerid,"Counting_pay",gettime() + 15);
	if(!ProxDetectorS(3.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Данный игрок от Вас");
	if(params[1] <= 0) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
	if(params[1] > 3000) return SCM(playerid, COLOR_GREY, !"Разрешено передавать не более 3000 рублей за один раз");
	if(GetPlayerMoneyID(playerid) < params[1]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
	GivePlayerMoneyLog(playerid,-params[1]);
	GivePlayerMoneyLog(params[0],params[1]);
	new str2[70],str1[70],pay[20],pay1[20];
	format(str2,sizeof(str2),"Передача денег %s[%d]",getName(params[0]),params[0]);
	format(str1,sizeof(str1),"Получено денег от %s[%d]",getName(playerid),playerid);
	format(pay,sizeof(pay),"-%dР",params[1]);
	format(pay1,sizeof(pay1),"+%dР",params[1]);
	cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str2), CEFSTR("fb4949"), CEFSTR(pay));
	cef_emit_event(params[0], "show-notify-no-img", CEFSTR(str1), CEFSTR("418055"), CEFSTR(pay1));
	return 1;
}
CMD:eject(playerid,params[]) 
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, !"Вы не за рулем");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /eject [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете выкинуть из машины самого себя");
    new car = GetPlayerVehicleID(playerid);
	new idcar = GetPlayerVehicleID(params[0]);
	if(!IsPlayerInVehicle(playerid,car)) return 1;
	if(car != idcar) return SCM(playerid, COLOR_GREY, !"Данный игрок не находиться в Вашей машине");
	RemovePlayerFromVehicleAC(params[0]);
	new str_1[144];
	format(str_1,sizeof(str_1),"%s был выброшен из автомобиля",getName(params[0]));
	SCM(playerid,0xFF9999FF,str_1);
	HidePlayerSpeedometer(params[0]);
	return SCM(params[0],0xFF9999FF,"Вас выбросили из автомобиля");
}
CMD:card(playerid,params[]) 
{
    if(PI[playerid][data_MEDCARD] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет медицинской карты, получить её можно в здании БЦРБ.");
	new str_3[256];
    if(sscanf(params, "u", params[0])) {
		format(str_3,sizeof(str_3),"ЦРБ птг. Батырево: \t\tДокумент №%d\nГражданин РФ\t\t\t{3377cc}%s\nАнализы\t\t\tПройдены\nФизическое состояние\tНормальное\nЗависимость\t\t\tНет", PI[playerid][data_MEDNUM], getName(playerid));
		return ShowPlayerDialog(playerid,0, DIALOG_STYLE_LIST, "{ee3366}Лицензии", str_3, "Закрыть", "");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /card [ид игрока]");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Игрок слишком далеко от Вас");
	return SendRequestForPlayer(playerid, params[0], 6);
}
CMD:lic(playerid,params[]) 
{
    if(sscanf(params, "u", params[0])) {
        new licb[102+1],dtext[202+1], licg[102+1];
		switch(PI[playerid][pDriveLicense]) {
			case 1: format(licb,sizeof(licb),"{FFFFFF}Водительские права: \t\t\t{FF6347}-");
			case 2: format(licb,sizeof(licb),"{FFFFFF}Водительские права: \t\t\t{24ff78}+");
		}
		switch(PI[playerid][pGunLicense]) {
			case 1: format(licg,sizeof(licg),"{FFFFFF}Лицензия на оружие: \t\t\t{FF6347}-");
			case 2: format(licg,sizeof(licg),"{FFFFFF}Лицензия на оружие: \t\t\t{24ff78}+");
		}
		format(dtext,sizeof(dtext),"Автошкола птг. Батырево: \tДокумент №%d\nГражданин РФ\t\t\t{3377cc}%s\n%s\n%s", PI[playerid][data_LICNUM], getName(playerid), licb, licg);
		return ShowPlayerDialog(playerid,0, DIALOG_STYLE_LIST, "{ee3366}Лицензии", dtext, "Закрыть", "");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /lic [ид игрока]");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Игрок слишком далеко от Вас");
	return SendRequestForPlayer(playerid, params[0], 7);
}
CMD:dice(playerid,params[]) 
{
    if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /dice [ID игрока] [сумма]");
    if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Нельзя использовать на самом себе");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[1] < 1000 || params[1] > 100000000) return SCM(playerid, COLOR_GREY, !"Сумма ставки должна быть от 1000 до 100000000 рублей");
	if(GetPlayerMoneyID(playerid) < params[1]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
    if(GetPlayerMoneyID(params[0]) < params[1]) return SCM(playerid, COLOR_GREY, !"У игрока недостаточно денег на руках");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
    if(!PlayerToPoint(100.0, playerid, 2330.7095,1766.8969,-13.9100)) return SCM(playerid, COLOR_GREY, !"Нужно находиться в казино");
	return SendRequestForPlayer(playerid, params[0], 8, params[1]);
}
CMD:pass(playerid,params[]) 
{
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /pass [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	return SendRequestForPlayer(playerid, params[0], 9);
}
CMD:skill(playerid,params[]) 
{
	new str_3[365];
    if(sscanf(params, "u", params[0])) {
		format(str_3,sizeof(str_3),"1. ТТ:\t\t\t%d %%\n2. Тайзер:\t%d %%\n3. Desert Eagle:\t\t%d %%\n4. Дробовик:\t\t\t%d %%\n5. MP5:\t\t\t%d %%\n6. AK-47:\t\t%d %%",PI[playerid][pSkillPistol],PI[playerid][pSkillSDPistol],PI[playerid][pSkillDeagle],PI[playerid][pSkillShotgun],PI[playerid][pSkillMP5],PI[playerid][data_AK47]);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "{ee3366}Навыки владения оружием", str_3, "Закрыть", "");
  		return SetPlayerChatBubble(playerid, "просматривает навыки владения оружием", 0xFF99CCFF, 20.0, 4000);
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	return SendRequestForPlayer(playerid, params[0], 10);
}
CMD:setspawn(playerid) // +
{
    return ShowPlayerDialog(playerid, dialog_SETSPAWN, DIALOG_STYLE_LIST, !"{ee3366}Выберете место появления", !"\
	1. База организации\n\
	2. Автомобильный / железнодорожный вокзал\n\
	3. Дом / квартира", !"Выбрать", !"Закрыть");
}
CMD:invite(playerid,params[]) 
{
	if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /invite [ID игрока]");

	SetPVarInt(playerid, "Invite", params[0]);
	
	mysql_string[0] = EOS, f(mysql_string, 110, "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e' AND bl_fraction = '%d'", getName(params[0]), PI[playerid][pMember]);
	mysql_tquery(mysql, mysql_string, "CheckBlackListInvite", "d", playerid);
	return 1;
}
callback: CheckBlackListInvite(playerid) 
{
	new id = GetPVarInt(playerid, "Invite");
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) 
	{
		SCM(playerid, COLOR_GREY, !"Вы не можете принять игрока из чёрного списка организации.");
		SCM(id, COLOR_GREY, !"Вы находитесь в чёрном списке организации");

		return DeletePVar(playerid, "Invite");
	}
	else 
	{
		if(id == playerid) return SCM(playerid, COLOR_GREY, !"Нельзя использовать на самом себе");
		if(!IsPlayerConnected(id))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
		if(!IsPlayerLogged{id})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
		if(PI[id][pMember] != 0) return  SCM(playerid, COLOR_GREY, !"Данный игрок состоит в организации");
		if(PI[id][data_WARN] > 0) return SCM(playerid, COLOR_GREY, !"У данного игрока есть предупреждения");
		if(PI[id][data_MILITARY] == 0 && PI[playerid][pMember] == 3) return SCM(playerid, COLOR_GREY, !"У игрока нет военного билета");

		new Float:x,Float:y,Float:z;
		GetPlayerPos(id,x,y,z);
		if(!PlayerToPoint(5.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");

		SetPVarInt(playerid, "to_player", id);
		new str1[144];
		format(str1,sizeof(str1),"{FFFFFF}- Отлично! Я думаю мы сработаемся {FF99CC}- сказал %s, взяв пакет с формой",getName(playerid));
		ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
		pCurrectMessage[playerid]++;
		pTimerMessage[playerid] = gettime() + 1;
	}
	return 1;
}
CMD:leave(playerid,params[]) 
{
    if(PI[playerid][data_VIP] < 1) return SCM(playerid, COLOR_GREY, !"Данная функция доступна только VIP игрокам");
	if(PI[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Вы не состоите в организации");
	if(PI[playerid][pLeader] != 0) return SCM(playerid, COLOR_GREY, !"Для снятия с должности лидера по собственному желанию обратитесь к следящим");
	ShowPlayerDialog(playerid, 7214, DIALOG_STYLE_MSGBOX, !"{ee3366}Увольнение", "Вы действительно хотите уволиться из организации по собственному желанию?\n{696969}Обратите внимание: информация о Вашем уходе будет видна в чате организации", "Да", "Нет");
	return 1;
}
CMD:uninvite(playerid,params[]) 
{
	if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params,"us[60]",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /uninvite [ID игрока] [причина]");
    if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Нельзя использовать на самом себе");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, !"Данный игрок не состоит в Вашей организации");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_GREY, !"Нельзя применить к лидеру");
	if(PI[playerid][pRang] == PI[params[0]][pRang]) return SCM(playerid, COLOR_GREY, !"Нельзя применить к человеку у которого такой-же ранг");
	SetPVarString(playerid, "uninvitereason", params[1]);
	SetPVarInt(playerid, "uninviteid", params[0]);
	static name[24];
	SetString(name, NameRang(params[0]));
	name = NameRang(params[0]);
	new str_3[365];
	format(str_3,sizeof(str_3),"Вы хотите уволить {3377cc}%s %s\n{FFFFFF}Причина увольнения: {3377cc}%s\n\n{696969}Обратите внимание: отменить это действие будет невозможно!", name, getName(params[0]), params[1]);
	return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_MSGBOX, !"{ee3366}Уволить игрока", str_3, "Да", "Нет");
}
CMD:setskin(playerid,params[]) 
{
	if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /setskin [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[params[0]][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок не состоит в Вашей организации");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, !"Данный игрок не состоит в Вашей организации");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_GREY, !"Нельзя применить к лидеру");
	SetPVarInt(playerid,"gPLAYER",params[0]);
	if(PI[playerid][pSex] == 1) 
	{
		switch(PI[playerid][pMember]) 
		{
			case 1: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t156\n2\t\t154\n3\t\t208\n4\t\t155\n5\t\t147\n6\t\t187", "Выбрать", "Отмена");
			case 2: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t179\n2\t\t262\n3\t\t253\n4\t\t283\n5\t\t167\n6\t\t277\n7\t\t278\n8\t\t279\n9\t\t188\n10\t\t222\n11\t\t255\n\t\t84", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t280\n2\t\t281\n3\t\t282\n4\t\t285\n5\t\t286\n6\t\t288\n6\t\t288\n7\t\t220\n8\t\t224\n8\t\t284\n9\t\t289", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t276\n2\t\t71\n3\t\t275\n4\t\t70", "Выбрать", "Отмена");
			case 5: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t8\n[5-7 ранг]\t\t17\n[Стрелковый состав 1-7 ранг]\t\t28\n[8-9 ранг]\t\t126\n[10 ранг]\t\t117", "Выбрать", "Отмена");
			case 6: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t115\n[5-7 ранг]\t\t116\n[Стрелковый состав 1-7 ранг]\t\t114\n[8-9 ранг]\t\t111\n[10 ранг]\t\t236", "Выбрать", "Отмена");
			case 7: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t123\n[5-7 ранг]\t\t122\n[Стрелковый состав 1-7 ранг]\t\t109\n[8-9 ранг]\t\t108\n[10 ранг]\t\t118", "Выбрать", "Отмена");
			case 8: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t15\n2\t\t17\n3\t\t23", "Выбрать", "Отмена");
		}
	}
	if(PI[playerid][pSex] == 2) 
	{
		switch(PI[playerid][pMember]) 
		{
			case 1: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t216", "Выбрать", "Отмена");
			case 2: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t191", "Выбрать", "Отмена");
			case 3:ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t141", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t194", "Выбрать", "Отмена");
			case 5: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 6: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 7: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 8: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t12", "Выбрать", "Отмена");
		}
	}
	return 1;
}
stock open_gov(playerid) 
{
	new dialog[712];
	format(dialog,sizeof(dialog),
 	"{0f0085}1. Запланировать за 30 минут\n\
	{0f0085}2. Запланировать за 15 минут\n\
	{0f0085}3. Запланировать за 5 минут\n\
 	{0f0085}4. Начать собеседование/призыв\n\
	{0f0085}5. Продолжить собеседование/призыв\n\
	{0f0085}6. Закончить собеседование/призыв\n\
	{0f0085}7. Отменить собеседование/призыв");
	return ShowPlayerDialog(playerid, 7515, DIALOG_STYLE_LIST, "{ff0000}Меню Государственной волны", dialog, "Выбрать", "Отмена");
}
stock open_govvh(playerid) {
	new dialog[712];
	format(dialog,sizeof(dialog),
 	"{0f0085}1. Запланировать за 30 минут\n\
	{0f0085}2. Запланировать за 15 минут\n\
	{0f0085}3. Запланировать за 5 минут\n\
 	{0f0085}4. Начать собеседование/призыв\n\
	{0f0085}5. Продолжить призыв\n\
	{0f0085}6. Закончить призыв\n\
	{0f0085}7. Отменить призыв");
	return ShowPlayerDialog(playerid, 7788, DIALOG_STYLE_LIST, "{ff0000}Меню Государственной волны", dialog, "Выбрать", "Отмена");
}
cmd:gov(playerid) 
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(PI[playerid][pMember] == 1) open_gov(playerid);
    if(PI[playerid][pMember] == 2) open_govvh(playerid);
    if(PI[playerid][pMember] == 3) open_gov(playerid);
    if(PI[playerid][pMember] == 4) open_gov(playerid);
    return 1;
}

CMD:dd(playerid,params[])
{
	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7 || PI[playerid][pMember] == 0) return  SCM(playerid, COLOR_GREY, !"Вы не состоите во организации");
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params,"s[32]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /dd [текст]");
    NotReklama(playerid, params[0]);
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
    SendDepMessagef(0xFF8282FF, "(( [D | %s] %s %s[%d]: %s ))", PI[playerid][pGroupName],name,getName(playerid),playerid,params[0]);
    return 1;
}
CMD:r(playerid,params[])
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(PI[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /r [текст]");
	NotReklama(playerid, params[0]);
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	if(PI[playerid][data_GID] != -1) {
		SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R | %s] %s %s[%d]: %s", PI[playerid][pGroupName],name,getName(playerid),playerid,params[0]);
 	}
	else {
	    SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R] %s %s[%d]: %s",name,getName(playerid),playerid,params[0]);
	}
	SetPlayerChatBubble(playerid, !"сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
CMD:rr(playerid,params[])
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(PI[playerid][pMember] == 0) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /rr [текст]");
	NotReklama(playerid, params[0]);
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	if(PI[playerid][data_GID] != -1) {
		SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "(( [R | %s] %s %s[%d]: %s ))", PI[playerid][pGroupName],name,getName(playerid),playerid,params[0]);
 	}
	else {
	    SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "(( [R] %s %s[%d]: %s ))",name,getName(playerid),playerid,params[0]);
	}
	SetPlayerChatBubble(playerid, !"сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
CMD:d(playerid,params[]) 
{
	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7 || PI[playerid][pMember] == 0) return  SCM(playerid, COLOR_GREY, !"Вы не состоите во организации");
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
    if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /d [текст]");
    NotReklama(playerid, params[0]);
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	SendDepMessagef(0xFF8282FF, "[D | %s] %s %s[%d]: %s", PI[playerid][pGroupName],name,getName(playerid),playerid,params[0]);
	return SetPlayerChatBubble(playerid, !"сообщил нечто в департамент", 0xcd7a7aFF, 20.0, 4000);
}
callback: LoadMembers(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
	new string[1048*2],all;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(!IsPlayerConnected(i)) continue;
        if(PI[i][pMember] == PI[playerid][pMember]) {
            if(PI[i][pMember] == PI[playerid][pMember]) all++;
            if(PI[i][data_AFK] > 2) format(string,sizeof(string),"%s%s[%d]{FF6347}[AFK](0/3){FFFFFF}\t%d\t%s\t%d\n",string,PI[i][pName],i,PI[i][pRang], PI[i][pGroupName],PI[i][data_NUMBER]);
			else if(PI[i][TWARN] != 0) {
				if(PI[i][data_AFK] > 2) format(string,sizeof(string),"%s%s[%d]{FF6347}[AFK]{FF8000}(%d/3){FFFFFF}\t%d\t%s\t%d\n",string,PI[i][pName],i,PI[i][TWARN],PI[i][pRang], PI[i][pGroupName],PI[i][data_NUMBER]);
				else format(string,sizeof(string),"%s%s[%d]{FF8000}(%d/3){FFFFFF}\t%d\t%s\t%d\n",string,PI[i][pName],i,PI[i][TWARN],PI[i][pRang], PI[i][pGroupName],PI[i][data_NUMBER]);
			}
			else format(string,sizeof(string),"%s%s[%d]{33d267}(0/3){FFFFFF}\t%d\t%s\t%d\n",string,PI[i][pName],i,PI[i][pRang], PI[i][pGroupName],PI[i][data_NUMBER]);
        }
    }
    SCMf(playerid, 0x3366ccFF, "Участников организации: %d чел, онлайн: %d чел", rows, all);
	new str_1[1048*2];
	format(str_1,sizeof(str_1),"Имя и выговоры\tРанг\tГруппа\tТелефон\n%s",string);
    ShowPlayerDialog(playerid,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Члены организации онлайн", str_1, "Закрыть", "");
	return 1;
}
CMD:members(playerid) 
{
    if(PI[playerid][pMember] == 0) return  SCM(playerid, COLOR_GREY, !"Вы не состоите во организации");
	new str_q[144];
	mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `member` = '%d'",PI[playerid][pMember]);
	mysql_function_query(mysql, str_q, true, "LoadMembers", "d", playerid);
	return 1;
}
CMD:allmembers(playerid) 
{
    if(PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	new str_q[144];
	mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `member` = '%d'",PI[playerid][pMember]);
	mysql_function_query(mysql, str_q, true, "LoadAllMembers", "d", playerid);
	return 1;
}
CMD:addkv(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	ShowPlayerDialog(playerid,dialog_ADD_KV,DIALOG_STYLE_MSGBOX, !"{ee3366}Добавление подъезда","Вы желаете добавить подъезд?","Да","Отмена");
	return 1;
}
CMD:tpc(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	if(GetPVarInt(playerid, "addkv") == 0 && GetPVarInt(playerid, "addhouse") == 0) return SCM(playerid, COLOR_GREY, !"Вы не начали добавлять подъезд");
	new Float:x, Float:y, Float:z, Float:a;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
  	SetPVarFloat(playerid,"aCarX",x);
  	SetPVarFloat(playerid,"aCarY",y);
  	SetPVarFloat(playerid,"aCarZ",z);
  	SetPVarFloat(playerid,"aCarAngle",a);
  	SCM(playerid, COLOR_YELLOW, !"Встаньте на место, где будет находиться подъезд и введите (/tpkv) или же если создаёте дом (/tph)");
	return 1;
}
cmd:free(playerid,params[]) 
{
    if(PI[playerid][pMember] == 1 && PI[playerid][pRang] == 4) 
	{
    	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /free [ID игрока]");
    	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
		if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Вы находитесь далеко от данного игрока");
		if(PI[params[0]][pJail] == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок не находится в тюрьме");
		switch(PI[params[0]][pJailTime]) {
			case 0..600: SetPVarInt(params[0],"free_money",1000);
			case 601..1200: SetPVarInt(params[0],"free_money",2500);
			case 1201..1800: SetPVarInt(params[0],"free_money",5000);
			case 1801..3600: SetPVarInt(params[0],"free_money",10000);
		}
		SendRequestForPlayer(playerid, params[0], 12, GetPVarInt(params[0],"free_money"));
    }
    else SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:licsell(playerid,params[]) 
{
    if(PI[playerid][pMember] == 1 && PI[playerid][pRang] == 3) 
	{
		if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /licsell [ID игрока] [1 - водительские права, 2 - лицензия на оружие]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
		if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
		if(params[1] < 1 || params[1] > 2) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /licsell [ID игрока] [1 - водительские права, 2 - лицензия на оружие]");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
		if(params[1] == 1) 
		{
			if(PI[params[0]][pDriveLicense] == 1) return SCM(playerid, COLOR_GREY, !"У игрока уже есть водительские права");
			SendRequestForPlayer(playerid, params[0], 14);
		}
		else 
		{
		    if(PI[params[0]][pGunLicense] == 1) return SCM(playerid, COLOR_GREY, !"У игрока уже есть лицензия на оружие");
		    SendRequestForPlayer(playerid, params[0], 13);
		}
	}
	else SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:tpkv(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	if(GetPVarInt(playerid, "addkv") == 0) return SCM(playerid, COLOR_GREY, !"Вы не начали добавлять подъезд");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPVarFloat(playerid,"aEnterX",x);
	SetPVarFloat(playerid,"aEnterY",y);
	SetPVarFloat(playerid,"aEnterZ",z);
	return addkv(playerid);
}
CMD:home(playerid) 
{
    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет дома или квартиры");
	if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) ShowPlayerDialog(playerid, dialog_HOUSE, DIALOG_STYLE_LIST, "{ee3366}Дом", "Информация\nОткрыть/закрыть дом\nПродать дом", "Выбрать", "Отмена");
	else ShowPlayerDialog(playerid, dialog_KV, DIALOG_STYLE_LIST, "{ee3366}Квартира", "Информация\nОткрыть/закрыть квартиру\nПродать квартиру", "Выбрать", "Отмена");
	return 1;
}
CMD:buykv(playerid) 
{
	if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
	for(new k = 0; k < TotalKV; k++)
    {
        new kv = GetPlayerVirtualWorld(playerid)-1;
        if(kv == -1) break;
        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]))
        {
            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SCM(playerid, COLOR_GREY, !"У Вас уже есть недвижимость");
            if(KV_DATA[kv][data_OWNED][k] == 1) return SCM(playerid, COLOR_GREY, !"У данной квартиры уже есть владелец");
			if(GetPlayerMoneyID(playerid) < KV_DATA[kv][data_PRICE][k]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на руках");
			PI[playerid][data_PADIK] = kv;
			PI[playerid][data_KV] = k;
            KV_DATA[kv][data_OWNED][k] = 1;
            KV_DATA[kv][data_DAY][k] = 3;
            switch(k)
			{
				case 0: strmid(KV_DATA[kv][data_OWNER_1], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], getName(playerid), 0, strlen(getName(playerid)), MAX_PLAYER_NAME);
			}
            GivePlayerMoneyLog(playerid,-KV_DATA[kv][data_PRICE][k]);
			SCM(playerid, COLOR_YELLOW, !"Поздравляем! Вы купили дом");
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка жилья", !"{FFFFFF}Для управления недвижимостью используйте команду /home\nОплата дома производится в банке (/gps 1 5). Не забудьте\nвовремя платить за него, в противном случае он будет опечатан!", "Закрыть", "");
            SaveKVData(kv);
			UpdateKVData(kv, k);
           	return true;
        }
    }
    return true;
}
CMD:healme(playerid,params[]) 
{
    if(PI[playerid][pHealPack] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет медицинской аптечки");
	if(GetPVarInt(playerid,"kdhealcapt") > gettime()) return SCMf(playerid, COLOR_GREY, !"Вы получили урон в бою, использовать аптечку можно будет через %d сек", GetPVarInt(playerid,"kdhealcapt")-gettime());
	if(GetPVarInt(playerid,"healmekd") > gettime()) return SCM(playerid, COLOR_GREY, !"Команду можно использовать раз в 3 секунд");
	new Float:hp,string[145];
	GetPlayerHealth(playerid, hp);
	if(PI[playerid][data_VIP] == 0) {
		if(hp >= 100) return SCM(playerid, COLOR_GREY, !"Вы не нуждаетесь в лечении");
	}
	else if(hp >= 176) return SCM(playerid, COLOR_GREY, !"Вы не нуждаетесь в лечении");
	if(hp+30 > 176) SetPlayerHealthAC(playerid, 176);
	else SetPlayerHealthAC(playerid, hp+30);
	SetPVarInt(playerid,"healmekd",gettime() + 1);
	cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Использована аптечка"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"PED","GUM_EAT",4.0,0,0,0,0,0,1);
    PI[playerid][pHealPack] -= 1;
	SetPlayerChatBubble(playerid, "+30 HP", 0x008000FF, 20.0, 4000);
    format(string, sizeof(string), "%s использовал аптечку",getName(playerid));
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, "использовал аптечку", 0xFF99CCFF, 20.0, 4000);
}
CMD:mask(playerid,params[]) 
{
    if(PI[playerid][data_MASK] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет маски");
    if(PI[playerid][data_MASK_M] != 0) return SCM(playerid, COLOR_GREY, !"Вы уже надели маску");
	if(GangWarStatus != 0) 
	{
		if(PI[playerid][pMember] != Command[0] && PI[playerid][pMember] != Command[1]) 
		{
			return SCM(playerid, COLOR_GREY, !"В момент захвата территории нельзя использовать маску");
		}
	}
	new string[145];
    PI[playerid][data_MASK]--;
    PI[playerid][data_MASK_M] = 1;
	foreach(new i:Player) SetPlayerColor(playerid, 0x33333300);
    format(string, sizeof(string), "%s натянул маску на лицо",getName(playerid));
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubble(playerid, "натянул маску на лицо", 0xFF99CCFF, 20.0, 4000);
	SCM(playerid, COLOR_BLACK, !"Вы надели маску. Теперь Вас не будет видно на мини-карте");
	SCM(playerid, COLOR_BLACK, !"Чтобы снять маску используйте {ff6633}/maskoff");
	cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Маска надета"));
	if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid), ApplyAnimation(playerid, !"SHOP", !"ROB_SHIFTY", 4.1, 0, 0, 0, 0, 0, 1);
	MaskEnabled(playerid);
	return 1;
}
CMD:maskoff(playerid,params[]) 
{
    if(PI[playerid][data_MASK_M] == 0) return SCM(playerid, COLOR_GREY, !"На Вас нет маски");
	new string[145];
   	SetPlayerColorEx(playerid);
   	PI[playerid][data_MASK_M] = 0;
    format(string, sizeof(string), "%s снял маску",getName(playerid));
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubble(playerid, "снял маску", 0xFF99CCFF, 20.0, 4000);
	MaskDisable(playerid);
	return cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Маска снята"));
}
CMD:heal(playerid,params[]) 
{
    if(PI[playerid][pMember] != 4) return SCM(playerid,  COLOR_GREY, !"Данная команда для Вас недоступна");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /heal [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Вы не можете вылечить себя");
	if(PI[params[0]][pMoney] == 750) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	return SendRequestForPlayer(playerid, params[0], 17);
}
CMD:call(playerid,params[]) 
{
	if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет SIM карты");
    if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /call [номер]");
    if(PI[playerid][data_NUMBER] == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя позвонить самому себе");
    if(params[0] == 102) {
        if(PI[playerid][data_911_1] > 0) return SCM(playerid, COLOR_GREY, !"Нельзя вызывать полицию слишком часто");
        new string[144];
	    format(string, sizeof(string), "%s достал bPhone XX из кармана",getName(playerid));
		ProxDetector(30.0, playerid, string, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
		return ShowPlayerDialog(playerid, 9111, DIALOG_STYLE_INPUT, "{ee3366}Вызов полиции", "Вы позвонили на гарячую линию вызова полции.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
    }
    if(params[0] == 103) {
        if(PI[playerid][data_911_2] > 0) return SCM(playerid, COLOR_GREY, !"Нельзя вызывать скорую помощь слишком часто");
        new string[144];
	    format(string, sizeof(string), "%s достал bPhone XX из кармана",getName(playerid));
		ProxDetector(30.0, playerid, string, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
		return ShowPlayerDialog(playerid, 9112, DIALOG_STYLE_INPUT, "{ee3366}Вызов скорой помощи", "Вы позвонили на гарячую линию вызова скорой помощи.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
    }
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_NUMBER] == params[0]) {
   			if(PI[playerid][pNumberMoney] <= 0) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на телефоне");
      		if(PI[i][data_CALL] != -1) return SCM(playerid, COLOR_GREY, !"Данный игрок разговаривает по телефону");
			PI[playerid][data_CALL] = i;
			new stringtext[144];
	    	format(stringtext, sizeof(stringtext), "%s достал bPhone XX из кармана",getName(playerid));
			ProxDetector(30.0, playerid, stringtext, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
			SCMf(i, 0x42d272FF, "[Входящий вызов] т. %d. Ожидание ответа...", PI[playerid][data_NUMBER]);
			SCM(i, -1, !"Введите {42d272}/p {FFFFFF}чтобы ответить или {FF6347}/h {FFFFFF}чтобы отклонить вызов");
      		PlayerPlaySound(i, 20600, 0.0, 0.0, 0.0);
      		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
      		SCM(playerid,0x42d272FF, !"[Исходящий вызов] Ожидание ответа абонента...");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
  		}
	}
	return SCM(playerid, COLOR_GREY, !"Аппарат абонента выключен или находится вне зоны действия сети");
}
CMD:p(playerid) 
{
	if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SCM(playerid, COLOR_GREY, !"В Вашем телефоне нет SIM-карты");
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    if(PI[i][data_CALL] == playerid) {
    		PI[playerid][data_CALL] = i;
    		SetPVarInt(i,"call_m", 1);
			SCMf(playerid, 0xFF99CCFF, "Вы приняли вызов от %s", PI[i][pName]);
			SCMf(playerid, 0xFF99CCFF, "%s принял Ваш вызов", getName(playerid));
			SendAdminsMessagef(COLOR_YELLOW, "[CALL] %s[%d] > %s[%d]: {42d272}звонок начался", PI[i][pName], i, getName(playerid), playerid);
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
		}
	}
	return SCM(playerid, COLOR_GREY, !"У Вас нет входящих вызовов");
}
CMD:h(playerid) 
{
	if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SCM(playerid, COLOR_GREY, !"В Вашем телефоне нет SIM-карты");
	if(PI[playerid][data_CALL] == -1) return SCM(playerid, COLOR_GREY, !"В данный момент Вы не разговариваете по телефону");
	new id = PI[playerid][data_CALL];
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	if(PI[id][data_CALL] == playerid) {
    	if(!IsPlayerInAnyVehicle(id)) SetPlayerSpecialAction(id, SPECIAL_ACTION_STOPUSECELLPHONE);
 	}
	SCM(playerid, COLOR_GREY, !"Вы завершили звонок");
	SCMf(id, COLOR_GREY, "%s завершил звонок", PI[id][pName]);
	SendAdminsMessagef(COLOR_YELLOW, "[CALL] %s[%d] > %s[%d]: {FF6347}звонок завершился", PI[id][pName], id, getName(playerid), playerid);
	PI[id][data_CALL] = -1;
 	PI[playerid][data_CALL] = -1;
	SetPVarInt(id,"call_m",0);
	return SetPVarInt(playerid,"call_m",0);
}
CMD:sms(playerid,params[]) 
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(sscanf(params, "ds[84]", params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /sms [номер] [текст]");
    if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет SIM карты");
    if(PI[playerid][data_NUMBER] == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя отправить SMS самому себе");
    if(PI[playerid][data_VIP] < 1) if(PI[playerid][pNumberMoney] != 100) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на счёт телефона");
    else if(PI[playerid][pNumberMoney] != 50) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно денег на счёт телефона");
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_NUMBER] == params[0]) {
   			if(PI[playerid][pNumberMoney] <= 0) return SCM(playerid, COLOR_GREY, !"На Вашем счете недостаточно средств");
			SCMf(i, COLOR_YELLOW, "[SMS | т. %d] %s: %s",PI[playerid][data_NUMBER], getName(playerid), params[1]);
			SCMf(playerid, COLOR_YELLOW, "[SMS | т. %d] %s: %s",params[0], PI[i][pName],params[1]);
			SendAdminsMessagef(COLOR_YELLOW, "[SMS] %s[%d] > %s[%d]: %s", getName(playerid),playerid, PI[i][pName],i, params[1]);
			PI[playerid][pNumberMoney]--;
			return PlayerPlaySound(i, 40407, 0.0, 0.0, 0.0);
  		}
	}
	return SCM(playerid, COLOR_GREY, !"Аппарат абонента выключен или находится вне зоны действия сети");
}
CMD:gps(playerid) return ShowGPS(playerid);
CMD:unmask(playerid, params[])
{
    new Float: X, Float: Y, Float: Z; GetPlayerPos(playerid, X, Y, Z);
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SCM(playerid, COLOR_GREY, !"Игрок далеко от вас");
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /unmask [ID игрока]");
   	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок слишком далеко от Вас");
	PI[params[0]][data_MASK_M] = 0;
	SCM(params[0], COLOR_BLUE, !"Полицейский снял с вас маску!");
	SCMf(playerid, COLOR_BLUE, "Вы сняли маску игроку %s",getName(params[0]));
	cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Маска снята"));
    return 1;
}
CMD:su(playerid, params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "us[50]", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /su [ID игрока] [причина]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Нельзя выдать розыск самому себе");
	if(PI[playerid][pMember] == PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, !"Вы не можете выдать розыск сотруднику Полиции");
	if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Ваш ранг слишком мал для использования данной команды");
	if(PI[params[0]][pWanted] == 6) return SCM(playerid, COLOR_GREY, !"У игрока максимальный уровень розыска");
	PI[params[0]][pWanted]++;
	if(PI[params[0]][pPassiveMode] == 1)
	{
		SCM(params[0], COLOR_HINT, !"[Пасивный режим]: {FFFFFF}Пасивный режим был выключен! Причина: арест");
		PassiveModeOff(params[0]);
	}
	SetPlayerWantedLevel(params[0],PI[params[0]][pWanted]);
	if(PI[params[0]][pRespect] > 0) PI[params[0]][pRespect]--;
	SendFractionMessagef(PI[playerid][pMember], COLOR_YELLOW, "%s %s[%d] объявил %s[%d] в розыск [%d|6]. Причина: %s.", rang_police[PI[playerid][pRang]-1][frName],getName(playerid),playerid, getName(params[0]),params[0],PI[params[0]][pWanted], params[1]);
	return SCMf(params[0],0x93baffFF, "%s %s[%d] объявил Вас в розыск [%d|6]. Причина: %s", rang_police[PI[playerid][pRang]-1][frName],getName(playerid),playerid,PI[params[0]][pWanted], params[1]);
}
CMD:search(playerid, params[])
{
    new Float: X, Float: Y, Float: Z; GetPlayerPos(playerid, X, Y, Z);
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SCM(playerid, COLOR_GREY, !"Игрок далеко от вас");
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
   	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете обыскать самого себя");
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /chest [ID игрока]");
    SetPlayerChatBubble(playerid, "Обыскивает игрока!", 0xFF99CCFF, 20.0, 4000);
    new str[145];
   	format(str,sizeof(str),"%s надел резиновые перчатки резким движением руки",getName(playerid));
 	ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
 	format(str,sizeof(str),"Резиновые перчатки на руках (%s)",getName(playerid));
 	ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
	format(str,sizeof(str),"Процесс (%s)",getName(playerid));
 	ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
 	SCMf(playerid, -1, "___________________________________________", PI[params[0]]);
	SCMf(playerid, -1, "Вы успешно обыскали гражданина %s:", getName(params[0]));
	SCMf(playerid, -1, "Патрон в кармане: {ff0000}%d{08008d}", PI[params[0]][data_PATR]);
	SCMf(playerid, -1, "Нарктоиков в кармане: {ff0000}%d{08008d}", PI[params[0]][data_DRUGS]);
	SCMf(playerid, -1, "Металла: {ff0000}%d",PI[params[0]][data_MET]);
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
	SCMf(playerid, -1, "___________________________________________", PI[params[0]]);
	cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Обыск игрока!"));
   	format(str,sizeof(str),"Полицейский %s произвёл обыск у гражданина %s",getName(playerid),getName(params[0]));
	cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Обыск игрока!"));
    return 1;
}
CMD:remove(playerid, params[])
{
    new Float: X, Float: Y, Float: Z; GetPlayerPos(playerid, X, Y, Z);
    if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SCM(playerid, COLOR_GREY, !"Игрок далеко от вас");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете изъять у самого себя");
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /remove [ID игрока]");
    PI[params[0]][data_PATR] = 0;
    PI[params[0]][data_DRUGS] = 0;
    PI[params[0]][data_AMMO] = 0;
    return 1;
}
CMD:aclear(playerid,params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /aclear [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[params[0]][pWanted] == 0) return SCM(playerid, COLOR_GREY, !"У игрока нет розыска");
	PI[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][pWanted]);
	return SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s обнулил розыск %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),getName(params[0]));
}
CMD:clear(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(PI[playerid][pRang] < 8) return SCM(playerid, COLOR_GREY, !"Снять розыск игрока можно с 8 ранга");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /clear [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[params[0]][pWanted] == 0) return SCM(playerid, COLOR_GREY, !"У игрока нет розыска");
	if(!PlayerToPoint(3.0, playerid, 1456.4865,1627.6499,697.1956)) return SCM(playerid, COLOR_GREY, !"Чтобы снять розыск игрока Вы и игрока должны находится в ДЧ");
	if(!PlayerToPoint(3.0, params[0], 1456.4865,1627.6499,697.1956)) return SCM(playerid, COLOR_GREY, !"Чтобы снять розыск игрока Вы и игрока должны находится в ДЧ");
	PI[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][pWanted]);
	SendFractionMessagef(PI[playerid][pMember], COLOR_YELLOW, "%s закрыл уголовное дело %s",getName(playerid),getName(params[0]));
	return SCMf(params[0],0x0099ccFF, "%s закрыл ваше уголовное дело",getName(playerid));
}
CMD:cuff(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /cuff [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Эта команда доступна для 2+ звания.");
	if(PI[playerid][pMember] == PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Вы не можете надеть наручиники на сотрудника Полиции");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");
    if(GetPVarInt(params[0],"PlayerCuffed") == 1) return SCM(playerid, COLOR_GREY, !"Данный игрок уже в наручниках");
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0],5,19418,6,0.020000,0.049999,-0.015000,-11.899997,-13.999941,-103.800086,1.110999,1.042000,1.934998);
	SetPVarInt(params[0],"PlayerCuffed",1);
	FreezePlayer(params[0]);
	if(PI[params[0]][pPassiveMode] == 1)
	{
		SCM(params[0], COLOR_LIGHTBLUE, "[Пасивный режим]: {FFFFFF}Пасивный режим был выключен! Причина: арест");
		PassiveModeOff(params[0]);
	}
	SCMf(playerid, 0x4671acff, "Вы надели наручники на %s", getName(playerid));
	format(str,sizeof(str), "%s надел наручники на %s",getName(playerid),getName(params[0]));
 	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:uncuff(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /uncuff [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Ваш ранг слишком мал для использования данной команды");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");
    if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок без наручников");
	SetPlayerSpecialAction(params[0], 0);
	RemovePlayerAttachedObject(params[0], 5);
	DeletePVar(params[0],"PlayerCuffed");
	UnfreezePlayer(params[0]);
	new str[145];
	format(str,sizeof(str),"%s снял наручники с %s",getName(playerid),getName(params[0]));
 	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:incar(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /incar [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Ваш ранг слишком мал для использования данной команды");
    if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SCM(playerid, COLOR_GREY, !"Игрок должен находиться в наручниках");
	if(!IsPlayerInAnyVehicle(playerid)) return  SCM(playerid, COLOR_GREY, !"Вы должны находиться в автомобиле");
	new Float:x,Float:y,Float:z;
	new car = GetPlayerVehicleID(playerid);
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(5.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");
    if(car == police_car[0] || car == police_car[1] ||car == police_car[2] || car == police_car[3] || car == police_car[4] || car == police_car[5] || car == police_car[6] || car == police_car[7]) 
	{
	    if(GetFreeSeat(car) == -1) return SCM(playerid, COLOR_GREY, !"В машине нет места");
	   
	    new str[25+MAX_PLAYER_NAME*2];
	    
		PutPlayerInVehicleAC(params[0],car,GetFreeSeat(car));
     	FreezePlayer(params[0]);
	    format(str,sizeof(str),"%s затащил в автомобиль %s",getName(playerid),getName(params[0]));
	    ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
	}
	else SCM(playerid, COLOR_GREY, !"Данный транспорт не предназначен для перевозки преступников");
	return 1;
}
CMD:uncar(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /uncar [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Ваш ранг слишком мал для использования данной команды");
    if(!IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок должен находиться в транспорте");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(playerid,x,y,z);
	if(!PlayerToPoint(5.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Данный игрок слишком далеко от Вас");
 	UnfreezePlayer(params[0]);
 	SetPlayerPosAC(params[0],x+1.0,y,z);
  	format(str,sizeof(str),"%s вытащил из автомобиля %s",getName(playerid),getName(params[0]));
  	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:arrest(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /arrest [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[playerid][pRang] < 2 && PI[playerid][pMember] != 8) return SCM(playerid, COLOR_GREY, !"Ваш ранг слишком мал для использования данной команды");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок должен находиться в наручниках");
	if(PI[params[0]][pWanted] == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок не находиться в розыске");
	if(PlayerToPoint(20.0, playerid, -289.9960,-1548.9326,41.1223)) 
	{
		SendFractionMessagef(PI[playerid][pMember], COLOR_YELLOW, "[Всем постам] %s %s арестовал подозреваемого %s", rang_police[PI[playerid][pRang]-1][frName],getName(playerid),getName(params[0]));
		GivePlayerMoneyLog(playerid,3000*PI[params[0]][pWanted]);
		new pay[5];
		format(pay,sizeof(pay),"+%dР",3000*PI[params[0]][pWanted]);
		cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Премия за арест преступника"), CEFSTR("418055"), CEFSTR(pay));
		HidePlayerSpeedometer(params[0]);

	}
	else return SCM(playerid, COLOR_GREY, !"Нужно находиться возле здания Полиции");
    PI[params[0]][pJailTime] = 600*PI[params[0]][pWanted];
	UnfreezePlayer(params[0]);
	PI[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][pWanted]);
	PlayerSpawn(params[0]);
	SetPlayerSpecialAction(params[0], 0);
	RemovePlayerAttachedObject(params[0], 5);
	ResetWeaponAll(params[0]);
	return DeletePVar(params[0],"PlayerCuffed");
}
CMD:setmark(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /setmark [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(GetPlayerInterior(params[0]) != 0) return SCM(playerid, COLOR_GREY, !"Игрок находиться в интерьере");
	if(PI[params[0]][pWanted] == 0) return SCM(playerid, COLOR_GREY, !"Данный игрок не находиться в розыске");
	if(PI[playerid][data_SETMARK] != 0) return SCM(playerid, COLOR_GREY, !"Данную функцию можно использовать только один раз в минуту");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	SetPVarFloat(playerid, "gps_pos_x", x);
	SetPVarFloat(playerid, "gps_pos_y", y);
	SetPVarFloat(playerid, "gps_pos_z", z);
	DisablePlayerCheckpoint(playerid);
 	SetPlayerCheckpoint(playerid,x,y,z,5.0);
 	SCM(playerid, 0x6699cc3FF, !"Последнее место положение подозреваемого отмечено у Вас на мини-карте");
 	SCM(playerid, 0x6699cc3FF, !"Оно будет автоматически обновляться в течение 30 секунд");
	PI[playerid][data_SETMARK] = 60;
	return 1;
}
CMD:wanted(playerid) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	new str_3[712], bugfix;
	for(new i = 0; i < MAX_PLAYERS; i++) 
	{
 	    if(!IsPlayerConnected(playerid)) continue;
		if(PI[i][pWanted] != 0)
		{
		    bugfix = 1;
    		format(str_3,sizeof(str_3), "%s\n{FFFFFF}Дело №%d, имя: %s, уровень розыска: %d\n",str_3, i,PI[i][pName],PI[i][pWanted]);
    	}
    }
	if(bugfix == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "{ee3366}Преступники", "Область чиста, преступники не обнаружены!", "Закрыть", "");
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "{ee3366}Преступники", str_3, "Закрыть", "");
	return 1;
}
CMD:accept(playerid, params[]) 
{
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /accept [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(PI[playerid][pMember] == 3) {
        if(PI[params[0]][data_911_1] != 1) return SCM(playerid, COLOR_GREY, !"Игрок не вызывал полицию");
        SetPVarFloat(playerid, "gps_pos_x", x);
		SetPVarFloat(playerid, "gps_pos_y", y);
		SetPVarFloat(playerid, "gps_pos_z", z);
  		DisablePlayerCheckpoint(playerid);
  		SetPlayerCheckpoint(playerid,x, y, z,5.0);
  		PI[params[0]][data_911_1] = 0;
  		SCMf(params[0], 0x658bcdFF, "Сотрудник полиции %s[%d] принял Ваш вызов, не покидайте место вызова", getName(playerid), playerid);
	}
	else if(PI[playerid][pMember] == 4) {
	    if(PI[params[0]][data_911_2] != 1) return SCM(playerid, COLOR_GREY, !"Игрок не вызывал скорую помощь");
        SetPVarFloat(playerid, "gps_pos_x", x);
		SetPVarFloat(playerid, "gps_pos_y", y);
		SetPVarFloat(playerid, "gps_pos_z", z);
  		DisablePlayerCheckpoint(playerid);
  		SetPlayerCheckpoint(playerid,x, y, z,5.0);
  		PI[params[0]][data_911_2] = 0;
  		SCMf(params[0], 0x658bcdFF, "Сотрудник скорой помощи %s[%d] принял Ваш вызов, не покидайте место вызова", getName(playerid), playerid);
	}
	else SCM(playerid,COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:ginfo(playerid)
{
	if(!IsPlayerOPG(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не состоите в ОПГ");
	new str_q[144];
 	mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `gangzone` WHERE `gzid` != '101'");
 	mysql_function_query(mysql, str_q, true, "GzInfo", "i", playerid);
    return true;
}
CMD:setgz(playerid) 
{
    if(CheckAdmin(playerid, 5)) return 1;
	new gz = GetPlayerGangZone(playerid);
	if(gz_info[gz][gzid] == 101) return 1;
	if(gz_info[gz][gzid] == 0) return 1;
 	ShowPlayerDialog(playerid, dialog_SETGZ, DIALOG_STYLE_LIST, "{ee3366}Выберите ОПГ", "1. Скинхеды\n2. Гопота\n3. Кавказцы", "Далее", "Закрыть");
	return 1;
}
stock SaveGangZone(gzopg1, gz) 
{
	return mysql_tqueryf(mysql,"UPDATE `gangzone` SET `gzopg` = '%d' WHERE `gzid` = '%d'", gzopg1, gz_info[gz][gzid]);
}
CMD:makegun(playerid) 
{
    if(PI[playerid][pWeaponLock] > 0) return SCM(playerid, COLOR_GREY, !"У Вас блокировка оружия");
	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6|| PI[playerid][pMember] == 7) ShowPlayerDialog(playerid, dialog_MAKEGUN, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Выберите оружие", "ID и название\t\t\tКол-во металла\n1. Бейсбольная бита\t\t1\n2. ТТ \t\t5\n3. Тайзер\t\t3\n4. Desert Eagle\t\t\t6\n5. Дробовик\t8\n6. Обрез\t7\n7. Автоматический дробовик\t9\n8. MP40\t\t\t7\n9. AKC-74Y\t\t\t8\n10. AK-47\t9\n11. AK-104\t\t\t9\n12. Tec-9\t\t\t7\n13. Country Rifle\t\t\t10", "Далее", "Отмена");
	else SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:sp(playerid,params[]) 
{
    if(CheckAdmin(playerid)) return 1;
    if(sscanf(params,"u",params[0])) 
	{
		if(GetPVarInt(playerid, "SpecBool") != 1) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /sp [ID игрока]");
		TogglePlayerSpectating(playerid, false);
		return 1;
	}
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете следить за самим собой");
 	if(GetPVarInt(params[0], "SpecBool") == 1) return SCM(playerid, COLOR_GREY, !"Игрок находится в режиме наблюдения");
 	PI[playerid][pAdminStatus] = 0;
	foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, true);
	SendAdminsMessagef(COLOR_GREY, "[%s #%d] %s[%d] начал следить за %s[%d]", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(params[0]), params[0]);
 	SCM(playerid, COLOR_HINT, "[Подсказка] {FFFFFF}Покинуть слежку: {FFFF33}клавиша SHIFT или команда /sp");
	SCM(playerid, COLOR_HINT, "[Подсказка] {FFFFFF}Обновить слежку: {FFFF33}клавиша CTRL");
	SCM(playerid, COLOR_HINT, "[Подсказка] {FFFFFF}Статистика игрока: {FFFF33}клавиша CAPSLOCK");
	new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
	ShowAdmInfo(playerid, params[0]);
	SetPVarInt(playerid,"specid",params[0]);
	if(GetPVarInt(playerid,"SpecBool") == 0) 
	{
	    GetPlayerHealth(playerid,PI[playerid][pHealthPoints]);
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		SetPVarInt(playerid, "SpecBool", 1);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);
	}
	SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
	TogglePlayerSpectating(playerid, true);
	if(IsPlayerInAnyVehicle(params[0])) 
	{
		new carid = GetPlayerVehicleID(params[0]);
		PlayerSpectateVehicle(playerid, carid);
	}
	else PlayerSpectatePlayer(playerid,params[0]);
	return 1;
}
CMD:put(playerid,params[]) 
{
    if(PI[playerid][pMember] == 2) 
	{
	    if(PI[playerid][data_PUTPATR] == 0 && PI[playerid][data_PUTMET] == 0) return SCM(playerid, COLOR_GREY,"У Вас нет в руках ящика");
		for(new c = 0; c < MAX_VEHICLES; c++) 
		{
			new model = GetVehicleModel(c);
			new Float:x,Float:y,Float:z;
			GetCoordBootVehicle(c, x, y, z);
			if(PlayerToPoint(2.0, playerid, x, y, z)) 
			{
				if(model != 578) return SCM(playerid, COLOR_GREY, !"Это не специальный грузовик");
				if(PI[playerid][data_PUTPATR] != 0) 
				{
					if(CarInfo[c][cAmmo] >= 6000) return SCM(playerid, COLOR_GREY, !"В грузовике недостаточно места");
	                CarInfo[c][cAmmo] += 1000;
	                PI[playerid][data_PUTPATR] = 0;
	                cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы положили патроны"));
	                if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	                SetPlayerSpecialAction(playerid,0);
					new str_1[185];
					format(str_1,sizeof(str_1),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/6000 шт.\n{FFFFFF}Металл: {FF6600}%d/12000 шт.",CarInfo[c][cAmmo], CarInfo[c][cMetall]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_1);
	                return 1;
                }
                else if(PI[playerid][data_PUTMET] != 0) 
				{
					if(CarInfo[c][cMetall] >= 12000) return SCM(playerid, COLOR_GREY, !"В грузовике недостаточно места");
	                CarInfo[c][cMetall] += 1000;
	                PI[playerid][data_PUTMET] = 0;
	                cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы положили металл"));
	                if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	                SetPlayerSpecialAction(playerid,0);
					new str_1[185];
					format(str_1,sizeof(str_1),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/6000 шт.\n{FFFFFF}Металл: {FF6600}%d/12000 шт.",CarInfo[c][cAmmo], CarInfo[c][cMetall]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_1);
	                return 1;
                }
			}
		}
		PI[playerid][data_PUTPATR] = 0;
		PI[playerid][data_PUTMET] = 0;
		cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы бросили ящик"));
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		SetPlayerSpecialAction(playerid,0);
	}
	else SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:putammo(playerid,params[]) 
{
    if(PI[playerid][pMember] == 2) 
	{
	    new car = GetPlayerVehicleID(playerid);
	    new model = GetVehicleModel(car);
	    new materials = CarInfo[car][cAmmo];
		new metals = CarInfo[car][cMetall];
	    if(model != 578) return SCM(playerid, COLOR_GREY, !"Нужно находиться в специальном грузовике");
		if(PlayerToPoint(30.0, playerid, 1567.5477,1823.2529,15.6548) && PI[playerid][pMember] == 2) 
		{
	        if(car == army_car[0]) 
			{
	            if(CarInfo[car][cAmmo] != 0 || CarInfo[car][cMetall] != 0) 
				{
					army_wh[1] += materials;
					CarInfo[car][cAmmo] = 0;
					army_wh[0] += metals;
					CarInfo[car][cMetall] = 0;
					SendFractionMessagef(PI[playerid][pMember],0x69b867FF, "[R] %s[%d] разгрузил грузовик с боеприпасами. (+%d патронов)",getName(playerid),playerid, materials, metals);
					new str_3[185];
            		format(str_3,sizeof(str_3),"{3366FF}Склад армии\n{FFFFFF}Металла на складе: {FF6600}%d шт.\n{FFFFFF}Патронов на складе: {FF6600}%d шт.",army_wh[0],army_wh[1]);
       				UpdateDynamic3DTextLabelText(army_sklad_text, -1, str_3);
					new str_4[185];
					format(str_4,sizeof(str_4),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/6000 шт.\n{FFFFFF}Металл: {FF6600}%d/12000 шт.", CarInfo[car][cAmmo], CarInfo[car][cMetall]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_4);
					return 1;
				}
                SCM(playerid, COLOR_GREY, !"Грузовик пуст");
			}
			else SCM(playerid, COLOR_GREY, !"Нужно находиться в специальном грузовике");
		}
	}
	else SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	return 1;
}
CMD:lock(playerid) 
{
	for(new c = 0; c < MAX_VEHICLES; c++) 
	{
		if(c == PI[playerid][pLoadVehicleID]) 
		{
			new Float:x,Float:y,Float:z;
		    GetVehiclePos(c,x,y,z);
			if(!PlayerToPoint(5.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Вы находитесь далеко от личного транспорта");
			switch(CarInfo[c][cLock]) 
			{
				case 0: 
				{
				    //PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
					GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(c,engine,lights_text,alarm,true,bonnet,boot,objective);
					CarInfo[c][cLock] = 1;
					cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Личный транспорт закрыт"), CEFSTR("c13537"));
					if(IsPlayerInAnyVehicle(playerid)) cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(1));
				}
				case 1: 
				{
				    //PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
					GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(c,engine,lights_text,alarm,false,bonnet,boot,objective);
					CarInfo[c][cLock] = 0;
					cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Личный транспорт открыт"));
					if(IsPlayerInAnyVehicle(playerid)) cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(0));
				}
			}

		}
	}
	return 1;
}
CMD:gun(playerid,params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /gun [ID игрока] [оружие] [патроны]");
	if(PI[params[0]][pWeaponLock] > 0) return SCM(playerid, COLOR_GREY, !"У данного игрока блокировка оружия");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	else if(params[1] > 47 || params[1] < 1) return SCM(playerid, COLOR_GREY, !"Такого оружия не существует");
    else if(params[2] > 100000 || params[2] < 1) return SCM(playerid, COLOR_GREY, !"Используй: /gun [ID игрока] [оружие] [патроны > 1]");
	//if(params[1] == 35 || params[1] == 36 || params[1] == 37 || params[1] == 38 || params[1] == 39 || params[1] == 40) return SCM(playerid, COLOR_GREY, !"Данное оружие запретил Руководитель сервера.");
    GiveWeapon(params[0], params[1], params[2]);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал %s[%d] %s[%d] (%d пт)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),playerid,getName(params[0]), params[0], weapon_names[params[1]], params[1], params[2]);
	SCMf(params[0], -1, "Игровой мастер #%d выдал Вам %s (+%d пт)", PI[playerid][pAdminNumber], weapon_names[params[1]], params[2]);
    return 1;
}
CMD:m(playerid,params[]) 
{
    if(sscanf(params, "s[80]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /m [текст]");
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    new car = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(car) == 598 ||
	GetVehicleModel(car) == 551 ||
	GetVehicleModel(car) == 427 ||
	GetVehicleModel(car) == 443 ||
	GetVehicleModel(car) == 597 ||
	GetVehicleModel(car) == 427 ||
	GetVehicleModel(car) == 599 || GetVehicleModel(car) == 490) {
	    new string[145];
		format(string, sizeof(string), "[М] %s[%d]: %s",getName(playerid),playerid,params[0]);
		ProxDetector(50.0, playerid, string, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF);
	}
	else SCM(playerid, COLOR_GREY, !"Данный транспорт не оснащен мегафоном");
	return 1;
}
CMD:ss(playerid, params[]) 
{
    if(CheckAdmin(playerid, 4)) return 1;
	if(sscanf(params,"ud",params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /ss [ID игрока] [номер скина]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[1] > 297) return 1;
	PI[params[0]][pSkin] = params[1];
	SetPlayerSkinAC(params[0], PI[params[0]][pSkin]);
    SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал вечный скин игроку %s[%d] (ID %d)", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(params[0]), params[0], params[1]);
    return 1;
}
callback: CheckCarHealth() 
{
	for(new c; c < MAX_VEHICLES; c++) 
	{
	    new Float:health;
	    GetVehicleHealth(c,health);
	    if(health <= 350) 
		{
			SetVehicleHealth(c, 350);
			GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
			SetVehicleParamsEx(c,false,lights_text,alarm,doors_text,bonnet,boot,objective);
		}
	}
}
stock GetGZFrac(gznum){
	new cvet;
	switch(gz_info[gznum][gzopg]) {
	    case 0: cvet = 0xFF000055;
	    case 5: cvet = 0x663399BB;
	    case 6: cvet = 0x66CCFFBB;
		case 7: cvet = 0x339933AA;
	}
	return cvet;
}

stock UpdatePlayerDataIntName(const playerid, const field[], data, stroka) 
{
	mysql_tqueryf(mysql, "UPDATE `accounts` SET `%e` = '%i' WHERE `Name` = '%s' LIMIT 1", field, data, getName(playerid));
	printf("UpdatePlayerDataIntName UPDATE `accounts` SET %s = '%i' WHERE Name = '%s' LIMIT 1, stroka %d", field, data, getName(playerid), stroka);
}
stock UpdatePlayerDataInt(const playerid, const field[], data, stroka) 
{
	if(PI[playerid][pID] == -1) 
	{
		mysql_tqueryf(mysql, "UPDATE `accounts` SET `%s` = '%i' WHERE `Name` = '%s' LIMIT 1", field, data, getName(playerid));
		printf("UpdatePlayerDataIntName UPDATE `accounts` SET %s = '%i' WHERE Name = '%s' LIMIT 1, stroka %d", field, data, getName(playerid), stroka);
	}
	else 
	{
		mysql_tqueryf(mysql, "UPDATE `accounts` SET `%e` = '%i' WHERE `id` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
		printf("UpdatePlayerDataInt UPDATE `accounts` SET %s = '%i' WHERE id = '%i' LIMIT 1, stroka %d", field, data, PI[playerid][pID], stroka);
	}
}
stock UpdatePlayerDataIntNoLog(playerid, field[], data[]) 
{
	new strup[256];
	format(strup, sizeof(strup), "UPDATE `accounts` SET %s = '%i' WHERE id = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return mysql_function_query(mysql, strup, false, "", "");
}
stock MysqlUpdatePlayerStr(const playerid, const field[], data[]) 
{
	mysql_tqueryf(mysql, "UPDATE `accounts` SET `%s` = '%s' WHERE `id` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
CMD:twarn(playerid, params[]) 
{
    if(PI[playerid][pRang] < 9) return 1;
	if(sscanf(params,"us",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /twarn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Этот игрок не состоит в вашей организации");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете выдать выговор себе");
    if(PI[params[0]][pRang] == 10 && PI[playerid][pRang] == 9) return SCM(playerid, COLOR_GREY, !"Вы не можете выдать выговор лидеру");
	if(PI[params[0]][pRang] == PI[playerid][pRang]) return SCM(playerid, COLOR_GREY, !"Вы не можете выдать выговор человеку, чей ранг схож с вашим");
    static name[24],namepl[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	SetString(namepl, NameRang(params[0]));
	namepl = NameRang(params[0]);
	if(PI[params[0]][TWARN] < 3) 
	{
	    PI[params[0]][TWARN]++;
        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "%s %s[%d] выдал выговор %s %s[%d] [%d|3]. Причина: %s", name, getName(playerid), playerid, namepl, getName(params[0]), params[0], PI[params[0]][TWARN], params[1]);
	}
	if(PI[params[0]][TWARN] == 3) {
        PI[params[0]][TWARN] = 0;
	    new year,month,day;
		getdate(year, month, day);
		new str_q[365];
		mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`,`w_dal`,`w_reas`,`w_dalrank`) VALUES ('%d','%d','%s','Увольнение','%d','%d','%d','%d','%s','%s','%s')", PI[params[0]][pID], PI[params[0]][pMember], getName(params[0]), PI[params[0]][pRang], day, month, year, PI[playerid][pRang], params[1], name);
		mysql_function_query(mysql, str_q, false, "", "");
        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "%s %s[%d] выдал выговор %s %s[%d] [3|3]. Причина: %s", name, getName(playerid), playerid, namepl, getName(params[0]), params[0], params[1]);
        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "%s %s[%d] уволил %s %s[%d] из организации [3|3]", name, getName(playerid), playerid, namepl, getName(params[0]), params[0]);
        PI[params[0]][pMember] = 0;
		PI[params[0]][pRang] = 0;
		PI[params[0]][pLeader] = 0;
		ClearGroup(params[0]);
		SetPlayerSkinAC(params[0],PI[params[0]][pSkin]);
		SetPlayerColorEx(params[0]);
		PI[params[0]][data_MEDCARD] = 0;
		cef_emit_event(params[0], "hide_kill_list");
		cef_emit_event(params[0], "hide-capture");
	}
	return 1;
}
CMD:untwarn(playerid, params[]) 
{
    if(PI[playerid][pRang] < 9) return 1;
	if(sscanf(params,"us",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /untwarn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Этот игрок не состоит в вашей организации");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор себе");
    if(PI[params[0]][pRang] == 10 && PI[playerid][pRang] == 9) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор лидеру");
	if(PI[params[0]][pRang] == PI[playerid][pRang]) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор человеку, чей ранг схож с вашим");
    if(PI[params[0]][TWARN] == 0) return SCM(playerid, COLOR_GREY, !"Игрок не имеет выговоров");
    PI[params[0]][TWARN]--;
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
    static name2[24];
	SetString(name2, NameRang(params[0]));
	name2 = NameRang(params[0]);
    SendFractionMessagef(PI[playerid][pMember], 0x6699cc3FF, "%s %s[%d] снял выговор с %s %s[%d]", name, PI[playerid][pName], playerid, name2, getName(params[0]), params[0]);
    SCMf(params[0], 0x6699cc3FF, "%s %s[%d] снял с Вас выговор", name, getName(playerid),playerid);
	return 1;
}
CMD:offtwarn(playerid, params[]) 
{
    if(PI[playerid][pRang] < 9) return 1;
	if(sscanf(params, "s[144]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offtwarn [имя]");
	new name[MAX_PLAYER_NAME];
	format(name, sizeof(name), "%s", params[0]);
 	if(params[0] == getName(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор себе");
	new str_q[176];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'", name);
    mysql_function_query(mysql, str_q, true, "OffTwarn", "i", playerid);
	return 1;
}
callback: OffTwarn(playerid) {
    new rows, fields, temp[80];
    cache_get_data(rows, fields);
    if(rows) {
	    new names[24], twarn, members, ranks, leaders, groupid;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "twarn", temp), twarn = strval (temp);
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
		cache_get_field_content(0, "groupid", temp), groupid = strval (temp);
	    if(ranks == 10 && PI[playerid][pRang] == 9) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор лидеру");
		if(ranks == PI[playerid][pRang]) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор человеку, чей ранг схож с вашим");
		if(PI[playerid][pMember] != members) return SCM(playerid, COLOR_GREY, !"Игрок должен состоять в Вашей организации");
	    static name[24];
		SetString(name, NameRang(playerid));
		name = NameRang(playerid);
		if(twarn < 3) {
		    twarn++;
	        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "(( %s %s[%d] выдал выговор оффлайн %s [%d/3] ))", name, getName(playerid), playerid, names, twarn);
		}
		if(twarn == 3) {
		    twarn = 0;
	        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "(( %s %s[%d] уволил оффлайн %s [3/3] ))", name, getName(playerid), playerid, names);
	        members = 0;
			ranks = 0;
			leaders = 0;
  			groupid = 0;
  			new res[144];
		    format(res, sizeof(res), "Получение 3 выговоров");
  			SetPVarString(playerid, "text_wbook", res);
			new str_q[176];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE name = '%e'", names);
			mysql_function_query(mysql, str_q, true, "WbookOff", "is", playerid, names);
		}
		new str_q[200];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `rank` = '%d', `leader` = '%d', `twarn` = '%d', `groupid` = '%d' WHERE `Name` = '%s'",members, ranks, leaders, twarn, groupid, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	else SCM(playerid, COLOR_GREY, !"Игрок не найден");
	return 1;
}
stock SendFractionMessage(fraction,color, text[]) {
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][pMember] == fraction) SCM(i, color, text);
	}
}
CMD:offmute(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offmute [ник] [время] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /mute");
    }
	SetPVarString(playerid, "roffmute",param_reason);
	SetPVarInt(playerid, "offmutetime", param_time);
	new str_q[144];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffMute", "i", playerid);
	return 1;
}
callback: OffMute(playerid) 
{
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) 
	{
	    new names[24], mute, mutetime, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "mute", temp), mute = strval (temp);
		cache_get_field_content(0, "mutetime", temp), mutetime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffmute", reason, 32);
		time = GetPVarInt(playerid, "offmutetime");
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s заблокировал чат игроку %s(оффлайн) на %d минут. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, time, reason);
        mute = 1;
        mutetime += GetPVarInt(playerid, "offmutetime");
        new str_q[74 + 5 + 1 + MAX_PLAYER_NAME];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `mute` = '%d', `mutetime` = '%d' WHERE `Name` = '%s'", mute, mutetime, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offjail(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offjail [ник] [время] [причина]");
    foreach(Player, i) 
	{
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /jail");
    }
	SetPVarString(playerid, "roffjail",param_reason);
	SetPVarInt(playerid, "offjailtime", param_time);
	new str_q[144];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffJail", "i", playerid);
	return 1;
}
callback: OffJail(playerid)
{
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) 
	{
	    new names[24], demorgan, demorgan_time, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "demorgan", temp), demorgan = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), demorgan_time = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffjail", reason, 32);
		time = GetPVarInt(playerid, "offjailtime");
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s посадил в деморган игрока %s(оффлайн) на %d минут. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], names, time, reason);
        demorgan = 1;
        demorgan_time += GetPVarInt(playerid, "offjailtime");
        new str_q[256];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `demorgan` = '%d', `demorgan_time` = '%d', `hospital` = '0' WHERE `Name` = '%s'", demorgan, demorgan_time, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offvmute(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offvmute [ник] [время] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /vmute");
    }
	SetPVarString(playerid, "roffvmute",param_reason);
	SetPVarInt(playerid, "offvmutetime", param_time);
	new str_q[110];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffVMute", "i", playerid);
	return 1;
}
callback: OffVMute(playerid) {
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) 
	{
	    new names[24], vmute, vmutetime, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "vmute", temp), vmute = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), vmutetime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffvmute", reason, 32);
		time = GetPVarInt(playerid, "offvmutetime");
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s заблокировал голосовой чат игрока %s(оффлайн) на %d минут. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, time, reason);
        vmute = 1;
        vmutetime += GetPVarInt(playerid, "offvmutetime");
        new str_q[176];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `vmute` = '%d', `vmutetime` = '%d' WHERE `Name` = '%s'", vmute, vmutetime, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offunvmute(playerid, params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offunvmute [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /unvmute");
    }
	SetPVarString(playerid, "roffvmute",param_reason);
	new str_q[144];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffUnVMute", "i", playerid);
	return 1;
}
callback: OffUnVMute(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) {
	    new names[24], vmute, vmutetime, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "vmute", temp), vmute = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), vmutetime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		if(vmutetime == 0) return SCM(playerid, COLOR_GREY, !"Голосовой чат игрока не заблокирован");
		GetPVarString(playerid,"roffvmute", reason, 32);
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s разблокировал голосовой чат игрока %s(оффлайн). Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, reason);
        vmute = 0;
        vmutetime = 0;
        new str_q[185];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `vmute` = '%d', `vmutetime` = '%d' WHERE `Name` = '%s'", vmute, vmutetime, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offunjail(playerid, params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offunjail [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /unjail");
    }
	SetPVarString(playerid, "roffjail",param_reason);
	new str_q[185];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffUnJail", "i", playerid);
	return 1;
}
callback: OffUnJail(playerid) 
{
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) {
	    new names[24], demorgan, demorgan_time, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "demorgan", temp), demorgan = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), demorgan_time = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffjail", reason, 32);
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s выпустил из деморгана игрока %s(оффлайн). Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, reason);
        demorgan = 0;
        demorgan_time = 0;
        new str_q[144];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `demorgan` = '%d', `demorgan_time` = '%d' WHERE `Name` = '%s'", demorgan, demorgan_time, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offunmute(playerid, params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offunmute [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /unmute");
    }
	SetPVarString(playerid, "roffmute",param_reason);
	new str_q[144];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffUnMute", "i", playerid);
	return 1;
}
callback: OffUnMute(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) {
	    new names[24], mute, mutetime, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "mute", temp), mute = strval (temp);
		cache_get_field_content(0, "mutetime", temp), mutetime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffmute", reason, 32);
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s разблокировал чат игроку %s(оффлайн). Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, reason);
        mute = 0;
        mutetime = 0;
        new str_q[185];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `mute` = '%d', `mutetime` = '%d' WHERE `Name` = '%s'", mute, mutetime, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offwarn(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offwarn [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /warn");
    }
	SetPVarString(playerid, "roffwarn",param_reason);
	new str_q[144];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffWarn", "i", playerid);
	return 1;
}
callback: OffWarn(playerid) 
{
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) {
	    new names[24], warn, warntime, admin, member1, rank, leader;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "warn", temp), warn = strval (temp);
		cache_get_field_content(0, "warntime", temp), warntime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		cache_get_field_content(0, "member", temp), member1 = strval (temp);
		cache_get_field_content(0, "Leader", temp), leader = strval (temp);
		cache_get_field_content(0, "rank", temp), rank = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		if(warn >= 2) return SCM(playerid, COLOR_GREY, !"Игрок имеет 2 предупреждения, используйте /offban");
		GetPVarString(playerid,"roffwarn", reason, 32);
		SetPVarString(playerid, "text_wbook", reason);
		new query5[144];
		mysql_format(mysql, query5, sizeof(query5), "SELECT * FROM `accounts` WHERE name = '%e'", names);
		mysql_function_query(mysql, query5, true, "WbookOff", "is", playerid, names);
		warn++;
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s выдал предупреждение игроку %s[%d/3](оффлайн). Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, warn, reason);
        warntime += 1200;
        member1 = 0;
        leader = 0;
        rank = 0;
        admin = 0;
        new str_q[256];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `warn` = '%d', `warntime` = '%d', `member` = '%d', `rank` = '%d', `leader` = '%d', `Admin` = '%d' WHERE `Name` = '%s'", warn, warntime, member1, leader, rank, admin, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offunwarn(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offunwarn [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /unwarn");
    }
	SetPVarString(playerid, "roffwarn",param_reason);
	new str_q[185];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffUnWarn", "i", playerid);
	return 1;
}
callback: OffUnWarn(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) 
	{
	    new names[24], warn, warntime, admin;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "warn", temp), warn = strval (temp);
		cache_get_field_content(0, "warntime", temp), warntime = strval (temp);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		if(warn == 0) return SCM(playerid, COLOR_GREY, !"Игрок не имеет предупреждений");
		GetPVarString(playerid,"roffwarn", reason, 32);
		warn--;
        SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s снял предупреждение игроку %s[%d/3](оффлайн). Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), names, warn, reason);
        if(warn == 0) warntime = 0;
        if(warn == 1) warntime = 1200;
        new str_q[256];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `warn` = '%d', `warntime` = '%d' WHERE `Name` = '%s'", warn, warntime, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
CMD:offban(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name, param_time, param_reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offban [ник] [дни] [причина]");
    foreach(Player, i) 
	{
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /ban");
    }
	SetPVarString(playerid, "roffban",param_reason);
	SetPVarInt(playerid, "offbantime", param_time);
	new str_q[185];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "OffBan", "i", playerid);
	return 1;
}
callback: OffBan(playerid) 
{
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SCM(playerid, COLOR_GREY, !"Такого игрока нет");
    if(rows) 
	{
	    new names[24], admin, member1, rank, leader, ip[32];
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "Admin", temp), admin = strval (temp);
		cache_get_field_content(0, "member", temp), member1 = strval (temp);
		cache_get_field_content(0, "Leader", temp), leader = strval (temp);
		cache_get_field_content(0, "rank", temp), rank = strval (temp);
		cache_get_field_content(0, "LoginIP", ip, mysql, 32);

		if(PI[playerid][pAdmin] < 6 && admin != 0) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");
		else if(PI[playerid][pAdmin] < admin) return SCM(playerid, COLOR_GREY, !"Вы не можете наказать этого игрока");

		member1 = 0;
		leader = 0;
		rank = 0;
		admin = 0;

		GetPVarString(playerid,"roffban", reason, 32);

		new str_q[512];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `leader` = '%d', `rank` = '%d', `Admin` = '%d' WHERE `Name` = '%s'", member1, leader, rank, admin, names);
		mysql_function_query(mysql, str_q, false, "", "");

		new str_q2[300];
	    mysql_format(mysql,str_q2, sizeof(str_q2), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '%d', '%s', '%e')",names,getName(playerid),GetPVarInt(playerid, "offbantime"),reason,ip);
	    mysql_function_query(mysql, str_q2, false, "", "");
	}
	return 1;
}
CMD:vw(playerid, params[]) 
{
    if(CheckAdmin(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /vw [ID виртуального мира] (0 - стандартный)");
	if(params[0] > 500 || params[0] < 0) return SCM(playerid, COLOR_GREY, !"ID виртуального мира должен быть не больше 500 и не меньше 0");
	SetPlayerVirtualWorld(playerid, params[0]);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] перешёл в виртуальный мир №%d", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, params[0]);
	return 1;
}
CMD:storage(playerid) 
{
    if(PI[playerid][pMember] != 5 && PI[playerid][pRang] < 9 ||
	PI[playerid][pMember] != 6 && PI[playerid][pRang] < 9 ||
	PI[playerid][pMember] != 7 && PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(PI[playerid][pMember] == 5) {
		switch(rostov_wh[3]) {
		    case 0: {
		        rostov_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
						new str1[174];
                        format(str1,sizeof(str1),"Склад {ff6633}(закрыт)\n{cc6666}Скинхеды\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",rostov_wh[0],rostov_wh[1],rostov_wh[2]);
						UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str1);
				    }
				}
		    }
		    case 1: {
		        rostov_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
				        new str1[174];
                        format(str1,sizeof(str1),"Склад\n{cc6666}Скинхеды\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",rostov_wh[0],rostov_wh[1],rostov_wh[2]);
						UpdateDynamic3DTextLabelText(skinhead_sklad_text, -1, str1);
					}
				}
		    }
		}
	}
	if(PI[playerid][pMember] == 6) {
		switch(gopota_wh[3]) {
		    case 0: {
		        gopota_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
				        new str2[174];
                        format(str2,sizeof(str2),"Склад {ff6633}(закрыт)\n{cc6666}Гопота\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gopota_wh[0],gopota_wh[1],gopota_wh[2]);
						UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str2);
				    }
				}
		    }
		    case 1: {
		        gopota_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
				        new str2[174];
                        format(str2,sizeof(str2),"Склад\n{cc6666}Гопота\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gopota_wh[0],gopota_wh[1],gopota_wh[2]);
						UpdateDynamic3DTextLabelText(gopota_sklad_text, -1, str2);
					}
				}
		    }
		}
	}
	if(PI[playerid][pMember] == 7) {
		switch(kavkaz_wh[3]) {
		    case 0: {
		        kavkaz_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
                        new str3[174];
						format(str3,sizeof(str3),"Склад {ff6633}(закрыт)\n{cc6666}Кавказцы\n\
						{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str3);
					}
				}
		    }
		    case 1: {
		        kavkaz_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][pMember] == PI[playerid][pMember]) {
                        new str3[174];
						format(str3,sizeof(str3),"Склад\n{cc6666}Кавказцы\n\
						{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",kavkaz_wh[0],kavkaz_wh[1],kavkaz_wh[2]);
						UpdateDynamic3DTextLabelText(kavkaz_sklad_text, -1, str3);
					}
				}
		    }
		}
	}
	return 1;
}
stock SetPlayerToFacePlayer(playerid, targetid) {
    new Float:PlayerX, Float:PlayerY, Float:PlayerZ, Float:X, Float:Y, Float:Z, Float:ang;
    if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
    GetPlayerPos(targetid, X, Y, Z);
    GetPlayerPos(playerid, PlayerX, PlayerY, PlayerZ);
    if( Y > PlayerY ) ang = (-acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 90.0);
    else if( Y < PlayerY && X < PlayerX ) ang = (acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 450.0);
    else if( Y < PlayerY ) ang = (acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 90.0);
    if(X > PlayerX) ang = (floatabs(floatabs(ang) + 180.0));
    else ang = (floatabs(ang) - 180.0);
    SetPlayerFacingAngle(playerid, ang);
    return 0;
}
callback: GetPunishment(playerid) {
	new rows, fields, type, name[MAX_PLAYER_NAME], reason[144], temp[20], string[625], string1[625], bugfix,logd1,logd2,logd3, support;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "player", name, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(i, "reason", reason, mysql, 144);
		cache_get_field_content(i, "type", temp), type = strval (temp);
		cache_get_field_content(i, "support", temp), support = strval (temp);
		cache_get_field_content(i, "day", temp), logd1 = strval (temp);
		cache_get_field_content(i, "mounth", temp), logd2 = strval (temp);
		cache_get_field_content(i, "year", temp), logd3 = strval (temp);
		new ltext[64];
		switch(type) {
			case 1: ltext = "Блокировка аккаунта";
			case 2: ltext = "Игровое предупреждение";
		}
    	format(string,sizeof(string),"%s{FFFFFF}%s\t%s\t#%d\t%d.%d.%d\t%s\n",string, name, ltext, support, logd1, logd2, logd3, reason);
    	format(string1,sizeof(string1),"Никнейм\tТип\tИгровой мастер \tДата\tПричина\n%s",string);
    	bugfix = 1;
	}
	if(bugfix == 1) return ShowPlayerDialog(playerid,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Список наказаний", string1, "Закрыть", "");
  	ShowPlayerDialog(playerid,0, DIALOG_STYLE_MSGBOX, !"{ee3366}Список наказаний", "{FFFFFF}В данный момент наказаний игрока нет", "Закрыть", "");
	return 1;
}
CMD:punishment(playerid, params[]) 
{
    if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /punishment [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Данного ID нет на сервере");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Данный игрок не прошел авторизацию");
	new str_q[256];
 	mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `punishment` WHERE `name` = '%s'", getName(params[0]));
 	mysql_function_query(mysql, str_q, true, "GetPunishment", "d", playerid);
	return 1;
}
CMD:spawncars(playerid, params[])
{
    if(CheckAdmin(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /spawncars [id машины]");
	return SetVehicleToRespawn(params[0]);
}
CMD:cc(playerid) 
{
    if(CheckAdmin(playerid, 2)) return 1;
	for(new i; i < 500; i++) SendClientMessageToAll(0xFFFFFFFF,"");
	return SendClientMessageToAllf(COLOR_BLACKRED, "Игровой мастер #%d очистил чат", PI[playerid][pAdminNumber]);
}
CMD:freeze(playerid, params[]) 
{
    if(CheckAdmin(playerid)) return 1;
    if(sscanf(params, "i", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /freeze [ID игрока]");
    if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
    if(GetPVarInt(playerid,"Freeze") == 0) {
        SetPVarInt(playerid,"Freeze", 1);
        TogglePlayerControllable(params[0], 0);
        SCMf(params[0], -1, "Игровой мастер #%d заморозил Вас", PI[playerid][pAdminNumber]);
        SCMf(playerid, COLOR_GREY, "Вы заморозили игрока %s[%d]", getName(params[0]), params[0]);
    }
    else {
         DeletePVar(playerid, "Freeze");
         TogglePlayerControllable(params[0], 1);
         SCMf(params[0], -1, "Игровой мастер #%d разморозил Вас", PI[playerid][pAdminNumber]);
         SCMf(playerid, COLOR_GREY, "Вы разморозили игрока %s[%d]", getName(params[0]), params[0]);
    }
    return 1;
}
CMD:banip(playerid, params[]) 
{
    if(CheckAdmin(playerid, 6)) return 1;
  	if(sscanf(params, "s[16]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /banip [ip]");
  	new string[24];
  	format(string, sizeof(string), "banip %s", params[0]);
  	SendRconCommand(string);
  	SCMf(playerid, COLOR_TOMATO, "IP-адресс ('%d') заблокирован", params[0]);
	return 1;
}
CMD:unbanip(playerid, params[]) 
{
    if(CheckAdmin(playerid, 7)) return 1;
  	if(sscanf(params, "s[16]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /unbanip [ip]");
  	new string[24];
  	format(string, sizeof(string), "unbanip %s", params[0]);
  	SendRconCommand(string);
  	SCMf(playerid, COLOR_TOMATO, "IP-адресс ('%d') разблокирован", params[0]);
	return 1;
}
CMD:ahp(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
	new Float:radius;
	if (sscanf(params, "f", radius)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /ahp [радиус]");
	new Float:player_x, Float:player_y, Float:player_z;
	for(new players = 0; players < MAX_PLAYERS; players++) 
	{
		GetPlayerPos(players, player_x, player_y, player_z);
		if(IsPlayerInRangeOfPoint(playerid, radius, player_x, player_y, player_z)) 
		{
			SetPlayerHealthAC(players, 100.0);
			SCMf(players, -1, "Игровой мастер #%d изменил Вам здоровье", PI[playerid][pAdminNumber]);
		}
	}
	return 1;
}
CMD:atw(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	new Float:radius;
	if (sscanf(params, "f", radius)) return  SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /atw [радиус]");
	new Float:player_x, Float:player_y, Float:player_z;
	for(new players = 0; players < MAX_PLAYERS; players++) 
	{
		GetPlayerPos(players, player_x, player_y, player_z);
		if(IsPlayerInRangeOfPoint(playerid, radius, player_x, player_y, player_z)) 
		{
			ResetPlayerWeapons(players);
			SCMf(players, -1, "Игровой мастер #%d изъял Ваше оружие", PI[playerid][pAdminNumber]);
		}
	}
	SCM(playerid, COLOR_GREY, "Вы изъяли оружие у игроков в установленном радиусе.");
	return 1;
}
CMD:givechest(playerid,params[]) 
{
    if(sscanf(params,"iii", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givechest [ID игрока]");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя передать аптечку самому себе");
	if(PI[playerid][pHealPack] == 0) return SCM(playerid, COLOR_GREY, !"У вас нет набор аптечек");
	if(PI[params[0]][pHealPack] == 3) return SCM(playerid, COLOR_GREY, !"У игрока уже есть 3 набора аптечек");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок слишком далеко от Вас");
	return SendRequestForPlayer(playerid, params[0], 2);
}	
stock ShowDialogRule(playerid) 
{
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Общие правила", !"\
	{FFFFFF}Правила игры расположены на форуме.\n\
	Ссылка на форум: {FFFF99}"FORUM"", !"Закрыть", !"");
	return 1;
}
stock ShowDialogResurs(playerid) 
{
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, !"{ee3366}Ресурсы игры","\
	{FFFFFF}Сайт\t\t\t\t\t{FFFF99}"SITE"\n\
	{FFFFFF}Форум\t\t\t\t\t{FFFF99}"FORUM"\n\
	{FFFFFF}Тех.Поддержка\t\t\t{FFFF99}vk.com/"VK"\n\
	{FFFFFF}Сообщество ВКонтакте\t\t{FFFF99}vk.com/"VK"", !"Закрыть", !"");
	return 1;
}
CMD:tome(playerid, params[]) 
{
	new gotplayer;
	if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params, "u", gotplayer)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /tome [ID игрока]"); 
	{
            if(playerid == gotplayer) return SCM(playerid, COLOR_GREY, !"Вы не можите сопровождать самого себя ");
            else if(!IsPlayerConnected(gotplayer)) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
            else if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не можете потащить с машины");
            else if(FollowBy[playerid] != MAX_PLAYERS) return SCM(playerid, COLOR_GREY, !"Вы не можете вести больше игроков");
            else if(GetPVarInt(params[0],"PlayerCuffed") == 1) return SCM(playerid, COLOR_GREY, !"Игрок должен быть в наручниках");
            else if(IsPlayerInAnyVehicle(gotplayer)) return SCM(playerid, COLOR_GREY, !"Вы не можете потащить за собой когда игрок в машине");
            new Float: X, Float: Y, Float: Z; GetPlayerPos(gotplayer, X, Y, Z);
            if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SCM(playerid, COLOR_GREY, !"Игрок далеко от вас");
            else if(FollowBy[gotplayer] != MAX_PLAYERS) 
			{
                SetPVarInt(playerid, "TempFollowBy", -1);
                FollowBy[gotplayer] = MAX_PLAYERS;
                KillTimer(TimerForPlayer[gotplayer]);
                TimerForPlayer[gotplayer] = MAX_PLAYERS;
                ClearAnimations(playerid);
                TogglePlayerControllable(gotplayer, 1);
                SCMf(playerid, COLOR_GREY, "Вы больше не контролируете %s", PI[gotplayer][pName]);
                return SCMf(gotplayer, COLOR_GREY, "%s %s перестал Вас контролировать", rang_police[PI[playerid][pRang]-1][frName], PI[gotplayer][pName]);
            }
            if(GetPVarInt(playerid, "TempFollowBy") != -1) return SCM(playerid, COLOR_GREY, !"Вы не можете сопровождать больше 2х игроков одновременно");
            FollowBy[gotplayer] = playerid;
            SetPVarInt(playerid, "TempFollowBy", gotplayer);
            TimerForPlayer[gotplayer] = SetTimerEx("FollowToPlayer", 1000, 1, "i", gotplayer);
            SCMf(playerid, COLOR_GREY, "Вы начали контролировать игрока %s", PI[gotplayer][pName]);
            return SCMf(gotplayer, COLOR_GREY, "Сотрудник Полции %s начал Вас контролировать", PI[gotplayer][pName]);
    }
}
callback: FollowToPlayer(playerid)
{
    static AnimShot[MAX_PLAYERS];
    if(!IsPlayerConnected(FollowBy[playerid]))
    {
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        FollowBy[playerid] = MAX_PLAYERS;
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        AnimShot[playerid] = false;
        return 1;
    }
    else if(!IsPlayerConnected(playerid))
    {
		SCMf(FollowBy[playerid], COLOR_GREY, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][pName]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else if(FollowBy[playerid] == MAX_PLAYERS)
    {
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        return 1;
    }
    else if(IsPlayerInAnyVehicle(playerid))
    {
		SCMf(FollowBy[playerid], COLOR_GREY, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][pName]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else if(GetPlayerVirtualWorld(FollowBy[playerid]) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(FollowBy[playerid]) != GetPlayerInterior(playerid))
    {
        new Float: X, Float: Y, Float: Z;
        GetPlayerPos(FollowBy[playerid], X, Y, Z);
        SetPlayerPos(playerid, X, Y, Z);
        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(FollowBy[playerid]));
        SetPlayerInterior(playerid, GetPlayerInterior(FollowBy[playerid]));
        TogglePlayerControllable(playerid, 0);
        AnimShot[playerid] = false;
        return 1;
    }
    new Float: GotDistance = GetDistanceBetweenPlayers(playerid, FollowBy[playerid]);
    if(GotDistance < 0.95)
    {
        TogglePlayerControllable(playerid, 0);
        SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
        AnimShot[playerid] = false;
        return 1;
    }
    else if(GotDistance > 29.0)
    {
		SCMf(FollowBy[playerid], COLOR_GREY, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][pName]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else
    {
        TogglePlayerControllable(playerid, 1);
        SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
        ApplyAnimation(playerid, "ped", "WALK_civi", 6.0, 1, 1, 1, 1, 0, 1);
    }
    return 1;
}
CMD:givemask(playerid,params[]) 
{
    if(sscanf(params,"iii", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givemask [ID игрока]");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY, !"Нельзя передать маску самому себе");
	if(PI[playerid][data_MASK] == 0) return SCM(playerid, COLOR_GREY, !"У вас нет маски");
	if(PI[params[0]][data_MASK] == 1) return SCM(playerid, COLOR_GREY, !"У игрока уже есть маска");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок слишком далеко от Вас");
	SendRequestForPlayer(playerid, params[0], 3);
	return 1;
}
stock open_lmenugos(playerid) {
	new dialog[712];
	format(dialog,sizeof(dialog),
    "{e6e69c}1. Управление группами\n\
	{e6e69c}2. Заявки на перевод\n\
	{e6e69c}3. Список всех участников организации\n\
	{e6e69c}4. Чёрный список\n\
	{e6e69c}5. Автопарк организации\n\
	{3CB371}6. Принять в организацию\n\
	{3CB371}7. Уволить из организации\n\
	{3CB371}8. Уволить из огранизации оффлайн\n\
	{3CB371}9. Выдать выговор\n\
	{3CB371}10. Выдать выговор оффлайн\n\
	{3CB371}11. Снять выговор\n\
	{3CB371}12. Снять выговор оффлайн\n\
	{3CB371}13. Изменить ранг\n\
	{3CB371}14. Изменить внешность\n\
	{3CB371}15. Изменить группу\n\
	{6dbdd8}16. Расформировать организацию\n\
	{6dbdd8}16. Меню Собеседований");
	return ShowPlayerDialog(playerid, 7500, DIALOG_STYLE_LIST, "{ee3366}Меню лидера", dialog, "Выбрать", "Отмена");
}
alias:lmenu("lm", "leadersmenu", "leadersm");
cmd:lmenu(playerid) 
{
    if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, !"Данная команда доступна лидерам организаций и их заместителям");

    if(PI[playerid][pMember] == 1 || PI[playerid][pMember] == 2 || PI[playerid][pMember] == 3 || PI[playerid][pMember] == 4) return open_lmenugos(playerid);
    if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) return ShowLMenu_OPG(playerid);
	return 1;
}
CMD:offuninvite(playerid,params[]) 
{
    if(PI[playerid][pRang] < 10) return SCM(playerid, COLOR_GREY, !"Данная команда доступна лидерам организаций");
    new param_name[24];
	if(sscanf(params, "s[144]", param_name)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /offuninvite [имя]");
    foreach(Player, i) 
	{
	    new szName[64];
	    if(!IsPlayerConnected(i)) continue;
	    GetPlayerName(i,szName,64);
	    if(!strcmp(param_name, szName, false)) return SCM(playerid, COLOR_GREY, !"Этот игрок в сети, используйте /uninvite");
    }
	if(GetString(param_name, getName(playerid))) return SCM(playerid, COLOR_GREY, !"Вы не можете уволить себя");
	new str_q[256];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", param_name);
    mysql_function_query(mysql, str_q, true, "offuninvite", "is", playerid, param_name);
	return 1;
}
callback: offuninvite(playerid, names[]) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
	    new twarn, members, ranks, leaders, groupid;
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
		cache_get_field_content(0, "groupid", temp), groupid = strval (temp);
		if(members != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Игрок должен состоять в Вашей организации");
	    static name[24];
		SetString(name, NameRang(playerid));
		name = NameRang(playerid);
		new res[144];
	    format(res, sizeof(res), "Увольнение оффлайн");
		SetPVarString(playerid, "text_wbook", res);
		new query5[144];
		mysql_format(mysql, query5, sizeof(query5), "SELECT * FROM `accounts` WHERE name = '%e'", names);
		mysql_function_query(mysql, query5, true, "WbookOff", "is", playerid, names);
        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "(( %s %s[%d] уволил оффлайн %s ))", name, getName(playerid), playerid, names);
        members = 0;
		ranks = 0;
		leaders = 0;
		groupid = 0;
		new str_q[345];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `rank` = '%d', `leader` = '%d', `groupid` = '%d', `twarn` = '%d' WHERE `Name` = '%s'",members, ranks, leaders, groupid, twarn, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	else SCM(playerid, COLOR_GREY, !"Игрок не найден");
	return 1;
}
CMD:unofftwarn(playerid, params[]) 
{
	if(sscanf(params, "s[144]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /unofftwarn [имя]");
 	if(params[0] == getName(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор себе");
	new name[MAX_PLAYER_NAME];
	format(name, sizeof(name), "%s", params[0]);
	new str_q[110];
	mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
    mysql_function_query(mysql, str_q, true, "UnOffTwarn", "i", playerid);
	return 1;
}
callback: UnOffTwarn(playerid) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
	    new names[24], twarn, members, ranks;
	    cache_get_field_content(0, "Name", names, mysql);
		cache_get_field_content(0, "twarn", temp), twarn = strval (temp);
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
	    if(ranks == 10 && PI[playerid][pRang] == 9) return SCM(playerid, COLOR_GREY, !"Вы не можете снять выговор лидеру");
		if(members != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Игрок должен состоять в Вашей организации");
	    if(twarn == 0) return SCM(playerid, COLOR_GREY, !"Игрок не имеет выговоров");
		new str[30];
		switch(PI[playerid][pMember]) {
	 	    case 1:format(str,sizeof(str),"%s",rang_gov[PI[playerid][pRang]-1][frName]);
			case 2:format(str,sizeof(str),"%s",rang_army[PI[playerid][pRang]-1][frName]);
			case 3:format(str,sizeof(str),"%s",rang_police[PI[playerid][pRang]-1][frName]);
			case 4:format(str,sizeof(str),"%s",rang_hospital[PI[playerid][pRang]-1][frName]);
		    case 5:format(str,sizeof(str),"%s",rang_skinhead[PI[playerid][pRang]-1][frName]);
		    case 6:format(str,sizeof(str),"%s",rang_gopota[PI[playerid][pRang]-1][frName]);
		    case 7:format(str,sizeof(str),"%s",rang_kavkaz[PI[playerid][pRang]-1][frName]);
		}
		twarn--;
        SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "(( %s %s[%d] снял выговор оффлайн %s [%d/3] ))", str, getName(playerid), playerid, names, twarn);
		new str_q[144];
	    mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `accounts` SET `twarn` = '%d' WHERE `Name` = '%s'", twarn, names);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	else SCM(playerid, COLOR_GREY,"Игрок не найден");
	return 1;
}
cmd:transfer(playerid) 
{
	if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7) return SCM(playerid, COLOR_GREY, !"Переводы доступны только в Государственых Организациях");
    if(PI[playerid][pRang] > 9) return SCM(playerid, COLOR_GREY, !"Вы не можете перевестить в другую организацию");
    if(PI[playerid][pMember] < 3) return SCM(playerid, COLOR_GREY, !"Переводы доступны c третего ранга");
    ShowPlayerDialog(playerid, 7600, DIALOG_STYLE_LIST, "{ee3366}Переводы", "1. БЦРБ\n2. Полиция\n3. Правительство\n4. Воинская Часть", "Выбрать", "Отмена");
	return 1;
}
CMD:transfers(playerid) 
{
	new string[256+144] = "ID\tИмя\tРанг\tОрганизация\n", bool: bugfix ;
	for(new i = 0; i < MAX_PLAYERS; i++) {
    	if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_TRANSFER_FRAC] == PI[playerid][pMember]) {
			format(string, sizeof(string), "%s%d\t%s\t%d ранг\t%d\n", string, i,PI[i][pName],PI[i][pRang], PI[i][pMember]);
			bugfix = true;
		}
	}
	return ShowPlayerDialog(playerid, (bugfix) ? (7890) : (0), DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Меню Переводов", (bugfix) ? (string) : ("В данный момент нет заявок на перевод"), "Одобрить", "");
}
callback: clearDialogTimer(playerid) 
{
	if pDialogTimer[playerid] != -1 *then KillTimer(pDialogTimer[playerid]);
	pDialogTimer[playerid] = -1;
	pDialogCurrectTime[playerid] = -1;
	DeletePVar(playerid, "codelid");
}
callback: DialogTimerInvite(playerid) 
{
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime());
	new dialog[185];
	format(dialog,sizeof(dialog),"\
		{FFFFFF}Пригласил: %s\n\
		Организация: %s\n\n\
		{FFFF99}Вы действительно хотите вступить в организацию?", 
			PI[GetPVarInt(playerid, "from_player")][pName], 
			Fraction_Name[PI[GetPVarInt(playerid, "from_player")][pMember]]);

	ShowPlayerDialog(playerid, 7242, DIALOG_STYLE_MSGBOX, !"{ee3366}Вступление в организацию", dialog, (pDialogCurrectTime[playerid] < gettime()) ? ("Вступить") : (str), "Закрыть" );
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
callback: DialogTimerLeader(playerid) 
{
    new str[5];
    format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );
    new dialog[256];
    format(dialog,sizeof(dialog),"{FFFFFF}Поздравляем! Вы были назначены лидером организации %s\n\nТеперь вам необходимо вступить в беседу лидеров ВКонтакте. Для этого напишите\nсо своей страницы любое сообщение нашему боту:{F7E19C}vk.com/"VK"", Fraction_Name[PI[playerid][pMember]]);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Подсказка", dialog, (pDialogCurrectTime[playerid] < gettime()) ? ("Открыть") : (str),(pDialogCurrectTime[playerid] < gettime()) ? ("Закрыть") : (str) );
    if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
    return 1;
}
callback: CheckWbook(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new str_q[256];
		mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",getName(playerid));
		mysql_function_query(mysql, str_q, true, "WorkBook", "i", playerid, getName(playerid));
	}
	else SCM(playerid, COLOR_GREY, !"У вас нет истории в трудовой книге.");
	return 1;
}
CMD:wbook(playerid,params[]) 
{
    if(sscanf(params, "u", params[0])) {
		new str_q[256];
		mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",getName(playerid));
		mysql_function_query(mysql, str_q, true, "WorkBook", "i", playerid);
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SCM(playerid, COLOR_GREY, !"Игрок находится слишком далеко");
	new str_q[256];
	mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",getName(playerid));
	mysql_function_query(mysql, str_q, true, "WorkBook", "dd", playerid,params[0]);
	return 1;
}
callback: WorkBook(playerid,id) {
    new rows, fields, temp[144], reas[256], rank, w_d, w_m, w_y, fracname5;
	new str_3[512];
	new str_1[256];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "w_day", temp), w_d = strval(temp);
		cache_get_field_content(i, "w_mes", temp), w_m = strval(temp);
		cache_get_field_content(i, "w_year", temp), w_y = strval(temp);
		cache_get_field_content(i, "w_fraction", temp), fracname5 = strval(temp);
		cache_get_field_content(i, "w_rank", temp), rank = strval(temp);
		cache_get_field_content(i, "w_reason", reas, mysql, 24*2);
		new fracname[16];
		switch(fracname5) {
			case 1: fracname = "Правительство";
			case 2: fracname = "Войсковая часть";
			case 3: fracname = "Полиция";
   			case 4: fracname = "БЦРБ";
			case 5: fracname = "Скинхеды";
			case 6: fracname = "Гопота";
			case 7: fracname = "Кавказцы";
  		}
		new monthname[9];
		switch(w_m) {
			case 1: monthname = "январь";
			case 2: monthname = "февраль";
			case 3: monthname = "март";
   			case 4: monthname = "апрель";
			case 5: monthname = "май";
			case 6: monthname = "июнь";
			case 7: monthname = "июль";
   			case 8: monthname = "август";
			case 9: monthname = "сентябрь";
			case 10: monthname = "октябрь";
			case 11: monthname = "ноябрь";
			case 12: monthname = "декабрь";
  		}
  		new str[20];
		switch(fracname5)
	 	{
	 	    case 1:format(str,sizeof(str),"%s",rang_gov[rank-1][frName]);
			case 2:format(str,sizeof(str),"%s",rang_army[rank-1][frName]);
			case 3:format(str,sizeof(str),"%s",rang_police[rank-1][frName]);
			case 4:format(str,sizeof(str),"%s",rang_hospital[rank-1][frName]);
		    case 5:format(str,sizeof(str),"%s",rang_skinhead[rank-1][frName]);
		    case 6:format(str,sizeof(str),"%s",rang_gopota[rank-1][frName]);
		    case 7:format(str,sizeof(str),"%s",rang_kavkaz[rank-1][frName]);
		}
		format(str_3,sizeof(str_3),"%s%d %s %d г.{FFFFFF}\t%s - %s[%d]\t%s\n", str_3, w_d, monthname, w_y, fracname, str, rank, reas);
	}
	format(str_1,sizeof(str_1),"Уход из организации\tОргнизация - ранг\tПричина ухода\n%s",str_3);
	return ShowPlayerDialog(id,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Трудовая книга", str_1, "Закрыть", "");
}
CMD:anim(playerid)
{
	if(GetPVarInt(playerid, "anim_load") != 1)
	{
		PreloadAnimLib(playerid,"SMOKING");
		PreloadAnimLib(playerid,"BD_FIRE");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"RAPPING");
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"BSKTBALL");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"GRAVEYARD");
		PreloadAnimLib(playerid,"RYDER");
		PreloadAnimLib(playerid,"MISC");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"RIOT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"SWAT");
		PreloadAnimLib(playerid,"GFUNK");

		SetPVarInt(playerid, "anim_load",1);
		return true;
	}
	new string[406+1];
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GREY, !"Нельзя использовать в транспорте!");
	format(string,sizeof(string),"\
	1. Поднять руки вверх\n\
	2. Курить\n3. Мыть руки\n\
	4. Сесть на землю\n\
	5. Лечь на спину\n\
	6. Лечь и приподнять ногу\n\
	7. Читать рэп \n\
	8. Прилечь\n\
	9. Установить бомбу\n\
	10. Поза вратаря\n\
	11. Сложить руки\n\
	12. Плакать (девушка)\n\
	13. Пьяная походка\n\
	14. Голосовать\n\
	15. Поднять руку\n\
	16. Поднять руки\n\
	17. Облокотиться\n\
	18. Смотреть на небо\n\
	19. Махать рукой\n\
	20. Болельщик\n\
	21. Медитация\n\
	22. Facepalm\n\
	23. Заложник\n\
	24. Справить нужду");
	ShowPlayerDialog(playerid,dialog_ANIM,DIALOG_STYLE_LIST,"{ee3366}Список анимаций:", string, "Выбрать","Отмена");
	return true;
}
callback: DialogTimerGiveGun(playerid) {
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );
    new gun = GetPlayerWeapon(GetPVarInt(playerid, "from_player"));
	new str_3[256];
	format(str_3,sizeof(str_3),"Владелец: %s[%d]\nОружие: %s (%d пт)\n\nВы действительно хотите принять это предложение",
	PI[GetPVarInt(playerid, "from_player")][pName],
	GetPVarInt(playerid, "from_player"),
	weapon_names[gun],
	GetPVarInt(playerid, "value_1"));
	ShowPlayerDialog(playerid, 8790, DIALOG_STYLE_MSGBOX, !"{ee3366}Передача оружия", str_3, (pDialogCurrectTime[playerid] < gettime()) ? ("Принять") : (str), "Нет");
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
CMD:givegun(playerid, params[]) 
{
	if(!IsPlayerOPG(playerid))  return SCM(playerid, COLOR_GREY,"Вы не состоите в ОПГ");
 	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givegun [ID игрока] [кол-во]");
    if(PI[params[0]][pWeaponLock] > 0) return SCM(playerid, COLOR_GREY,"У данного игрока блокировка оружия");
	if(playerid == params[0]) return SCM(playerid, COLOR_GREY,"Нельзя передавать самому себе");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY,"Данного ID нет на сервере");
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY,"Данный игрок не состоит в вашей организации");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY,"Данный игрок не прошел авторизацию");
	if(params[1] < 1) return SCM(playerid, COLOR_GREY,"Минимальное значение патрон 1");
	if(PI[params[0]][pLevel] < 2) return SCM(playerid, COLOR_GREY,"У игрока нет 2-го уровня");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
    if(!PlayerToPoint(5.0, params[0], x,y,z)) return SCM(playerid, COLOR_GREY,"Нужно находиться возле игрока");
	new gun = GetPlayerWeapon(playerid);
	new gunslot = getWeaponIdSlot(gun);
	if(gun == 38 && gun == 34 && gun == 35 && gun == 36 && gun == 37 && gun == 39 && gun == 40) return SCM(playerid, COLOR_GREY,"Нельзя передать данное оружие");
	if(params[1] < 1) return SCM(playerid, COLOR_GREY,"Недопустимое значение");
	if(PI[playerid][data_GUN][gunslot] == 0 || gunslot == 0) return SCM(playerid, COLOR_GREY,"Чтобы передать оружие, нужно взять его в руки");
	if(PI[playerid][data_AMMO][gunslot] < params[1]) return SCM(playerid, COLOR_GREY, "У Вас нет такого количества патронов");
	return SendRequestForPlayer(playerid, params[0], 16, params[1]);
}
stock PlayerGetsChatBan(playerid, text[]) {
	new g = random(777);
	return SendAdminsMessagef(0xa0bbbbFF, "[Варнинг] <#%d> %s[%i] отправил сообщение: %s",g, getName(playerid), playerid, text);
}
stock CheckString(string[]) {
    static const WebSites[][] = {
		"NEW IP","Заходите на лучший сервер",".com","46","176 46","точка ру",".su",".info",
		"Переезд","Новый сервер","NEW IP","ну что го сливать админку","ну что го сливать лидерку",
		"Переехали","переезжаем","дам админку","переехали",". ru","нубо сервер","нубомод","дносервер","нубосервер",""
	};
	for(new i = 0; i < sizeof(WebSites); i++) if(strfind(string, WebSites[i], true) != -1) return 1;
	return 0;
}
callback: LoadBlackList()
{
    new rows, fields, temp[60],time = GetTickCount(),banac;
    cache_get_data(rows, fields);
    if(rows) {
    	for(new b = 0; b < rows; b++) {
         	cache_get_field_content(b, "bl_id", temp), BL_DATA[b][data_ID] = strval (temp);
         	cache_get_field_content(b, "bl_day", temp), BL_DATA[b][data_DAY] = strval (temp);
			TotalBlackList++;
   			if(BL_DATA[b][data_DAY] <= 0) {
				new str_q[185];
			    mysql_format(mysql,str_q, sizeof(str_q), "DELETE FROM `fractions_blacklist` WHERE `bl_id` = '%d'", BL_DATA[b][data_ID]);
	    		mysql_function_query(mysql, str_q, false, "", "");
	    		banac++;
			}
			else {
       			BL_DATA[b][data_DAY]--;
				new str_q[185];
			    mysql_format(mysql,str_q, sizeof(str_q),"UPDATE `fractions_blacklist` SET `bl_day` = '%d' WHERE `bl_id` = '%d'",BL_DATA[b][data_DAY],BL_DATA[b][data_ID]);
			    mysql_function_query(mysql, str_q, false, "", "");
			}
		}
		if(console_Debbug == 1) printf("[INFO]  Load blacklist accounts. Load: %d. UnBlackList: %d. Ex UnBlackList: %d. Time: %d ms.",TotalBlackList,banac,TotalBans-banac, GetTickCount()-time);
  	}
    return 1;
}
CMD:phone(playerid) {
	if(PI[playerid][data_PHONE] == 0) return SCM(playerid, COLOR_GREY,"У вас нет телефона");
	if(PI[playerid][pPhoneStatus] == 1) {
		ShowPlayerDialog(playerid, 7220, DIALOG_STYLE_LIST, "{ee3366}Телефон", "\
		1. Информация\n\
		2. Позвонить\n\
		3. Отправить SMS\n\
		4. Мобильный банк\n\
		5. Телефонная книга\n\
		6. Телефонные услуги\n\
		{f8f897}7. Выключить телефон", "Выбрать", "Отмена");
		return 1;
	}
	else return ShowPlayerDialog(playerid, 7210, DIALOG_STYLE_LIST, "{ee3366}Телефон", "1. Информация\n{f8f897}2. Включить телефон", "Выбрать", "Отмена");
}
stock IsAtBankomat(playerid,Float:distance) {
    for(new i = 0;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return 1;
	return 0;
}
CMD:vb(playerid,params[]) 
{
    new vb[14];
    switch(PI[playerid][data_MILITARY]) {
		case 0: vb = "нету";
		case 1: vb = "есть";
	}
	new str_3[256];
	format(str_3,sizeof(str_3),"Войсковая часть г. Батырево\nГражданин РФ: {3377cc}%s\n{FFFFFF}Военный билет: %s", getName(playerid), vb);
	return ShowPlayerDialog(playerid,0, DIALOG_STYLE_MSGBOX, !"{ee3366}Военный билет", str_3, "Закрыть", "");
}
CMD:time(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
  	new hour,minuite,string[344],Year, Month, Day,month[10];
  	gettime(hour,minuite);
	getdate(Year, Month, Day);
	switch(Month)
	{
		case 1: month = "01";
		case 2: month = "02";
		case 3: month = "03";
		case 4: month = "04";
		case 5: month = "05";
		case 6: month = "06";
		case 7: month = "07";
		case 8: month = "08";
		case 9: month = "09";
		case 10: month = "10";
		case 11: month = "11";
		case 12: month = "12";
	}

	format(string,sizeof(string),"~g~%d.%s.%d~y~ %02d:%02d~n~~w~В игре ~b~%d мин~n~~w~Сервер ~b~1",Day, month,Year, hour,minuite, PI[playerid][data_TIME]);
	GameTextForPlayer(playerid, string, 5000, 1);

	if(PI[playerid][pDemorganTIME] != 0)
	{
	    if(PI[playerid][pDemorganTIME] > 60) SCMf(playerid, 0xf0f0f0FF, "До выхода из деморгана {FF6347}%d мин.", PI[playerid][pDemorganTIME]/60);
		else SCMf(playerid, 0xf0f0f0FF, "До выхода из деморгана {FF6347}%d сек.", PI[playerid][pDemorganTIME]);
	}
	else if(PI[playerid][pJailTime] != 0)
	{
	    if(PI[playerid][pJailTime] > 60) SCMf(playerid, 0xf0f0f0FF, "До выхода из тюрьмы {FF6347}%d мин.", PI[playerid][pJailTime]/60);
		else SCMf(playerid, 0xf0f0f0FF, "До выхода из тюрьмы {FF6347}%d сек.", PI[playerid][pJailTime]);
	}
	else if(PI[playerid][data_MUTE] != 0)
	{
	    if(PI[playerid][data_MUTETIME] > 60) SCMf(playerid, 0xf0f0f0FF, "До разблокировки чата {FF6347}%d мин.", PI[playerid][data_MUTETIME]/60);
		else SCMf(playerid, 0xf0f0f0FF, "До разблокировки чата {FF6347}%d сек.", PI[playerid][data_MUTETIME]);
	}
	else if(PI[playerid][data_VMUTE] != 0)
	{
	    if(PI[playerid][data_VMUTETIME] > 60) SCMf(playerid, 0xf0f0f0FF, "До разблокировки голосового чата {FF6347}%d сек.", PI[playerid][data_VMUTETIME]/60);
		else SCMf(playerid, 0xf0f0f0FF, "До разблокировки голосового чата {FF6347}%d мин.", PI[playerid][data_VMUTETIME]);
	}
    SetPlayerChatBubble(playerid, "Cмотрит на часы", 0xFF99CCFF, 20.0, 4000);
	return true;
}

CMD:prison(playerid, params[]) 
{
    if(CheckAdmin(playerid)) return 1;
    if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY,"Используйте /prison [ID игрока]");
    if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[params[0]][pAdmin] != 0) return SCM(playerid, COLOR_GREY,"Вы не можете выдать наказание игровому мастеру");
    if(params[0] == playerid) return SCM(playerid, COLOR_GREY,"Вы не можете выдать наказание самому себе");
    SetPVarInt(playerid, "PrisonID", params[0]);
    new str_3[2048];
	format(str_3,sizeof(str_3),"\
		№\t\t\tНазвание\t\t\tКоманда\n\
	    1\tDM\t\t\t\t/jail %d 15 DM (п. 1.1)\n\
	    2\tNonRP Drive\t\t\t\t/jail %d 30 NonRP Drive (п. 1.19)\t\n\
	    3\tDriveBy\t\t\t\t/jail %d 10 DriveBy (п 1.4)\n\
		4\tБагоюз\t\t\t\t/jail %d 30 Багоюз (п 1.7)\n\
		5\tПомеха работе\t\t\t\t/jail %d 15 Помеха работе (п 1.9)\n\
		6\tПомеха РП процессу\t\t\t\t/jail %d 15 Помеха РП процессу (п 1.22)\n\
		7\tМузыка в голосовой чат\t\t\t\t/vmute %d 10 Музыка (п 2.9)\n\
		8\tTeamKill\t\t\t\t/jail %d 5 TeamKill (п 1.7)\n\
		9\tОскорбление игры\t\t\t\t/ban %d 5 Оскорбление игры (п 1.25)\n\
		10\tОскорбление ИМ\t\t\t\t/mute %d 120 Оскорбление ИМ (п 1.25)\n\
		11\tРеклама сторонних ресурсов\t\t\t\t/ban %d 1 Реклама (п 2.6)\n\
		12\tФлуд в текстовый чат\t\t\t\t/mute %d 15 Флуд (п 2.5)\n\
		13\tОффтоп в репорт\t\t\t\t/mute %d 15 Оффтоп (п 2.5)\n\
		14\tAFK во время боя\t\t\t\t/jail %d 25 AFK в бою (п 1.5)\n\
		15\tMG в текстовый чат\t\t\t\t/mute %d 10 MG (п 2.7)\n\
		16\tMG в голосовой чат\t\t\t\t/vmute %d 10 MG (п 2.10)\n\
		17\tИспользование стороннего ПО\t\t\t\t/jail %d 120 Читы / Скрипты (п 1.6)\n\
		18\tPowerGaming\t\t\t\t/jail %d 15 PowerGaming (п 1.12)\n\
		19\tNonRP /me\t\t\t\t/jail %d 5 NonRP /me (п 1.25)\n\
		20\tNonRP /sleep\t\t\t\t/kick %d NonRP /sleep (п 1.39)\n\
		21\tНеадекват в голосовой чат\t\t\t\t/vmute %d 20 Неадекватное поведение (п 2.10)", params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0]);
	new str_1[2048];
	format(str_1,sizeof(str_1),"{ee3366}Наказать %s[ID: %d]", getName(params[0]), params[0]);
    ShowPlayerDialog(playerid, 5213, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_3, "Наказать", "Отмена");
    return 1;
}
callback: WbookOff(playerid, name[]) {
    new rows, fields,temp[256],w_player, w_rank;
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "id", temp), w_player = strval(temp);
		cache_get_field_content(0, "rank", temp), w_rank = strval(temp);
		new text[24];
		GetPVarString(playerid,"text_wbook", text, sizeof(text));
		FixSVarString(text);
		new year, month, day ;
		getdate(year, month, day);
		new str_q[512];
		mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','%s','%d','%d','%d','%d')", w_player, PI[playerid][pMember], name, text, w_rank, day, month, year);
		mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
callback: PhoneBook(playerid) {
    new rows, fields, temp[144], p_number, p_name[32];
    cache_get_data(rows, fields);
	new str_1[185];
	new str_3[185];
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp);
		cache_get_field_content(i, "name", p_name, mysql, 32);
		format(str_3,sizeof(str_3),"%s{FFFFFF}%s\t\tт. %d\n", str_3, p_name, p_number);
	}
	format(str_1,sizeof(str_1),"{FFFF99}Добавить контакт{FFFFFF}\n%s",str_3);
	ShowPlayerDialog(playerid, 7229, DIALOG_STYLE_TABLIST, "{ee3366}Телефонная книга", str_1, "Далее", "Назад");
	return 1;
}
callback: PhoneBookAddCheck(playerid, name[]) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SCM(playerid, COLOR_GREY, !"Данное имя контакта уже используйется");
	else {
	    new text[24];
		GetPVarString(playerid,"name_pb", text, sizeof(text));
		FixSVarString(text);
		new str_q[256];
		mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'", text);
	    mysql_function_query(mysql, str_q, true, "PhoneBookAdd", "ds", playerid, text);
	}
	return 1;
}
callback: PhoneBookAdd(playerid, name[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new text[24];
		GetPVarString(playerid,"name_pb", text, sizeof(text));
		FixSVarString(text);
		new year,month,day;
		getdate(year, month, day);
		new str_q[512];
		mysql_format(mysql,str_q, sizeof str_q, "INSERT INTO `phonebook`(`name`,`number`,`name_add`,`day`,`mounth`,`year`,`data`) VALUES ('%s','%d','%s','%d','%d','%d',NOW())",text,GetPVarInt(playerid, "number_pb"),getName(playerid),getName(playerid),day,month,year);
		mysql_function_query(mysql, str_q, false, "", "");
		SCMf(playerid, 0x3399ffFF, "Вы добавили {ffff33}т. %d{3399ff} в свою телефонную книгу (имя: {ffff33}'%s'{3399ff})", GetPVarInt(playerid, "number_pb"), text);
		DeletePVar(playerid, "name_pb");
	}
	return 1;
}
callback: InfoPhoneBook(playerid) {
	new rows, fields,temp[256],string[256],p_number, p_name[32],p_data[20];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp);
		cache_get_field_content(i, "name", p_name, mysql, 32);
		cache_get_field_content(i, "data", p_data, mysql, 20 );
		format(string,sizeof(string),"%s{FFFFFF}Имя контакта: {3377cc}%s\n{FFFFFF}Номер телефона: {3377cc}%d\n{FFFFFF}Время добавления: {3377cc}%s", string, p_name, p_number, p_data);
	}
	return ShowPlayerDialog(playerid,0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о контакте", string, "Закрыть", "");
}
callback: CallPhoneBook(playerid) {
	new rows, fields,temp[64],p_number;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp); {
			new str_1[256];
			format(str_1, sizeof(str_1),"%d",p_number);
			callcmd::call(playerid,str_1);
		}
	}
	return 1;
}
callback: SmsPhoneBook(playerid) {
	new rows, fields,temp[64],p_number;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp); {
			new text[144];
			GetPVarString(playerid,"sms_pb", text, sizeof(text));
			FixSVarString(text);
			new str_1[256];
			format(str_1, sizeof(str_1),"%d %s",p_number,text);
			callcmd::sms(playerid,str_1);
		}
	}
	return 1;
}
callback: ChangeNumberPhoneBook(playerid) {
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new str_q[256];
	mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `phonebook` SET `number` = '%d' WHERE `name` = '%e' AND `name_add` = '%e'", GetPVarInt(playerid, "number_pb"), name, getName(playerid));
	mysql_function_query(mysql, str_q, false, "", "");
	SCMf(playerid, 0x3399ffFF, "Номер кантакта изменён на {ffff33}%d", GetPVarInt(playerid, "number_pb"));
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "number_pb");
	return 1;
}
callback: ChangeNamePhoneBook(playerid) {
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new text[24];
	GetPVarString(playerid,"c_name", text, sizeof(text));
	FixSVarString(text);
	new str_q[256];
	mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `phonebook` SET `name` = '%e' WHERE `name` = '%e' AND `name_add` = '%e'", text, name, getName(playerid));
	mysql_function_query(mysql, str_q, false, "", "");
	SCMf(playerid, 0x3399ffFF, "Имя контакта изменено на {ffff33}'%s'", text);
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "name_pb");
	return 1;
}
callback: DeletePhoneBook(playerid) 
{
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new str_q[256];
	mysql_format(mysql,str_q, sizeof(str_q), "DELETE FROM `phonebook` WHERE `name` = '%e' AND `name_add` = '%e'", name, getName(playerid));
	mysql_function_query(mysql, str_q, false, "", "");
	SCM(playerid, COLOR_TOMATO, "Вы удалили контакт из телефонной книги");
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "name_pb");
	return 1;
}
stock GetNearestVehicle(playerid) 
{
    for(new i=1,Float:x,Float:y,Float:z; i<MAX_VEHICLES; ++i) 
	{
        if(IsVehicleStreamedIn(i, playerid)) 
		{
            GetVehiclePos(i, x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z)) return i;
        }
    }
    return 0;
}
CMD:bangun(playerid,params[])
{
    if(CheckAdmin(playerid)) return 1;
	new id,day,reason[32];
	if(sscanf(params,"uds[100]",id,day,reason)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /bangun [ID игрока] [дни] [причина]");
    if(!IsPlayerConnected(id))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{id})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(day < 1 || day > 30) return SCM(playerid, COLOR_GREY,"Нельзя меньше 1 дня и больше 30 дней");
    if(PI[id][pAdmin] > PI[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, !"Нельзя применить к игровому мастеру");

	if(PI[params[0]][pOnCapture] == 1)
	{
		AutoKickCapture(params[0]);
		CheckCount(params[0]);
	}

	PI[id][pWeaponLock] = day;
	UpdatePlayerDataInt(id, "bangun", PI[id][pWeaponLock], 25391);
	SendClientMessagef(id, COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам использование оружия на %d дн. Причина: %s", PI[playerid][pAdminNumber], day, reason);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] заблокировал игроку %s использование оружия на %d дн. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(id), day, reason);
	return ResetPlayerWeapons(id);
}
CMD:unbangun(playerid,params[])
{
    if(CheckAdmin(playerid)) return 1;
	if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /unbangun [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	PI[params[0]][pWeaponLock] = 0;
	UpdatePlayerDataInt(params[1], "bangun", PI[params[1]][pWeaponLock],25413);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] снял блокировку на использование оружия игроку %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(params[0]));
	return SendClientMessagef(playerid, COLOR_TOMATO, "Игровой мастер #%d снял Вам блокировку на использование оружия", PI[playerid][pAdminNumber]);
}
callback: LoadBang() 
{
    new rows, fields, temp[60],time = GetTickCount(),gunb;
	new str_q[512];
    cache_get_data(rows, fields);
    if(rows) 
	{
    	for(new g = 0; g < rows; g++) 
		{
         	cache_get_field_content(g, "id", temp), G_DATA[g][data_ID] = strval (temp);
         	cache_get_field_content(g, "bangun", temp), G_DATA[g][data_DAY] = strval (temp);
			TotalG++;
   			if(G_DATA[g][data_DAY] >= 1) 
			{
				G_DATA[g][data_DAY]--;
			    mysql_format(mysql,str_q, sizeof(str_q),"UPDATE `accounts` SET `bangun` = '%d' WHERE `id` = '%d'",G_DATA[g][data_DAY],G_DATA[g][data_ID]);
			    mysql_function_query(mysql, str_q, false, "", "");
			}
			else 
			{
			    mysql_format(mysql,str_q, sizeof(str_q),"UPDATE `accounts` SET `bangun` = '0' WHERE `id` = '%d'",G_DATA[g][data_ID]);
	    		mysql_function_query(mysql, str_q, false, "", "");
	    		gunb++;
			}
		}
		if(console_Debbug == 1) printf("[INFO]  Load gun ban accounts. Load: %d. Unbang: %d. Ex unbang: %d. Time: %d ms.",TotalG,gunb,TotalG-gunb, GetTickCount()-time);
  	}
    return 1;
}
stock NameRang(id) {
	new name[24];
	switch(PI[id][pMember]) {
	    case 1:format(name,sizeof(name),"%s", rang_gov[PI[id][pRang]-1][frName]);
	    case 2:format(name,sizeof(name),"%s", rang_army[PI[id][pRang]-1][frName]);
	    case 3:format(name,sizeof(name),"%s", rang_police[PI[id][pRang]-1][frName]);
	    case 4:format(name,sizeof(name),"%s", rang_hospital[PI[id][pRang]-1][frName]);
     	case 5:format(name,sizeof(name),"%s", rang_skinhead[PI[id][pRang]-1][frName]);
   		case 6:format(name,sizeof(name),"%s", rang_gopota[PI[id][pRang]-1][frName]);
	    case 7:format(name,sizeof(name),"%s", rang_kavkaz[PI[id][pRang]-1][frName]);
	}
    return name;
}
CMD:plus(playerid) 
{
	new str_3[756];
	format(str_3,sizeof(str_3),"\
		{FFFFFF}Примущества, которые даёт подписка {FFA500}"NAMEVIP"\n\n\
		{3366cc}1. Уникальная личность\n\
		{FFFFFF}Ваш никнейм в чате будет выделен постфиксом: Ivan_Ivanov {FFA500}["VIP_TAG"]{FFFFFF}\n\
		{3366cc}2. Топливная карта\n\
		{FFFFFF}Скидка при заправке на АЗС (15%%)\n\
		{3366cc}3. Почётный гражданин\n\
		{FFFFFF}Скидка при оплате квартплаты дома и квартиры (30%%)\n\
		{3366cc}4. Знай меру\n\
		{FFFFFF}Полное отсутствие эффекта зависимости\n\
		{3366cc}5. Меценат\n\
		{FFFFFF}Кол-во донат-поинтов при пополнении увеличивается на 5%%\n\
		{3366cc}6. Рабочий класс\n\
		{FFFFFF}Бесплатный инвентарь на временных работах (для 1 и 2 уровней)\n\
		{3366cc}7. Большие карманы\n\
		{FFFFFF}Вместимость инвентаря увеличивается в 2 раза\n\
		{3366cc}8. Карьерист\n\
		{FFFFFF}Возможность покинуть организацию в любой момент (/leave)\n\
		{3366cc}9. Выгодный тариф\n\
		{FFFFFF}Цены на звонки, SMS и телефонные учлуги снижены\n\
		{3366cc}10. Олды на месте\n\
		{FFFFFF}Вы получите в два раза больше очков опыта за каждый PayDay");
    ShowPlayerDialog(playerid, dialog_DONATE_VIP, DIALOG_STYLE_MSGBOX, !"{ee3366}Приобретение '"NAMEVIP"'", str_3, "Купить", "Отмена");
    return 1;
}
CMD:l(playerid,params[]) 
{
    if(PI[playerid][pLeader] < 1) return 1;
    if(sscanf(params,"s[90]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /l [текст]");
    new string[145];
    format(string, sizeof(string), "[L] %s %s[%d]: %s", Fraction_Name[PI[playerid][pMember]], getName(playerid),playerid,params[0]);
    SendLeaderMessage(0xCD9B6AFF, string);
    return 1;
}
alias:ll("lb");
CMD:ll(playerid,params[]) 
{
    if(PI[playerid][pLeader] < 1) return 1;
    if(sscanf(params,"s[90]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /lb [текст]");
    new string[145];
    format(string, sizeof(string), "(( [L] %s %s[%d]: %s ))", Fraction_Name[PI[playerid][pMember]], getName(playerid),playerid,params[0]);
    SendLeaderMessage(0xCD9B6AFF, string);
    return 1;
}
stock IsPlayerGreenZone(playerid) 
{
	if(PlayerToKvadrat(playerid,  2048.77,1787.74, 2168.30,1845.31) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
	PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
	PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
	PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
	PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
	PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) return PlayerStayInGreenZone(playerid);
	return 1;
}
callback: PayDay(playerid) //+
{
	if(IsPlayerLogged{playerid}) 
	{
		switch(random(1)) 
		{
			case 0: SetWeather(1);
			case 1: SetWeather(1);
		}
		new hour, minute, second;
		gettime(hour, minute, second);
		SetWorldTime(hour);

		if(hour == 0 && minute == 0) 
		{
			PI[playerid][data_TIME] = 0;
			PI[playerid][pHealthPackKD] = 0;
			mysql_query(mysql, "UPDATE `accounts` SET time = '0' WHERE time != '0'");
			mysql_query(mysql, "UPDATE `accounts` SET reports = '0' WHERE reports != '0'");
			mysql_query(mysql, "UPDATE `accounts` SET HEALPACKSKLAD = '0'");
		}

		SCMf(playerid, -1, "Московское время {3377CC}%02d:%02d", hour, minute);
		SCM(playerid, -1, !"Клиент банка пгт. Батырево:");
		SCM(playerid, -1, !"____________________________");
		if(PI[playerid][data_AFK] > 5) 
		{
			SCM(playerid, COLOR_GREY, !"Для получения PayDay необходимо не находиться на паузе");
			SCM(playerid, -1, "____________________________");
			return 1;
		}
		if(PI[playerid][data_TIME] < 20) 
		{
			SCM(playerid, COLOR_GREY, !"Для получения PayDay необходимо отыграть минимум 20 минут");
			SCM(playerid, -1, "____________________________");
			return 1;
		}
		switch(PI[playerid][pMember]) 
		{
			case 1..4: PI[playerid][pPayDayMoney] = 3000+(750*PI[playerid][pRang]);
			case 5,6,7:
			{
				if(PI[playerid][pRang] < 9) PI[playerid][pPayDayMoney] = 15000+PI[playerid][pPayDayMoney];
				else PI[playerid][pPayDayMoney] = 5000+PI[playerid][pPayDayMoney];
			}
		}

		PI[playerid][data_EXP]++;
		if(PI[playerid][pRespect] < 100) PI[playerid][pRespect]++;
		if(PI[playerid][pWanted] > 0) 
		{
			PI[playerid][pWanted]--;
			SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
		}

		new AdminPayDay = 15000*PI[playerid][pAdmin];

		PI[playerid][pBank] += PI[playerid][pPayDayMoney];
		SCMf(playerid, -1, "Зарплата: {ee3366}%d руб", PI[playerid][pPayDayMoney]);
		if(PI[playerid][pAdmin] != 0) SCMf(playerid, -1, "Зарплата игрового мастера: {ee3366}%d руб", AdminPayDay);
		SCMf(playerid, -1, "Текущий баланс зарплатного счёта: {ee3366}%d руб", PI[playerid][pBank]);

		if(PI[playerid][pPayDayMoney] > 0)
		{
			transfer_log[0] = EOS, f(transfer_log, 26, "+ Зарплата %d руб", PI[playerid][pPayDayMoney]);
			TransferBank_log(playerid, PI[playerid][pPayDayMoney], transfer_log);
		}

		PI[playerid][pPayDayMoney] = 0;
		CheckNextLevel(playerid);

		SCM(playerid, -1, !"____________________________");

		SavePlayerData(playerid);
	}
	else return SCM(playerid, COLOR_GREY, !"Вы не авторизированы для получения зарплаты");

	return 1;
}
CMD:lname(playerid, params[]) {
    if(PI[playerid][pRang] < 10) return 1;
	if(sscanf(params, "s[30]", params[0]))return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /lname [имя]");
	new str_q[256];
	mysql_format(mysql, str_q, sizeof str_q, "SELECT `id` FROM `accounts` WHERE `Name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(mysql, str_q, "nameleader_check", "i", playerid);
	return 1 ;
}
callback:nameleader_check(playerid) {
	new rows, fields ;
	cache_get_data(rows, fields);
	if (!rows) return SCM(playerid, COLOR_GREY,"Не удалось найти игроков с указанным никнеймом");
	new db_increment = cache_get_field_content_int(0, "id", mysql);
	new str_q[256];
	format(str_q, sizeof str_q, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(mysql, str_q, "sql_lname", "i", playerid);
	return 1 ;
}
callback:sql_lname(playerid) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SCM(playerid, COLOR_GREY,"Игрок не менял имена");
	new str_1[256];
	strcat(str_1, "Старый никнейм - Новый никнейм - Дата изменения\n\n");
	for(new j = 0; j < rows; j ++ ) {
		new _nh_oldname[MAX_PLAYER_NAME ],_nh_newname[MAX_PLAYER_NAME ],_nh_date[20],line_string[68];
		cache_get_field_content(j, "nh_oldname", _nh_oldname, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, mysql, 20 );
		format(line_string, sizeof (line_string), "%s - %s - %s\n", _nh_oldname, _nh_newname, _nh_date);
		strcat(str_1, line_string);
	}
	return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "История никнеймов", str_1, "Закрыть", "");
}
cmd:givegod(playerid, params[]) 
{
    if(CheckAdmin(playerid, 3)) return 1;
    if(sscanf(params, "d", params[0]))	return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givegod [ID игрока]");
	switch(PI[params[0]][pAdminStatus]) 
	{
		case 0: 
		{
    	    PI[params[0]][pAdminStatus] = 1;
			SetPlayerHealthAC(params[0], 100);
			SCMf(playerid, COLOR_YELLOW,"Вы установили режим бога игроку %s", getName(params[0]));
			SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал режим бога игроку %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),playerid,getName(params[0]));
		}
		case 1: 
		{
    	    PI[params[0]][pAdminStatus] = 0;
			SetPlayerHealthAC(params[0], 100.0);
			SCMf(playerid, COLOR_YELLOW,"Вы сняли режим бога игроку %s", getName(params[0]));
			SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] снял режим бога игроку %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),playerid,getName(params[0]));
		}
	}
	return 1;
}
callback: EditGroup(playerid) {
    new rows, fields;
    new gname[MAX_PLAYER_NAME],string[256],str_tablist[256];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, MAX_PLAYER_NAME);
		format(string,sizeof(string),"%s%s\n", string, gname);
	}
	format(str_tablist,sizeof(str_tablist),"{FFFF99}Создать группу\n%s",string);
	ShowPlayerDialog(playerid,3211,DIALOG_STYLE_LIST, "{ee3366}Управление группами", str_tablist, "Изменить", "");
	return 1;
}
stock EditGroups(playerid) 
{
	ShowPlayerDialog(playerid,3212,DIALOG_STYLE_LIST, "{ee3366}Управление группами",
	"1. Информация\n\
	2. Список участников\n\
	3. Сделать стандартной\n\
	4. Изменить мужской скин\n\
	5. Изменить женский скин\n\
	6. Переименовать\n\
	{FFFF99}7. Удалить", "Выбрать", "Закрыть");
}
CMD:setgroup(playerid,params[]) {
    if(PI[playerid][pRang] < 9) return SCM(playerid, COLOR_GREY, "Данная команда доступна лидерам организаций и их заместителям");
    if(sscanf(params, "u",params[0])) return SendClientMessage (playerid, COLOR_GREY,"Используйте: /setgroup [ID игрока]");
	if(!IsPlayerConnected(params[0])) return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
    if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY,"Данный игрок не состоит в Вашей организации");
	SetPVarInt(playerid, "idgroup", params[0]);
	new str_q[256];
	mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][pMember]);
	mysql_function_query(mysql, str_q, true, "SetGroup", "d", playerid);
	SetPVarInt(playerid, "idg", params[0]);
	return 1;
}
callback: SetGroup(playerid) 
{
    new rows, fields;
    new gname[45];
	new str_1[128]; 
	new str_3[512];

    cache_get_data(rows, fields);
    str_1[0] = EOS;

    for (new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, sizeof(gname) - 1);
		strcat(str_1, gname, sizeof(str_1));
		strcat(str_1, "\n", sizeof(str_1));
	}

	format(str_3, sizeof(str_3), "{FFFF99}Удалить из группы\n%s", str_1);
	ShowPlayerDialog(playerid, 3210, DIALOG_STYLE_LIST, "{ee3366}Выбор группы игрока", str_3, "Выбрать", "");
	return 1;
}
callback: LoadGroups() {
    new rows, fields, temp[60],time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) {
    	for(new g = 0; g < rows; g++) {
	        cache_get_field_content(g, "id", temp), group[g][g_ID] = strval (temp);
	        cache_get_field_content(g, "fraction", group[g][g_FRACTION], mysql, MAX_PLAYER_NAME);
	        cache_get_field_content(g, "group_name", group[g][g_NAME], mysql, 50);
	        cache_get_field_content(g, "skin_m", temp), group[g][g_SKIN] = strval (temp);
	        cache_get_field_content(g, "skin_g", temp), group[g][g_SKING] = strval (temp);
	        cache_get_field_content(g, "standart", temp), group[g][g_STANDART] = strval (temp);
	    }
        if(console_Debbug == 1) printf("[INFO]  Load group. Load: %d g. Time: %d ms.",TotalGroup,GetTickCount()-time);
  	}
    return 1;
}
callback: SetGroupPlayer(playerid) {
    new rows, fields;
    new id,temp[32],gname[32],skin_m,skin_g;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), id = strval(temp);
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		cache_get_field_content(i, "skin_m", temp), skin_m = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skin_g = strval(temp);
		PI[GetPVarInt(playerid, "idg")][data_GID] = id;
		UpdatePlayerDataInt(GetPVarInt(playerid, "idg"), "GID", PI[GetPVarInt(playerid, "idg")][data_GID],25983);
		strmid(PI[GetPVarInt(playerid, "idg")][pGroupName], gname, 0, strlen(gname), 25);
	}
	if(PI[GetPVarInt(playerid, "idg")][pRang] != 10) if(skin_m == 236) return SCM(playerid, COLOR_GREY,"Вы не можете выдать группу лидера");
	if(PI[GetPVarInt(playerid, "idg")][pRang] != 10) if(skin_m == 117) return SCM(playerid, COLOR_GREY,"Вы не можете выдать группу лидера");
	if(PI[GetPVarInt(playerid, "idg")][pRang] != 10) if(skin_m == 118) return SCM(playerid, COLOR_GREY,"Вы не можете выдать группу лидера");
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	static name2[24];
	SetString(name2, NameRang(GetPVarInt(playerid, "idg")));
	name2 = NameRang(GetPVarInt(playerid, "idg"));
	SendFractionMessagef(PI[playerid][pMember], 0x69b867FF, "[R] %s %s[%d] включил %s %s[%d] в группу ('%s')",name,getName(playerid),playerid,name2,PI[GetPVarInt(playerid, "idg")][pName], GetPVarInt(playerid, "idg"), PI[GetPVarInt(playerid, "idg")][pGroupName]);

	if(PI[GetPVarInt(playerid, "idg")][pRang] < 10)
	{
		if(PI[GetPVarInt(playerid, "idg")][pSex] == 1)
		{
		    if(skin_m > 0) {
				PI[GetPVarInt(playerid, "idg")][pOrgSkin] = skin_m;
				SetPlayerSkinAC(GetPVarInt(playerid, "idg"),PI[GetPVarInt(playerid, "idg")][pOrgSkin]);
			}
		}
		if(PI[GetPVarInt(playerid, "idg")][pSex] == 2)
		{
		    if(skin_g > 0) {
				PI[GetPVarInt(playerid, "idg")][pOrgSkin] = skin_g;
				SetPlayerSkinAC(GetPVarInt(playerid, "idg"),PI[GetPVarInt(playerid, "idg")][pOrgSkin]);
			}
		}
	}
	DeletePVar(playerid, "idg");
	return 1;
}
callback: GPLAYER(playerid) {
    new rows, fields;
    new gname[45];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
        if(rows) {
			cache_get_field_content(i, "group_name", gname, mysql, 44);
			strmid(PI[playerid][pGroupName], gname, 0, strlen(gname), 25);
		}
		else {
		    PI[playerid][data_GID] = -1;
			UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26027);
		}
	}
    return 1;
}
callback: InfoGroup(playerid) {
    new rows, fields,gname[32],temp[60],g,m,stand;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		cache_get_field_content(g, "skin_m", temp), m = strval (temp);
		cache_get_field_content(g, "skin_g", temp), g = strval (temp);
		cache_get_field_content(g, "standart", temp), stand = strval (temp);
		new standart[64];
		switch(stand) {
			case 0: format(standart,sizeof(standart),"Нет");
			case 1: format(standart,sizeof(standart),"Да");
		}
		new skinm[64];
		switch(m) {
			case 0: format(skinm,sizeof(skinm),"Нет");
			case 1..311: format(skinm,sizeof(skinm),"%d", m);
		}
		new sking[64];
		switch(g) {
			case 0: format(sking,sizeof(sking),"Нет");
			case 1..311: format(sking,sizeof(sking),"%d", g);
		}
		new str_i[144];
		format(str_i,sizeof(str_i),"\
		{FFFFFF}Название: {3377cc}%s{FFFFFF}\n\
		Мужской скин: {3377cc}%s{FFFFFF}\n\
		Женский скин: {3377cc}%s{FFFFFF}\n\
		Стандартная: {3377cc}%s{FFFFFF}",gname,skinm,sking,standart);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация о группе", str_i, "Закрыть", "");
	}
    return 1;
}
callback: AllMGroup(playerid) 
{
    new rows, fields,temp[10];
    new name[MAX_PLAYER_NAME],rank, LoginDate[30], str_1[512];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) 
	{
		cache_get_field_content(i, "name", name, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(i, "LoginDate", LoginDate, mysql, 30);
		cache_get_field_content(i, "rank", temp), rank = strval (temp);
		format(str_1,sizeof(str_1),"%s {FFFFFF}%s\t%d\t%s\n", str_1, name, rank, LoginDate);
	}
	ShowPlayerDialogf(playerid,0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Список участников организации с группой", "Закрыть", "", "Имя\tРанг\tПоследний вход\n%s",str_1);
	return 1;
}
callback: idgroup(playerid) 
{
    new rows, fields,temp[10];
    new idg;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) 
	{
		cache_get_field_content(i, "id", temp), idg = strval (temp);
		new str_q[185];
		mysql_format(mysql,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `GID` = '%d'",idg);
		mysql_function_query(mysql, str_q, true, "AllMGroup", "d", playerid);
	}
	return 1;
}
callback: CheckStandart(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", "{AFAFAF}В Вашей организации уже есть стандартная группа.\n{FFFF99}Вы можете переименовать её или же изменить скин.", "Закрыть", "");
    else {
		new grouptext[24];
		GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
		FixSVarString(grouptext);
		new str_q[256];
		mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], grouptext);
		mysql_function_query(mysql, str_q, true, "SetStandart", "d", playerid);
		DeletePVar(playerid, "gtext");
	}
	return 1;
}
callback: SetStandart(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		new str_q[256];
		mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `group` SET `standart` = '1' WHERE `group_name` = '%e' AND `fraction` = '%d'",gname,PI[playerid][pMember]);
		mysql_function_query(mysql, str_q, false, "", "");
		SCMf(playerid, COLOR_GREENNEW, "Вы успешно сделали группу {FFFF00}('%s'){00aa33} стандартной",gname);
	}
	return 1;
}
callback: SetPlayerStandartGroup(playerid) 
{
    new rows, fields, temp[10];
    new IDGroup, skinMale, skinFemale, GroupName[25];

    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) 
	{
		cache_get_field_content(i, "id", temp), IDGroup = strval (temp);
		cache_get_field_content(i, "skin_m", temp), skinMale = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skinFemale = strval(temp);
		cache_get_field_content(i, "group_name", GroupName, mysql, 25);
		strmid(PI[playerid][pGroupName], GroupName, 0, strlen(GroupName), 25);

		PI[playerid][data_GID] = IDGroup;
		UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26133);

		if(PI[playerid][pRang] != 10)
		{
			if(PI[playerid][pSex] == 1)
			{
				PI[playerid][pOrgSkin] = skinMale;
				SetPlayerSkinAC(playerid, PI[playerid][pOrgSkin]);
			}
			if(PI[playerid][pSex] == 2)
			{
				PI[playerid][pOrgSkin] = skinFemale;
				SetPlayerSkinAC(playerid, PI[playerid][pOrgSkin]);
			}
		}
	}
	return 1;
}
callback: ChangeSkinM(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		new str_q[512];
		mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `group` SET `skin_m` = '%d' WHERE `group_name` = '%e' AND `fraction` = '%d'",GetPVarInt(playerid, "SKIN"),gname,PI[playerid][pMember]);
		mysql_function_query(mysql, str_q, false, "", "");
		if(GetPVarInt(playerid, "SKIN") > 0) SCMf(playerid, COLOR_GREENNEW, "Вы успешно изменили скин в группе {FFFF00}('%s'){00aa33} на {FFFF00}('%d')",gname,GetPVarInt(playerid, "SKIN"));
		else SCMf(playerid, COLOR_GREENNEW, "Вы успешно сбросили скин в группе {FFFF00}('%s')",gname);
	}
	return 1;
}
callback: ChangeSkinG(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		new str_q[512];
		mysql_format(mysql,str_q, sizeof(str_q), "UPDATE `group` SET `skin_g` = '%d' WHERE `group_name` = '%e' AND `fraction` = '%d'",GetPVarInt(playerid, "SKIN"),gname,PI[playerid][pMember]);
		mysql_function_query(mysql, str_q, false, "", "");
		if(GetPVarInt(playerid, "SKIN") > 0) SCMf(playerid, COLOR_GREENNEW, "Вы успешно изменили скин в группе {FFFF00}('%s'){00aa33} на {FFFF00}('%d')",gname,GetPVarInt(playerid, "SKIN"));
		else SCMf(playerid, COLOR_GREENNEW, "Вы успешно сбросили скин в группе {FFFF00}('%s')",gname);
	}
	return 1;
}
callback:CheckDelete(playerid) {
    new rows, fields,s,gname[32],temp[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "standart", temp), s = strval(temp);
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		if(s != 1) {
			new str_q[512];
			mysql_format(mysql, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember], gname);
			mysql_function_query(mysql, str_q, true, "DeleteGroup", "d", playerid);
		}
		else ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Ошибка", "{FFFFFF}Нельзя удалить стандартную группу!\n{FFFF99}Вы можете переименовать её или же изменить скин.", "Закрыть", "");
	}
	return 1;
}
callback: DeleteGroup(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		SendFractionMessagef(PI[playerid][pMember], COLOR_TOMATO, "[R] %s удалил группу '%s'",getName(playerid),gname);
		SCMf(playerid, COLOR_GREENNEW, "Вы успешно удалили группу {FFFF00}('%s')",gname);
    	new str_q[256];
    	mysql_format(mysql,str_q, sizeof(str_q), "DELETE FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][pMember],gname);
    	mysql_function_query(mysql, str_q, false, "", "");
	}
	return 1;
}
callback: ChangeServer0() 
{
	SendRconCommand("hostname "NAMESERVER" | Обновление");
	SetTimer("ChangeServer1", 3000, false);
}
callback: ChangeServer1() 
{
	SendRconCommand("hostname "NAMESERVER" | Первый сервер");
	SetTimer("ChangeServer1", 3000, false);
}
stock ClearGroup(playerid) {
	PI[playerid][data_GID] = -1;
	UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26243);
}
CMD:setstat(playerid, params[]) 
{
    if(CheckAdmin(playerid, 8)) return 1;
    new id, idf, amount;
    if(sscanf(params,"udd",id,idf,amount)) {
		SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /setstat [ID] [ID-функции] [кол-во]");
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Параметры", "\
		{FFFFFF}Функция №1 - отвечает за деньги\n\
		Функция №2 - отвечает за статус ВИП\n\
		Функция №3 - отвечает за сим-карту\n\
		Функция №4 - отвечает за донат-поинты\n\
		Функция №5 - отвечает за количество масок\n\
		Функция №6 - отвечает за количество патрон\n\
		Функция №7 - отвечает за количество металла\n\
		Функция №8 - отвечает за количество веществ\n\
		Функция №9 - отвечает за количество законопослушности\n\
		Функция №10 - отвечает за телефон\n\
		Функция №11 - отвечает за количество аптечек\n\
		Функция №12 - отвечает за игровой уровень", "Закрыть", "");
		return 1;
	}
	static text[35];
	switch(idf) {
		case 0: {
			return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Параметры", "\
			{FFFFFF}Функция №1 - отвечает за деньги\n\
			Функция №2 - отвечает за статус ВИП\n\
			Функция №3 - отвечает за сим-карту\n\
			Функция №4 - отвечает за донат-поинты\n\
			Функция №5 - отвечает за количество масок\n\
			Функция №6 - отвечает за количество патрон\n\
			Функция №7 - отвечает за количество металла\n\
			Функция №8 - отвечает за количество веществ\n\
			Функция №9 - отвечает за количество законопослушности\n\
			Функция №10 - отвечает за телефон\n\
			Функция №11 - отвечает за количество аптечек\n\
			Функция №12 - отвечает за игровой уровень", "Закрыть", "");
		}
	    case 1:	GivePlayerMoneyLog(id,amount), text = "деньги";
	    case 2: {
			PI[id][data_VIP] = amount;
			UpdatePlayerDataInt(id, "vip", PI[id][data_VIP],26272);
			text = "вип";
	    }
	    case 3: {
	        PI[id][data_NUMBER] = amount;
			UpdatePlayerDataInt(id, "number", PI[id][data_NUMBER],26277);
			text = "номер телефона";
	    }
	    case 4: {
	        PI[id][pDonate] = amount;
			UpdatePlayerDataInt(id, "Donate", PI[id][pDonate],26282);
			text = "донат-поинты";
	    }
	    case 5: {
	        PI[id][data_MASK] = amount;
			UpdatePlayerDataInt(id, "mask", PI[id][data_MASK],26287);
			text = "маски";
	    }
	    case 6: {
	        PI[id][data_PATR] = amount;
			UpdatePlayerDataInt(id, "patr", PI[id][data_PATR],26292);
			text = "патроны";
	    }
	    case 7: {
	        PI[id][data_MET] = amount;
			UpdatePlayerDataInt(id, "met", PI[id][data_MET],26297);
			text = "металл";
	    }
	    case 8: {
	        PI[id][data_DRUGS] = amount;
			UpdatePlayerDataInt(id, "drugs", PI[id][data_DRUGS],26302);
			text = "вещества";
	    }
	    case 9: {
         	PI[id][pRespect] = amount;
			UpdatePlayerDataInt(id, "Respect", PI[id][pRespect],26307);
			text = "законопослушность";
	    }
		case 10: {
         	PI[id][data_PHONE] = amount;
			UpdatePlayerDataInt(id, "phone", PI[id][data_PHONE],26312);
			text = "телефон";
	    }
		case 11: {
         	PI[id][pHealPack] = amount;
			UpdatePlayerDataInt(id, "healthchest", PI[id][pHealPack],26317);
			text = "аптечки";
	    }
		case 12: {
         	PI[id][pLevel] = amount;
			UpdatePlayerDataIntName(id, "Level", PI[id][pLevel],26322);
			SetPlayerScore(id,PI[id][pLevel]);
			text = "уровень";
	    }
	}
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] изменил игроку %s параметр '%s' на %d", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),playerid,PI[id][pName],text,amount);
	return SavePlayerData(id);
}
public OnPlayerLeaveDynamicArea(playerid, areaid) 
{
	if(areaid == ArmyStorageZone) 
	{
		KillTimer(TimetTheftCartridges[playerid]);
		cef_emit_event(playerid, "hide-ammo-notify");
	}
	/*if(areaid == capturezonespawn) 
	{
		if(GangWarStatus > 0) 
		{
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133)) 
			{
				if(PI[playerid][pMember] != Command[0] && PI[playerid][pMember] != Command[1] )
				if(PI[playerid][pAntiCLMenu] != 1 )
				{
					SetPlayerPosAC(playerid, 1428.1783,-1150.3796,11.7327);
					SCM(playerid, COLOR_LIGHTBLUE, "Вы попали в зону стрелы и были возвращены за eё пределы");
				}
				else 
				{
					if(PI[playerid][data_MASK_M] == 1) 
					{
						SetPlayerColorEx(playerid);
   						PI[playerid][data_MASK_M] = 0;
						SCM(playerid, COLOR_LIGHTBLUE, "В данный момент идёт захват территории с вас автоматический была снята маска");
					}
				}
				else 
				{
				        if(PI[playerid][pAntiCLMenu] == 1) 
						{
						SCM(playerid, COLOR_LIGHTBLUE, "У вас имеется запрет на проведенние стрелы");
						SetPlayerPosAC(playerid, 1428.1783,-1150.3796,11.7327);
					}
				}
				return 1;
		    }
	    }
	}*/
	return 1;
}
callback: setleaderskin(playerid) {
    new rows, fields,temp[10];
    new idg,skin_m,skin_g,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), idg = strval (temp);
		cache_get_field_content(i, "skin_m", temp), skin_m = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skin_g = strval(temp);
		cache_get_field_content(i, "group_name", gname, mysql, 32);
		strmid(PI[playerid][pGroupName], gname, 0, strlen(gname), 25);
		PI[playerid][data_GID] = idg;
		UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26486);
		if(PI[playerid][pSex] == 1)
		{
			PI[playerid][pOrgSkin] = skin_m;
			SetPlayerSkinAC(playerid,PI[playerid][pOrgSkin]);
			UpdatePlayerDataInt(playerid, "skinm", PI[playerid][pOrgSkin],26491);
		}
		if(PI[playerid][pSex] == 2)
		{
			PI[playerid][pOrgSkin] = skin_g;
			SetPlayerSkinAC(playerid,PI[playerid][pOrgSkin]);
			UpdatePlayerDataInt(playerid, "skinm", PI[playerid][pOrgSkin],26497);
		}
	}
	return 1;
}
stock SetCarPark(playerid) 
{
	new str_q[512],str_k[256];
	str_q = "UPDATE `accounts` SET ";
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposx", 2304.5645);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposy", -1827.1555);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposz", 22.2345);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpangle", 270.4927);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_k,sizeof(str_k)," WHERE `Name` = '%s' LIMIT 1",getName(playerid));
	strcat(str_q, str_k);
	mysql_function_query(mysql, str_q, false, "", "");
	PI[playerid][data_CAR_POSX] = 2304.5645;
	PI[playerid][data_CAR_POSY] = -1827.1555;
	PI[playerid][data_CAR_POSZ] = 22.2345;
	PI[playerid][data_CAR_ANGLE] = 270.4927;
}
stock CarInformation(playerid) 
{
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Руководство по эксплуатации", "\
	{FFFFFF}Этот гайд поможем Вам изучить управление новым транспортом.\n\
	{FFFFFF}Меню личного транспорта - команда {3366cc}/car\n\n\
	{3366cc}1. Загрузка:\n\
	{FFFFFF}Чтобы загрузить транспорт выйдите из автосалона на парковку, затем введите {3366cc}/car{FFFFFF},\n\
	{FFFFFF}найдите в списке {3366cc}'%s'{FFFFFF} и нажмите 'Загрузить'. Транспорт повявится на парковке.\n\n\
	{3366cc}2. Выгрузка:\n\
	{FFFFFF}Чтобы выгрузить транспорт введите {3366cc}/car{FFFFFF} и выберите пункт 'Выгрузить'.\n\
	{FFFFFF}Транспорт будет автоматически выгружен в случае выхода из игры.\n\n\
	{3366cc}3. Ключ зажигания:\n\
	{FFFFFF}Вставив ключ зажигания {3366cc}(команда /key){FFFFFF}, Вы сможете завести двигатель.\n\
	{FFFFFF}Обратите внимание, что если Ваш  транспорт будет открыт, его сможет угнать другой игрок!\n\n\
	{3366cc}4. Центральный замок:\n\
	{FFFFFF}Открытие и закрытие дверей осуществляется {3366cc}командой /lock{FFFFFF}.\n\
	{FFFFFF}Для управления центральным замком необходимо находиться рядом с транспортом\n\n\
	{3366cc}5. Парковка:\n\
	{FFFFFF}Вы можете припарковать Ваш транспорт командой {3366cc}/park{FFFFFF} практически везде.\n\
	{FFFFFF}После парковки транспорт будет загружаться на новой позиции (например, около дома).\n\n\
	{FFA53366cc00}Удачи на дороне, соблюдайте Правила Дорожного Движения!", "Закрыть", "");
	return 1;
}
cmd:giveskill(playerid, params[]) 
{
    if(CheckAdmin(playerid, 4)) return 1;
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /giveskill [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	PI[params[0]][pSkillPistol] = 100;
	PI[params[0]][pSkillSDPistol] = 100;
	PI[params[0]][pSkillDeagle] = 100;
	PI[params[0]][pSkillShotgun] = 100;
	PI[params[0]][pSkillMP5] = 100;
	PI[params[0]][data_AK47] = 100;
	PI[params[0]][pSkillRifle] = 100;
	return SetPlayerSkills(params[0]);
}
CMD:settings(playerid) return ShowSettings(playerid);
stock ShowSettings(playerid) 
{
	return ShowPlayerDialog(playerid, dialog_SETTING_PER, DIALOG_STYLE_LIST, "{ee3366}Настройки аккаунта", "\
	1. Изменить пароль\t\t\t{FFFF99}...\n\
	2. Изменить стиль боя\t\t\t{FFFF99}...\n\
	3. Изменить стиль походки\t\t{FFFF99}...\n\
	4. Управление аксессуарами\t\t{FFFF99}...", "Изменить", "Назад");
}
cmd:i(playerid) 
{
	return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "{ee3366}Получение предметов инвентаря", "\
	1. Получить скин\n\
	2. Получить игровую валюту\n\
	3. Получить транспортное средство\n\
	4. Получить донат-рубли\n\
	5. Активировать бустер", "Далее", "Закрыть");
}
stock GenerateBanCode(size)
{
    static bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
        numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
        code[7];
	code[0] = EOS;
    if(size > sizeof(code)) size = sizeof(code);
    for(new i = 0; i < size; i ++) {
        switch(random(2)) {
            case 0: strcat(code, bigletters[random(sizeof(bigletters))]);
            case 1: strcat(code, numbers[random(sizeof(numbers))]);
        }
    }
    return code;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);
callback: CheckBan(playerid) 
{
	if(console_Debbug == 1) printf("[CheckBan]: Player %s, pAdmin: %d, pID %d", getName(playerid), PI[playerid][pAdmin], PI[playerid][pID]);

    new rows, fields,temp[174];
    cache_get_data(rows, fields);
    if(rows) 
	{
 	    new day, text[50], id;
        cache_get_field_content(0, "id",temp), id = strval (temp);
        cache_get_field_content(0, "day",temp), day = strval (temp);
		cache_get_field_content(0, "text", text, mysql);
		ShowPlayerDialogf(playerid, dialog_BAN, DIALOG_STYLE_MSGBOX, !"{ee3366}Аккаунт заблокирован", "Закрыть", "", "{ffffff}Никнейм: {396cac}%s\n\
		{FFFFFF}ID аккаунта: {396cac}%s\n\
		{ffffff}Причина блокировки: {FFFFFF}%s\n\
		{ffffff}Срок блокировки: {FFFFFF}%d дня/дней\n\
		{d6d886}Советуем сделать скриншот (клавиша F8), чтобы иметь\n\
		{d6d886}возможность обжаловать бан на форуме", getName(playerid),id,text,day);
	 	Kick(playerid);
	 	return 1;
  	}
	if(!rows) 
	{
		if(PI[playerid][pID] != -1) 
		{
			if(console_Debbug == 1) printf("Player %s have: data_ID %d, ADMIN %d, sendplayer too PlayerLogin.", PI[playerid][pName], PI[playerid][pID], PI[playerid][pAdmin]);
			PlayerLogin(playerid);
		}
		else 
		{
			if(console_Debbug == 1) printf("Player %s have: data_ID %d, ADMIN %d, sendplayer too PlayerRegistration.", PI[playerid][pName], PI[playerid][pID], PI[playerid][pAdmin]);
			PlayerRegistration(playerid);
		}
	}
    return 1;
}
callback: MinutTimer() 
{
	if(m_kavkaz > 0) m_kavkaz--,SaveWarehouse();
	if(m_gopota > 0) m_gopota--,SaveWarehouse();
	if(m_skinhead > 0) m_skinhead--,SaveWarehouse();
	return 1;
}
callback: GzInfo(playerid) {
    new rows, fields, GzS, GzG, GzO;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
	   	if(gz_info[i][gzopg] == 5) GzS++;
        if(gz_info[i][gzopg] == 6) GzG++;
        if(gz_info[i][gzopg] == 7) GzO++;
    }
	static time[15],time1[15],time2[15];
	if(m_kavkaz > 60) time = "час(ов)";
	else time = "минут(а)";
	if(m_skinhead > 60) time1 = "час(ов)";
	else time1 = "минут(а)";
	if(m_gopota > 60) time2 = "час(ов)";
	else time2 = "минут(а)";
	new gz[40],gz1[40],gz2[40];
	switch(m_kavkaz) {
	    case 0: format(gz, sizeof gz, "-");
		case 1..3000: {
			new t;
			if(m_kavkaz > 60) t = m_kavkaz/60;
			else t = m_kavkaz;
			format(gz, sizeof gz, "%d %s", t, time);
		}
	}
	switch(m_skinhead) {
	    case 0: format(gz1, sizeof gz1, "-");
		case 1..3000: {
			new t;
			if(m_skinhead > 60) t = m_skinhead/60;
			else t = m_skinhead;
			format(gz1, sizeof gz1, "%d %s", t, time1);		
		}
	}
	switch(m_gopota) {
	    case 0: format(gz2, sizeof gz2, "-");
		case 1..3000: {
			new t;
			if(m_gopota > 60) t = m_gopota/60;
			else t = m_gopota;
			format(gz2, sizeof gz2, "%d %s", t, time2);
		}
	}	
	new str_3[365];
    format(str_3, sizeof(str_3), "\
	{663399}Скинхеды {FFFFFF}(кол-во территорий: {4086ff}%d{FFFFFF})\nЗаморозка стрелы: %s\n\n\
	{66CCFF}Гопота {FFFFFF}(кол-во территорий: {4086ff}%d{FFFFFF})\nЗаморозка стрелы: %s\n\n\
	{339933}Кавказцы {FFFFFF}(кол-во территорий: {4086ff}%d{FFFFFF})\nЗаморозка стрелы: %s", GzS,gz1, GzG,gz2, GzO,gz);
    return ShowPlayerDialog(playerid,0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация об ОПГ", str_3, "Закрыть", "");
}
cmd:stopwar(playerid) 
{
    if(CheckAdmin(playerid, 5)) return 1;
	SetPVarInt(playerid,"frac", playerid);
	return ShowPlayerDialog(playerid, 7610, DIALOG_STYLE_LIST, "{ee3366}Выберете организацию", "1. Скинхеды\n2. Гопота\n3. Кавказцы", "Выбрать", "Отмена");
}
stock ChangeSkin(playerid) {
    if(PI[playerid][pSex] == 1) {
    	switch(random(4)) {
			case 0: {
				PI[playerid][pSkin] = 79;
				SetPlayerSkinAC(playerid, 79);
			}
			case 1: {
				PI[playerid][pSkin] = 135;
				SetPlayerSkinAC(playerid, 135);
			}
			case 2: {
				PI[playerid][pSkin] = 137;
				SetPlayerSkinAC(playerid, 137);
			}
			case 3: {
				PI[playerid][pSkin] = 230;
				SetPlayerSkinAC(playerid, 230);
			}
		}
    }
    else if(PI[playerid][pSex] == 2) {
    	switch(random(3)) {
			case 0: {
				PI[playerid][pSkin] = 10;
				SetPlayerSkinAC(playerid, 10);
			}
			case 1: {
				PI[playerid][pSkin] = 39;
				SetPlayerSkinAC(playerid, 39);
			}
			case 2: {
				PI[playerid][pSkin] = 54;
				SetPlayerSkinAC(playerid, 54);
			}
		}
    }
	return 1;
}
CMD:editmp(playerid) 
{
    if(CheckAdmin(playerid)) return 1;
	if(gomp_status == false) return SCM(playerid, COLOR_GREY,"Мероприятие не создано. (/setmp)");
	new plmp;
    for(new i = 0; i < MAX_PLAYERS; i++) 
	{
        if(!IsPlayerConnected(i)) continue;
        if(PI[i][pOnMP] == 1) plmp++;
    }
	new str_3[365];
	format(str_3, sizeof str_3, "\
	1. Изменить позицию телепорта\n\
	2. Выдать одежду в радиусе\n\
	3. Выдать оружие в радиусе\n\
	4. Выдать бронижелет в радиусе\n\
	5. Выдать здоровья в радиусе\n\
	{FFFF99}Включить/Выключить ТК на МП.\n\
	{FFFF99}Завершить МП\n\
	{FFFF99}Завершить МП (без респавна)\n\
	{FFFF99}Игроков на МП: %d", plmp);
    return ShowPlayerDialog(playerid, 5898, DIALOG_STYLE_LIST, "{ee3366}Настройки МП", str_3, "Выбрать", "Закрыть");
}
CMD:setmp(playerid)
{
    if(CheckAdmin(playerid)) return 1;
	if(gomp_status == false) 
	{
		GetPlayerPos(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
        gomp_status = true;
		mptk = false;
		SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] создал точку телепорта на мероприятие", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid);
		PI[playerid][pAdminEvents]++;
		UpdatePlayerDataInt(playerid, "AdminEvents", PI[playerid][pAdminEvents],27190);
	}
	else SCM(playerid, COLOR_GREY, !"Точка телепорта уже создана, настроки: /editmp");
	return 1;
}
CMD:mp(playerid,params[])
{
	if(gomp_status == false) return SCM(playerid, COLOR_GREY, !"Игровой мастер не создал точку телепорта");
	if(PI[playerid][pJail] != 0) return SCM(playerid, COLOR_GREY, !"Нельзя телепортироваться на мероприятие в КПЗ");
	if(PI[playerid][pDemorgan] != 0) return SCM(playerid, COLOR_GREY, !"Нельзя телепортироваться на мероприятие в деморгане");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, !"Нельзя телепортироваться на мероприятие в машине");
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, COLOR_GREY, !"Попасть на мероприятие можно только на улице");
	return ShowPlayerDialog(playerid, 1231, DIALOG_STYLE_MSGBOX, !"{ee3366}Телепортация на мероприятие", "{FFFFFF}Вы действительно хотите телепортитоватся на мероприятие?\n{FFFF99}Если Вы захотите покинуть мероприятие досрочно, используйте /back", "Да", "Нет");
}
CMD:back(playerid) 
{
	if(PI[playerid][pOnMP] != 1) return SCM(playerid, COLOR_GREY, !"Вы не участвуете в мероприятии");
	return ShowPlayerDialog(playerid, 1232, DIALOG_STYLE_MSGBOX, !"{ee3366}Покинуть мероприятие", "{FFFFFF}Вы действительно хотите покинуть мероприятие?", "Да", "Нет");
}
stock ChangeNameMenu(playerid) return ShowPlayerDialog(playerid, dialog_CHANGE_NAME, DIALOG_STYLE_LIST, "{ee3366}Выбор типа", "1. Изменить на случайный никнейм\t\t{FFFF99}Бесплатно\n2. Изменить на свой никнейм\t\t{3366cc}Платно", "Выбор", "Закрыть");
stock RandomName(playerid) {
	new rand = random(sizeof(nname));
	SetPVarString(playerid, "randomame", nname[rand]);
	new query[100+MAX_PLAYER_NAME];
	mysql_format(mysql,query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%e'", nname[rand]);
	mysql_function_query(mysql, query, true, "NameCallback", "d", playerid);
}
callback: NameCallback(playerid)
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SCM(playerid, COLOR_GREY, "Случайный никнейм уже занят другим игроком!"), DeletePVar(playerid, "randomame");
    else 
	{
		new name[24];
		GetPVarString(playerid,"randomame", name, sizeof(name));
		FixSVarString(name);
		ShowPlayerDialogf(playerid, dialog_SETNAME, DIALOG_STYLE_MSGBOX, !"{ee3366}Случайное изменение никнейма", "Да", "Нет", "{FFFFFF}Вы хотите изменить никнейм своего персонажа на {3366cc}'%s'{FFFFFF}?\n\n\
		{FFA500}Обратите внимание, что если Вы измените никнейм во время\n\
		проверки на Вас жалобы, Вы будете заблокированы на 7 дней.", name);
	}
	return true;
}

CMD:pheal(playerid,params[]) 
{
    if(!IsPlayerCops(playerid)) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
    if(sscanf(params, "ud", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /pheal [ID игрока] [причина]");
	if(PI[playerid][pHealPack] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет медицинской аптечки");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(GetPVarInt(params[0], "PlayerObmorok") == 0) return SCMf(playerid, COLOR_GREY, !"Игрок не нуждается в лечении");
	SCMf(playerid, COLOR_GREY,"Вы подняли игрока %s[%d] из состояния обморока", getName(params[0]),params[0]);
	SCMf(params[0], COLOR_GREY,"Сотрудник %s[%d] подняли Вас из состояния обморока", getName(playerid),playerid);
	return 1;
}
CMD:checkuid(playerid,params[]) 
{
    if(CheckAdmin(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /checkuid [ID игрока]");
	new query[100+MAX_PLAYER_NAME];
	mysql_format(mysql,query, sizeof(query), "SELECT * FROM `accounts` WHERE `id` = '%d'", params[0]);
	mysql_function_query(mysql, query, true, "CheckUID", "d", playerid);
	return 1;
}
callback: CheckUID(playerid)
{
    new rows,fields,name[24],temp[5],vkid;
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "Name", name, mysql, 24);
		cache_get_field_content(0, "VkontakteID", temp), vkid = strval (temp);
		new str_3[256];
		format(str_3,sizeof(str_3),"{FFFF99}Никнейм: \t\t%s\nСтраница ВКонтакте: vk.com/id%d\nУзнать историю смен ников - /aname (по UID: /uidname)",name,vkid);
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация", str_3, "Закрыть", "");
	}
    else SCMf(playerid, COLOR_GREY, !"Уникальный ID игрока не найден в базе. Проверьте правильность ввода.");
	return true;
}
CMD:uidname(playerid, params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
	if(sscanf(params, "d", params[0]))return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /uidname [UID]");
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", params[0]);
	mysql_tquery(mysql, query_string, "_namestore_callback", "i", playerid);
	return 1 ;
}
CMD:aname(playerid, params[]) 
{
    if(CheckAdmin(playerid, 2)) return 1;
	if(sscanf(params, "s[30]", params[0]))return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /aname [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	mysql_format(mysql, query_string, sizeof query_string, "SELECT `id` FROM `accounts` WHERE `Name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(mysql, query_string, "namestore_callback", "i", playerid);
	return 1 ;
}
callback:namestore_callback(playerid) 
{
	new rows, fields ;
	cache_get_data(rows, fields);
	if (!rows) return SCM(playerid, COLOR_BLACK, !"Игрок с данным никнеймом не найден в базе данных.");
	new db_increment = cache_get_field_content_int(0, "id", mysql);
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(mysql, query_string, "_namestore_callback", "i", playerid);
	return 1 ;
}
callback:_namestore_callback(playerid) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SCM(playerid, COLOR_BLACK, !"История никнеймов данного игрока пуста.");
	new str_3[256];
	strcat(str_3, "{FFFF99}Старый никнейм - Новый никнейм - Дата изменения никнейма\n\n{FFFFFF}");
	for(new j = 0; j < rows; j ++ ) {
		new _nh_oldname[MAX_PLAYER_NAME ],_nh_newname[MAX_PLAYER_NAME ],_nh_date[20],line_string[68];
		cache_get_field_content(j, "nh_oldname", _nh_oldname, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, mysql, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, mysql, 20 );
		format(line_string, sizeof (line_string), "%s - %s - %s\n", _nh_oldname, _nh_newname, _nh_date);
		strcat(str_3, line_string);
	}
	return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}История никнеймов", str_3, "Закрыть", "");
}
CMD:j(playerid,params[])
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(PI[playerid][pStartJob] < 1) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /j [текст]");
	NotReklama(playerid, params[0]);
	static job[24];
	SetString(job, NameJob(playerid));
	job = NameJob(playerid);
	new str[145];
	format(str,sizeof(str),"[J | %s] %s[%d]: %s",job,getName(playerid),playerid,params[0]);
	foreach(new i:Player) if(PI[i][pStartJob] == PI[playerid][pStartJob]) SCM(i, 0x69b867FF, str);
	SetPlayerChatBubble(playerid, "сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
stock NameJob(id) {
	new name[15];
	switch(PI[id][pStartJob]) 
	{
		case 9:format(name,sizeof(name),"Дальнобойщик");
	}
    return name;
}
stock SetAccessory(playerid) 
{
	if(PI[playerid][pUseAccessory] == 1) { // Рога
		SetPlayerAttachedObject(playerid, 0, 19314, 2, 0.1180, -0.0050, -0.0040, 0.0000, 0.0000, -83.2000, 0.7080, 0.6020, 0.3050);
	}
	if(PI[playerid][pUseAccessory] == 2) {
		SetPlayerAttachedObject(playerid, 0, 3003, 2, 0.0959, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 5.8989, 3.9599, 5.0000, -65536, 0);
		SetPlayerAttachedObject(playerid, 1, 1238, 2, 0.1289, 0.0699, 0.0599, 109.0000, -6.3999, 0.0000, 0.2930, 0.2500, 0.2000, -16777216, 0);
		SetPlayerAttachedObject(playerid, 2, 1238, 2, 0.1319, 0.0769, -0.0480, 81.7000, -7.3999, 1.2999, 0.2930, 0.2500, 0.2000, -16777216, 0);
		SetPlayerAttachedObject(playerid, 3, 3003, 2, 0.1299, 0.1269, 0.0829, 20.9000, 0.0000, 0.0000, 0.4999, 0.3540, 1.0000, 0, 0);
		SetPlayerAttachedObject(playerid, 4, 3003, 2, 0.1319, 0.1369, -0.0529, -6.0999, 0.0000, 0.0000, 0.4999, 0.3540, 1.0000, 0, 0);
	}
	if(PI[playerid][pUseAccessory] == 3) {
		SetPlayerAttachedObject(playerid, 0, 3003, 2, 0.0849, 0.0070, 0.0000, 0.0000, 0.0000, 0.0000, 4.9599, 4.3289, 4.9109, -16777216, 0);
		SetPlayerAttachedObject(playerid, 1, 3003, 2, 0.2689, 0.0070, -0.1919, 0.0000, 0.0000, 0.0000, 3.0499, 0.8379, 2.9219, -16777216, 0);
		SetPlayerAttachedObject(playerid, 2, 3003, 2, 0.2749, 0.0070, 0.1619, 0.0000, 0.0000, 0.0000, 3.0499, 0.8379, 2.9219, -16777216, 0);
		SetPlayerAttachedObject(playerid, 3, 3003, 2, 0.0369, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000, 2.0929, 2.8459, 3.6489, 0, 0);
		SetPlayerAttachedObject(playerid, 4, 3003, 2, 0.1269, 0.0970, 0.0000, 90.0000, 0.0000, 0.0000, 3.0319, 3.3610, 2.3429, 0, 0);
		SetPlayerAttachedObject(playerid, 5, 3003, 2, 0.1329, 0.1539, -0.0539, 65.7000, 0.0000, 0.0000, 1.6439, 1.0110, 0.7239, -16777216, 0);
		SetPlayerAttachedObject(playerid, 6, 3003, 2, 0.1329, 0.1569, 0.0439, 105.4999, 0.0000, 0.0000, 1.6439, 1.0110, 0.7239, -16777216, 0);
		SetPlayerAttachedObject(playerid, 7, 3003, 2, 0.0479, 0.1559, 0.0000, 0.0000, 0.0000, 0.0000, 0.8759, 0.8870, 1.2749, -16777216, 0);
	}
	if(PI[playerid][pUseAccessory] == 4) {
		SetPlayerAttachedObject(playerid, 0, 19352, 2, 0.1169, 0.0040, 0.0000, 0.0000, 90.0000, 90.0000, 1.0000, 1.0000, 1.0000, 0, 0); 
		SetPlayerAttachedObject(playerid, 1, 19469, 1, -0.1630, 0.1909, -0.0080, 3.6000, 54.1000, -14.2999, 5.0589, 3.8849, 7.5640, -65536, 0); 
		SetPlayerAttachedObject(playerid, 2, 1247, 1, 0.0699, 0.2450, 0.1030, 0.0000, 0.0000, -9.0999, 0.5000, 0.5000, 0.5000, -255, 0); 
		SetPlayerAttachedObject(playerid, 3, 19339, 1, 0.4909, -0.1940, -0.4259, 0.0000, 90.0000, 90.0000, 0.5000, 0.5000, 0.5000, 0, 0);
	}
	if(PI[playerid][pUseAccessory] == 5) { //огнемёт
		SetPlayerAttachedObject(playerid, 5, 361, 1,  0.543999, -0.155999, -0.103000,  -177.300079, 176.400054, 0.000000,  0.768000, 0.706000, 0.748999);
	}
	if(PI[playerid][pUseAccessory] == 6) { // красный чемодан
		SetPlayerAttachedObject(playerid,7,19921,5,0.114000,0.040999,-0.044999,93.100112,-12.099985,-75.899986,0.871000,0.899000,0.601999);
	}
	if(PI[playerid][pUseAccessory] == 7) // ЕЛКА НА ПЛЕЧЁ
	{
		new skinid;
		if(PI[playerid][pMember] == 0) skinid = PI[playerid][pSkin];
		else skinid = PI[playerid][pOrgSkin];
		switch (skinid)
		{
			case 1..18: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2730, -0.0090, 0.1310, 0.0000, 88.4000, 0.0000, 0.0240, 0.0260, 0.0230, -1, -1);
			case 19..100: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2720, 0.0060, 0.1570, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 101..103: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.3150, -0.0270, 0.1420, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 104..108: SetPlayerAttachedObject(playerid, 42, 19076, 1, 0.2770, -0.0120, 0.1450, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 109: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2950, -0.0120, 0.1360, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 110..119: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2950, -0.0120, 0.1360, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 120,122: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2810, -0.0120, 0.1580, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 123..136: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2830, -0.0070, 0.1560, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 137..146: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2790, -0.0070, 0.1190, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 147..154: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2940, -0.0070, 0.1400, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 155..157: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2920, -0.0070, 0.1430, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 158..172: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2860, -0.0070, 0.1360, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 173..187: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2990, -0.0070, 0.1170, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 188..222: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2840, -0.0070, 0.1510, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 223..270: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2810, -0.0070, 0.1410, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 271..279: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2950, -0.0190, 0.1540, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			case 280..311: SetPlayerAttachedObject(playerid, 4, 19076, 1, 0.2930, -0.0110, 0.1510, 0.0000, 88.4000, 0.0000, 0.0200, 0.0260, 0.0190, -1, -1);
			default: SCM(playerid, 0xAFAFAFFF, !"Аксессуар елка на плечо, не будет отображаться на этом скине!");
		}
	}
	if(PI[playerid][pUseAccessory] == 8) // Ангельское кольцо
	{
		SetPlayerAttachedObject(playerid, 0, 19197, 2, 0.2100, 0.0000, 0.0000, 0.0000, 84.5000, 0.0000, 0.2660, 0.2730, 0.0000, -1, -1);
	}
	if(PI[playerid][pUseAccessory] == 9) // дигл на спину
	{
		SetPlayerAttachedObject(playerid,5,348,1,-0.343000,-0.159999,0.040999,2.500000,26.900005,-2.100000,2.619001,1.913999,2.307999);
	}
	if(PI[playerid][pUseAccessory] == 10) // шляпа фермера
	{
		SetPlayerAttachedObject(playerid,0,19553,2,0.165999,-0.010000,0.000000,-1.299999,-9.400000,-12.900001,1.086999,1.206000,1.074999);
	}
}
callback: DeathMute(playerid) return SvMutePlayerDisable(playerid);
stock ShowTakeAks(playerid) 
{
	ShowPlayerDialogf(playerid, dialog_TAKE, DIALOG_STYLE_LIST, !"{ee3366}Получение бесплатного акессуара", !"Получить", !"Отмена""\
	1. Рога\t\t\t\t{FFFF99}%s (цена: 35 дп)\n\
	2. Костюм гробовщик\t\t{FFFF99}%s (цена: 35 дп)\n\
	3. Голова Микки-Мауса\t{FFFF99}%s (цена: 35 дп)\n\
	4. Голова Дед-Пула\t\t\t{FFFF99}%s (цена: 25 дп)\n\
	5. Огнемёт\t\t\t{FFFF99}%s (цена: 25 дп)\n\
	6. Красный чемодан\t\t{FFFF99}%s (цена: 10 дп)\n\
	7. Ёлка на плечо\t\t{FFFF99}%s (цена: 25 дп)\n\
	8. Ангельское кольцо \t\t{FFFF99}%s (цена: 40 дп)\n\
	9. Дигл на спину\t\t{FFFF99}%s (цена: 25 дп)\n\
	10. Шляпа фермера\t\t{FFFF99}%s (цена: 15 дп)", 
	(PI[playerid][pAccessory_1]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_2]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_3]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_4]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_5]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_6]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_7]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_8]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_9]) ? ("(куплен)") : ("(не куплен)"),
	(PI[playerid][pAccessory_10]) ? ("(куплен)") : ("(не куплен)"));
}
CMD:stopcapture(playerid,params[]) 
{
    if(CheckAdmin(playerid, 7)) return 1;
	if(GangWarStatus == 0) return SCM(playerid, COLOR_GREY,"В текущее время захват территории не идёт.");
	if(sscanf(params,"s[35]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /stopcapture [причина]");
	foreach(new i:Player)  
	{
		if(5 <= PI[i][pMember] || PI[i][pMember] >= 7) 
		{
			GangZoneHideForPlayer(i, CaptZone);
			GangZoneStopFlashForPlayer(i, WarZone);
			GangZoneHideForPlayer(i, WarZone);
			GangZoneShowForPlayer(i, WarZone, GetGZFrac(Command[1]));
			cef_emit_event(i, "hide-capture");
			SCMf(i, COLOR_TOMATO, "Игровой мастер #%d остановил захват территории. Причина: %s", PI[playerid][pAdminNumber], params[0]);
			GangWarStatus = 0;
		}
	}
    return SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] остановил захват территории. Причина: %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid),playerid,params[0]);
}
CMD:bomb(playerid) 
{
	if(!IsPlayerOPG(playerid)) return SCM(playerid, COLOR_GREY,"Вы не состоите в ОПГ");
	if(bombacitve == 1) return SCM(playerid, COLOR_BLACK,"Забор Войсковой части уже взорван");
	if(bombplayer[playerid] == 1) return SCM(playerid, COLOR_BLACK,"У Вас уже есть бомба");
	if(PI[playerid][data_MET] < 15) return SCM(playerid, COLOR_BLACK,"Для создания бомбы нужно 15 металла");
	if(!PlayerToPoint(270.0, playerid, -2624.9246,398.4235,11.0944)) return SCM(playerid, COLOR_BLACK,"Нужно находиться возле территории ВЧ!");
	new str1[144];
	format(str1,sizeof(str1),"%s снял портфель со спины",getName(playerid));
	ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
	pCurrectMessageBomb[playerid] = 2;
	pTimerMessageBomb[playerid] = gettime() + 1;
	PI[playerid][data_MET] -= 15;
	return 1;
}
callback: BombVCH() 
{
	Bomb(1700.1427,1838.3263,15.7956);
	bombacitve = 1;
	foreach(new i:Player) RemoveBuildingForPlayer(i, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	SetTimer("BombVCHReturn", 1000*60*15, 1);
}
stock Bomb(Float:x,Float:y,Float:z) 
{
	CreateExplosion(x, y, z, 7, 10.0);
    CreateExplosion(x, y+4.0, z, 7, 10.0);
    CreateExplosion(x, y-4.0, z, 7, 10.0);
    CreateExplosion(x+4.0, y, z, 7, 10.0);
    CreateExplosion(x-4.0, y, z, 7, 10.0);
}
callback: BombVCHReturn() 
{
	bombacitve = 0;
	CreateDynamicObject(985, 1700.1240, 1837.8086, 14.2100, 0.00, 0.00, 2.45);
}
CMD:apanel(playerid) 
{
    if(CheckAdmin(playerid, 8)) return 1;
	SCM(playerid, COLOR_GREY, "[Anti-sliv] все действия сохраняются в базе-данных, и в системе 'вк-логгер'");
	return ShowApanel(playerid);
}
stock ShowApanel(playerid)
{
	new settings[300];
	format(settings, sizeof settings, "\
	1. Лимит на захват-территории\t\t{FFFF99}%s\n\
	2. Сохранить сервер\t\t{FFFF99}...\n\
	4. Устанвоить название Открытие\t\t{FFFF99}...\n\
	5. Устанвоить название RP\t\t{FFFF99}...",
	(capturetime) ? ("Включен") : ("Отключен"));
	return ShowPlayerDialog(playerid, 9888, DIALOG_STYLE_LIST, "{ee3366}Настройки разработчика", settings, "Изменить", "Закрыть");
}
stock RemoveBuild(playerid) 
{
	//123321_123321
	RemoveBuildingForPlayer(playerid, 2009, 2567.8301, -2098.8000, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2010, 2567.8301, -2098.8000, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2013, 2533.7700, -2010.3400, 23.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2014, 2533.7700, -2010.3400, 23.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2015, 2538.8701, -1998.9301, 0.1900, 0.25);
	RemoveBuildingForPlayer(playerid, 2016, 2538.8701, -1998.9301, 0.1900, 0.25);
	RemoveBuildingForPlayer(playerid, 2019, 2559.6799, -2012.3800, 20.9640, 0.25);
	RemoveBuildingForPlayer(playerid, 2020, 2559.6799, -2012.3800, 20.9640, 0.25);
	RemoveBuildingForPlayer(playerid, 2024, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 2025, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2558.3799, -2099.7000, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2533.0200, -2117.6599, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2554.5701, -2093.1599, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2561.1201, -2080.3401, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2547.0701, -2131.5000, 20.9267, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 2557.6299, -2087.3301, 16.4458, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2568.7800, -2080.2000, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2577.5901, -2080.6001, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2536.1799, -2090.7800, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2520.3799, -2087.3701, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 2557.6299, -2087.3301, 16.4458, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2547.0701, -2131.5000, 20.9267, 0.25);
	RemoveBuildingForPlayer(playerid, 874, 2540.5100, -2133.0901, 22.5030, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2108.1899, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2108.1899, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2102.6699, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2102.6699, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2094.4399, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2087.9299, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2094.4399, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2087.9299, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2563.3799, -2110.8899, 21.7335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.9099, -2101.7800, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.8601, -2100.3999, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.8101, -2107.6299, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2566.2800, -2109.9099, 21.7469, 0.25);
	RemoveBuildingForPlayer(playerid, 1218, 2542.3000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1218, 2541.3999, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2540.5000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2543.1001, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2540.3999, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2543.2000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2541.3000, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2542.2000, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2568.2900, -2111.0200, 21.7469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2541.3201, -2098.7800, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2562.3601, -2111.2000, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2566.7100, -2111.8501, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2565.7200, -2111.2100, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2569.3701, -2110.5701, 21.7335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2566.6101, -2111.6599, 23.1335, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2563.4099, -2111.8401, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2567.3101, -2110.4900, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2540.7100, -2097.4399, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2568.6799, -2111.9600, 22.5248, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2542.2000, -2105.2900, 23.3248, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2565.7000, -2111.4500, 22.5248, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 2561.6201, -2117.2300, 20.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 2560.0200, -2118.3201, 20.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 2564.5500, -2111.2800, 21.9270, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2570.5801, -2111.9700, 21.7826, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2540.6699, -2108.2400, 23.3826, 0.25);
	RemoveBuildingForPlayer(playerid, 1755, 2540.8301, -2109.6899, 23.3100, 0.25);
	RemoveBuildingForPlayer(playerid, 1755, 2564.9900, -2109.6001, 21.7600, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2566.5200, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2564.7700, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 874, 2540.5100, -2133.0901, 22.5030, 0.25);
	RemoveBuildingForPlayer(playerid, 803, 2555.9099, -2083.6101, 21.5571, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2540.7000, -2101.3000, 23.3826, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3000, -2130.2100, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3101, -2122.9900, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3101, -2120.1599, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2120.2000, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2123.0000, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2130.1899, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2509.4099, -2117.8201, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2505.1399, -2123.4299, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2505.1299, -2119.9800, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2509.5400, -2123.5500, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2508.8401, -2123.5601, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2507.3000, -2118.6799, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2511.3101, -2118.7800, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2513.4299, -2120.1299, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2513.5400, -2123.5100, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2086.3601, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2103.1599, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2069.5601, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1770, 2541.8201, -2052.4299, 24.2100, 0.25);
	RemoveBuildingForPlayer(playerid, 2021, 2564.7700, -2112.5000, 21.4212, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2542.6399, -2096.9600, 23.6300, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2573.0701, -2111.6699, 22.0300, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2542.6299, -2109.2600, 23.6300, 0.25);
	RemoveBuildingForPlayer(playerid, 2960, 2541.8301, -2097.7000, 23.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2934, 2541.8201, -2090.1001, 24.3510, 0.25);
	RemoveBuildingForPlayer(playerid, 2935, 2541.8201, -2082.6699, 24.3510, 0.25);
	RemoveBuildingForPlayer(playerid, 2029, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 2030, 2514.5500, -2128.0801, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2031, 2514.5400, -2125.2700, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2030, 2504.1399, -2125.2400, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2031, 2504.1499, -2128.0500, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.1499, -2125.9099, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.1799, -2127.3799, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.4700, -2127.3501, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.4600, -2125.8999, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.1101, -2125.8799, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.1101, -2127.3501, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.4199, -2127.3701, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.4199, -2125.9099, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1707, 2544.2300, -2019.1300, 21.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2570.5801, -2111.9700, 21.7826, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 2541.8201, -2034.1300, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 2567.4800, -2113.5300, 20.9600, 0.25);
	///police
	RemoveBuildingForPlayer(playerid, 1917, 2438.5500, -1820.4500, -6.0368, 0.25);
	RemoveBuildingForPlayer(playerid, 1920, 2438.5500, -1820.4500, -6.0368, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2447.5200, -1823.5200, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2372.3899, -1806.4200, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2447.8701, -1841.1801, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2448.2900, -1805.8600, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2436.6899, -1843.5500, 20.9676, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2372.0701, -1789.1300, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2373.2400, -1800.1600, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2372.3101, -1821.4399, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2394.8301, -1842.9200, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2423.9199, -1843.1700, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2374.1201, -1858.8101, 20.9676, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2398.1799, -1843.3700, 20.9676, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2427.5500, -1843.6000, 20.9676, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2404.6001, -1842.9700, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2433.4399, -1843.4399, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2372.8701, -1833.7500, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2442.9900, -1843.2700, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2448.2700, -1834.7000, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 2448.1001, -1799.3600, 18.7296, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2389.5400, -1859.5500, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2372.2500, -1796.0601, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2372.5000, -1856.5500, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2373.4900, -1837.6100, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2372.8000, -1814.3400, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2448.8401, -1816.5500, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2419.5400, -1859.5500, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2449.5400, -1859.5500, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2448.0100, -1839.0100, 26.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1936, 2439.3999, -1792.7200, 32.5890, 0.25);
	RemoveBuildingForPlayer(playerid, 1936, 2397.6899, -1836.6300, 19.7770, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2397.6599, -1836.6200, 22.9900, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2397.6599, -1836.6300, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2401.3201, -1825.0900, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2406.0300, -1818.2200, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2418.2300, -1799.5400, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2440.9099, -1794.8199, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1935, 2409.8101, -1841.2400, 23.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1935, 2413.4800, -1841.2400, 23.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1935, 2417.1499, -1841.2400, 23.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2405.0400, -1784.6100, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2399.7800, -1784.6200, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2394.5601, -1784.5900, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2389.3501, -1784.5500, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2384.0801, -1784.5601, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2378.8601, -1784.5699, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2373.6699, -1784.5601, 22.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, 2437.3799, -1791.7400, 21.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, 2448.5701, -1791.2500, 21.7100, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2444.5100, -1786.4500, 21.3170, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2446.8201, -1788.5100, 21.2100, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 2440.6399, -1768.5400, 21.5700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2447.8999, -1860.0000, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1857.9200, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2443.7200, -1860.0100, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2439.5200, -1859.9800, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2435.3501, -1859.9800, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2431.2500, -1860.0100, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2427.1101, -1860.0200, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2422.9299, -1860.0100, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2418.7800, -1859.9800, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2414.6499, -1860.0000, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2410.4500, -1860.0000, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2406.3301, -1860.0300, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2402.1899, -1860.0000, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2398.0601, -1859.9900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2393.9399, -1860.0100, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2389.8000, -1860.0300, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1853.7900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1803.9900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2447.9399, -1797.5601, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1845.4900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1849.6400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1837.1899, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1841.3400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1820.5900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1833.0400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1828.8900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1824.7400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1816.4399, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1808.1400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1812.2900, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2449.9800, -1799.8400, 21.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 1236, 2448.0100, -1786.3500, 21.4173, 0.25);
	RemoveBuildingForPlayer(playerid, 803, 2371.5701, -1827.8500, 21.5571, 0.25);
	RemoveBuildingForPlayer(playerid, 874, 2369.5100, -1843.7300, 22.5030, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.2900, -1805.1400, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.2000, -1807.0800, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.1699, -1808.9900, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.2700, -1810.9200, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.1799, -1812.9200, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.0901, -1815.2700, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2406.9399, -1816.9399, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.4099, -1821.1300, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2407.0500, -1822.7300, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2409.7900, -1822.8900, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2411.7600, -1823.0100, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2413.7300, -1823.0400, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2416.1499, -1823.0100, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2418.0400, -1823.0900, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2419.9600, -1822.9500, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.3201, -1822.8600, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.3101, -1820.4301, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.5500, -1818.4100, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.7300, -1816.2400, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.6699, -1814.2200, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.7700, -1812.3900, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.8799, -1810.4000, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.8501, -1808.3900, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.7400, -1806.1600, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2421.8000, -1804.2800, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2391.3101, -1824.2000, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2414.3101, -1800.9200, 32.0800, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2401.8501, -1818.0400, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2401.8799, -1821.9100, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2401.8899, -1800.1700, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2401.8201, -1803.4900, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2412.6799, -1799.0200, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2416.3899, -1798.9500, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2422.0100, -1798.9900, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2426.1001, -1798.9100, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2429.4800, -1798.9399, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1933, 2438.5500, -1820.4500, -6.0400, 0.25);
	RemoveBuildingForPlayer(playerid, 1934, 2438.5500, -1820.4500, -6.0400, 0.25);
	RemoveBuildingForPlayer(playerid, 1938, 2395.8899, -1830.2700, 19.1800, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1829.2300, 19.1800, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1830.2300, 23.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1830.2300, 32.6500, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1830.2300, 32.6500, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1830.2300, 23.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 1939, 2395.8999, -1831.3101, 19.1800, 0.25);
	RemoveBuildingForPlayer(playerid, 1937, 2409.4199, -1799.5300, 32.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 2083, 2438.6799, -1820.3300, -6.0420, 0.25);
	RemoveBuildingForPlayer(playerid, 2082, 2422.2500, -1822.5800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2420.2400, -1823.5800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2418.2600, -1823.5900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2416.2800, -1823.5800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2414.2900, -1823.5601, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2412.3101, -1823.5900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2410.3301, -1823.5699, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2082, 2407.6001, -1823.4800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.6399, -1821.4900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5300, -1817.3199, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5300, -1815.3400, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5300, -1813.3500, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5601, -1811.3600, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5601, -1809.3800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5701, -1807.3900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2406.5901, -1805.3900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2300, -1819.9399, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2500, -1817.9800, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2100, -1815.9399, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2600, -1813.9399, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2900, -1811.9600, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2900, -1810.0000, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2800, -1807.9900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2700, -1805.9900, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 2081, 2422.2800, -1803.9600, 31.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2409.3401, -1803.3101, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2409.3201, -1813.2100, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2409.3301, -1820.7500, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2419.3101, -1803.2400, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2419.3201, -1813.2400, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2419.3201, -1820.7400, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2436.7700, -1796.9900, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2423.0801, -1796.9800, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2415.6201, -1796.9800, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2404.3401, -1796.9900, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2403.7800, -1801.9800, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2403.7800, -1808.2000, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2403.7500, -1818.2700, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2403.7300, -1833.2500, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2403.7300, -1827.5400, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2393.1399, -1823.9301, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2398.6599, -1823.8600, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2398.1399, -1833.2400, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2441.8401, -1803.2500, 34.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 2084, 2438.6799, -1820.4700, -6.0120, 0.25);
	RemoveBuildingForPlayer(playerid, 1749, 2392.1799, -1824.2200, 32.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1749, 2414.2700, -1801.6700, 32.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1750, 2400.5701, -1826.8700, 32.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 2414.3601, -1801.5900, 32.4880, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 2392.0901, -1824.3400, 32.4880, 0.25);
	RemoveBuildingForPlayer(playerid, 1739, 2401.3899, -1809.8199, 33.1635, 0.25);
	RemoveBuildingForPlayer(playerid, 1743, 2415.0300, -1801.6600, 32.7100, 0.25);
	RemoveBuildingForPlayer(playerid, 1743, 2392.2400, -1823.5400, 32.7100, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2414.3701, -1801.9600, 32.7800, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2392.4399, -1824.3199, 32.7800, 0.25);
	RemoveBuildingForPlayer(playerid, 1748, 2413.8000, -1801.5900, 32.4890, 0.25);
	RemoveBuildingForPlayer(playerid, 1746, 2398.4399, -1826.6000, 32.0700, 0.25);
	RemoveBuildingForPlayer(playerid, 1718, 2437.7900, -1829.7900, 40.1900, 0.25);
	RemoveBuildingForPlayer(playerid, 1718, 2437.8000, -1807.3500, 40.1980, 0.25);
	RemoveBuildingForPlayer(playerid, 1302, 2389.0100, -1839.2800, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 1209, 2388.8601, -1836.5000, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10009, 2388.8701, -1833.7100, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10010, 2388.7000, -1830.9399, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 10011, 2388.7200, -1828.1400, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 10012, 2388.9600, -1826.0699, 21.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 10013, 2388.9299, -1823.3300, 21.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 10016, 2388.0100, -1842.9000, 20.8400, 0.25);
	RemoveBuildingForPlayer(playerid, 10017, 2387.6299, -1821.1100, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10018, 2388.0901, -1848.5900, 20.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 10019, 2388.7600, -1854.5900, 20.8700, 0.25);
	//СТАРОЕ ЛОГО
	RemoveBuildingForPlayer(playerid, 8564, 2587.1201, -1391.8800, 53.1058, 0.25);
	RemoveBuildingForPlayer(playerid, 8575, 2587.1201, -1391.8800, 53.1058, 0.25);
	RemoveBuildingForPlayer(playerid, 2166, 2747.3701, -1261.9301, 21.5950, 0.25);
	RemoveBuildingForPlayer(playerid, 2167, 2747.3701, -1261.9301, 21.5950, 0.25);
	//12222222222222
	RemoveBuildingForPlayer(playerid, 3166, 1538.4900, 1833.2900, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1587.5601, 1833.3101, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1636.6899, 1833.3000, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1685.7700, 1833.3000, 17.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 4877, 1783.1500, 1781.2900, 14.0974, 0.25);
	RemoveBuildingForPlayer(playerid, 4878, 1783.1500, 1781.2900, 14.0974, 0.25);
	RemoveBuildingForPlayer(playerid, 4871, 1552.8400, 1813.2700, 14.0970, 0.25);
	RemoveBuildingForPlayer(playerid, 4872, 1552.8400, 1813.2700, 14.0970, 0.25);
	RemoveBuildingForPlayer(playerid, 1807, 1950.0000, -2850.0000, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 1950.0000, -2850.0000, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 2418, 2097.6499, -2572.2200, 9.6560, 0.25);
	RemoveBuildingForPlayer(playerid, 2422, 1989.8900, -2550.6001, 9.1670, 0.25);
	RemoveBuildingForPlayer(playerid, 2423, 2044.7000, -2551.5000, 8.6820, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1957.9200, -2615.2100, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1953.7600, -2615.2000, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1959.9700, -2617.3501, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1960.0000, -2621.5300, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1959.9500, -2625.6699, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1951.6300, -2617.2800, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1951.6899, -2621.4500, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1962.7200, -2628.1001, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1967.9000, -2628.1699, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1973.1000, -2628.2200, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1978.2900, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1983.4600, -2628.3101, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1988.7000, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1993.9500, -2628.2400, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1999.0699, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2004.2600, -2628.3401, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2009.4500, -2628.3401, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2014.6700, -2628.3101, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2019.9600, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2025.1899, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2030.4301, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2035.6000, -2628.2400, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2040.7900, -2628.2200, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2046.0000, -2628.2500, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2051.2500, -2628.2500, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2056.4199, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2061.5400, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2066.7400, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1958.7900, -2615.9399, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1954.1700, -2617.8701, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1958.0800, -2620.3799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1953.3700, -2621.3799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1957.4301, -2624.6001, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1953.1400, -2625.6101, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1956.9700, -2618.3601, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1952.8500, -2616.9099, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1953.0400, -2619.8799, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1954.8101, -2623.6101, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1957.0900, -2626.6201, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1957.6500, -2621.9399, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1946.6000, -2627.0901, 10.4000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1948.8600, -2624.6399, 10.4000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1955.8300, -2620.1599, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.9800, -2616.6799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1953.3600, -2623.6299, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.1899, -2625.2100, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.8400, -2622.7400, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1955.2900, -2625.5000, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1957.4000, -2618.8601, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2505.1399, -2123.4299, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2405, 2011.0900, -2603.8899, 9.8024, 0.25);
	RemoveBuildingForPlayer(playerid, 2406, 2011.0900, -2603.8899, 9.8024, 0.25);
	RemoveBuildingForPlayer(playerid, 2427, 2068.1299, -2631.8899, 10.0100, 0.25);
	RemoveBuildingForPlayer(playerid, 2433, 2068.1299, -2631.8899, 10.0100, 0.25);
	RemoveBuildingForPlayer(playerid, 1788, 1973.1100, -2610.3301, 22.7800, 0.25);
	RemoveBuildingForPlayer(playerid, 1786, 1973.1100, -2610.3301, 12.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1786, 1973.1100, -2610.3301, 2.9800, 0.25);
	RemoveBuildingForPlayer(playerid, 1788, 1973.5800, -2609.1299, 25.8000, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 3166, 1685.7700, 1833.3000, 17.5000, 0.25);
	//CЕВА 05.01.2023
	RemoveBuildingForPlayer(playerid, 2313, 2570.8601, -2377.6599, 20.9767, 0.25);
	RemoveBuildingForPlayer(playerid, 2314, 2570.8601, -2377.6599, 20.9767, 0.25);
	//кароч ремуве южки там
	RemoveBuildingForPlayer(playerid, 2613, 2321.7400, -1923.1100, 20.9550, 0.25);
	RemoveBuildingForPlayer(playerid, 2614, 2321.7400, -1923.1100, 20.9550, 0.25);
	RemoveBuildingForPlayer(playerid, 2618, 2280.9399, -2102.7500, 21.2630, 0.25);
	RemoveBuildingForPlayer(playerid, 2619, 2280.9399, -2102.7500, 21.2630, 0.25);
	RemoveBuildingForPlayer(playerid, 2617, 2311.1101, -1925.3101, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 2624, 2261.4800, -2099.5300, 22.0130, 0.25);
	RemoveBuildingForPlayer(playerid, 2622, 2280.9399, -2102.7500, 21.2630, 0.25);
	//конец
	RemoveBuildingForPlayer(playerid, 4995, 1937.2400, 2183.3401, 18.2949, 0.25);
	RemoveBuildingForPlayer(playerid, 3407, 1937.2400, 2183.3401, 18.2949, 0.25);
	RemoveBuildingForPlayer(playerid, 4996, 1937.2400, 2183.3401, 18.2949, 0.25);
	RemoveBuildingForPlayer(playerid, 4997, 1937.2400, 2183.3401, 18.2949, 0.25);
	RemoveBuildingForPlayer(playerid, 2361, 2251.6299, -2582.8501, 23.1819, 0.25);
	RemoveBuildingForPlayer(playerid, 2368, 2251.6299, -2582.8501, 23.1819, 0.25);
	RemoveBuildingForPlayer(playerid, 2383, 2269.7700, -2602.4500, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 2388, 2269.7700, -2602.4500, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 2424, 2201.7800, -2544.0200, 20.9410, 0.25);
	RemoveBuildingForPlayer(playerid, 2430, 2201.7800, -2544.0200, 20.9410, 0.25);
	RemoveBuildingForPlayer(playerid, 5356, 1417.6899, -1268.0900, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5357, 1414.2200, -1441.6899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5358, 1379.7800, -1632.3400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5359, 1307.2500, -1685.3700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5360, 1275.0500, -1740.1400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5361, 1213.1801, -1817.6700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5362, 1160.9700, -1917.1899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5364, 1047.6000, -2078.5300, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5366, 994.1860, -2150.2600, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5378, 1417.6899, -1268.0900, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5379, 1414.2200, -1441.6899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5380, 1379.7800, -1632.3400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5381, 1307.2500, -1685.3700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5382, 1275.0500, -1740.1400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5383, 1213.1801, -1817.6700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5384, 1160.9700, -1917.1899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5387, 1047.6000, -2078.5300, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5389, 994.1860, -2150.2600, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5453, 732.8050, -2658.2300, 39.7450, 0.25);
	RemoveBuildingForPlayer(playerid, 5454, 853.4540, -2526.6399, 39.7450, 0.25);
	RemoveBuildingForPlayer(playerid, 8759, -2300.8201, -78.3867, 23.9691, 0.25);
	RemoveBuildingForPlayer(playerid, 2167, 2747.3701, -1261.9301, 21.5950, 0.25);
	RemoveBuildingForPlayer(playerid, 5356, 1417.6899, -1268.0900, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5357, 1414.2200, -1441.6899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5358, 1379.7800, -1632.3400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5359, 1307.2500, -1685.3700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5360, 1275.0500, -1740.1400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5361, 1213.1801, -1817.6700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5362, 1160.9700, -1917.1899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5364, 1047.6000, -2078.5300, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5366, 994.1860, -2150.2600, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5378, 1417.6899, -1268.0900, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5379, 1414.2200, -1441.6899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5380, 1379.7800, -1632.3400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5381, 1307.2500, -1685.3700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5382, 1275.0500, -1740.1400, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5383, 1213.1801, -1817.6700, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5384, 1160.9700, -1917.1899, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5387, 1047.6000, -2078.5300, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5389, 994.1860, -2150.2600, 25.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5453, 732.8050, -2658.2300, 39.7450, 0.25);
	RemoveBuildingForPlayer(playerid, 5454, 853.4540, -2526.6399, 39.7450, 0.25);
	RemoveBuildingForPlayer(playerid, 8759, -2300.8201, -78.3867, 23.9691, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 4867, 1760.7900, 2279.4700, 12.4024, 0.25);
	RemoveBuildingForPlayer(playerid, 4868, 1760.7900, 2279.4700, 12.4024, 0.25);
	//RemoveBuildingForPlayer(playerid, 3423, 1843.2700, 2526.7900, 17.7941, 0.25);
	//RemoveBuildingForPlayer(playerid, 3424, 1843.2700, 2526.7900, 17.7941, 0.25);
	RemoveBuildingForPlayer(playerid, 3430, 1921.9200, 2318.0400, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3442, 1921.9200, 2318.0400, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 4438, 1773.5800, 2243.2800, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 4439, 1767.9700, 2243.2200, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 1998.8300, 1860.6801, 14.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2008.3600, 1844.0800, 14.0681, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 1983.9600, 1852.1200, 14.3192, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 2008.2200, 1836.0900, 14.3783, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 2001.4399, 1849.3800, 14.3783, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 4867, 1760.7900, 2279.4700, 12.4024, 0.25);
	RemoveBuildingForPlayer(playerid, 4868, 1760.7900, 2279.4700, 12.4024, 0.25);
	RemoveBuildingForPlayer(playerid, 3418, 1759.7900, 2246.9399, 17.2094, 0.25);
	RemoveBuildingForPlayer(playerid, 3419, 1759.7900, 2246.9399, 17.2094, 0.25);
	RemoveBuildingForPlayer(playerid, 3420, 1789.0400, 2247.3000, 16.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 3421, 1797.7800, 2250.9900, 15.2690, 0.25);
	RemoveBuildingForPlayer(playerid, 4438, 1773.5800, 2243.2800, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 4439, 1767.9700, 2243.2200, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1792.7200, 2311.4500, 15.9900, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1731.1899, 2249.6399, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1730.4700, 2249.0200, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1730.1500, 2250.1101, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 4941, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4954, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4942, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4943, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4851, 1853.550, 2029.650, 17.302, 0.250);
	RemoveBuildingForPlayer(playerid, 4852, 1853.550, 2029.650, 17.302, 0.250);
	RemoveBuildingForPlayer(playerid, 4957, 1796.969, 2032.359, 16.527, 0.250);
	RemoveBuildingForPlayer(playerid, 4962, 1796.969, 2032.359, 16.527, 0.250);
	RemoveBuildingForPlayer(playerid, 4959, 1796.969, 2032.359, 16.527, 0.250);
	RemoveBuildingForPlayer(playerid, 4963, 1796.969, 2032.359, 16.527, 0.250);
	RemoveBuildingForPlayer(playerid, 4958, 1811.420, 2036.339, 16.659, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1807.542, 2039.813, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1802.719, 2039.830, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1798.065, 2039.788, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1792.434, 2039.847, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1788.174, 2039.837, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1783.093, 2039.731, 15.876, 0.250);
	RemoveBuildingForPlayer(playerid, 1245, 1867.130, 2005.369, 15.850, 0.250);
	RemoveBuildingForPlayer(playerid, 1245, 1814.619, 2019.939, 16.200, 0.250);
	RemoveBuildingForPlayer(playerid, 4887, 1863.437, 2035.784, 12.777, 0.250);
	RemoveBuildingForPlayer(playerid, 4887, 1837.770, 2036.106, 12.777, 0.250);
	RemoveBuildingForPlayer(playerid, 4851, 1853.5500, 2029.6500, 17.3023, 0.25);
	RemoveBuildingForPlayer(playerid, 4852, 1853.5500, 2029.6500, 17.3023, 0.25);
	RemoveBuildingForPlayer(playerid, 4957, 1796.9700, 2032.3600, 16.5275, 0.25);
	RemoveBuildingForPlayer(playerid, 4962, 1796.9700, 2032.3600, 16.5275, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1787.2800, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1763.0500, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2011, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 2012, 1736.5100, 2290.3601, 19.4484, 0.25);
	RemoveBuildingForPlayer(playerid, 4867, 1760.7900, 2279.4700, 12.4024, 0.25);
	RemoveBuildingForPlayer(playerid, 4868, 1760.7900, 2279.4700, 12.4024, 0.25);
	RemoveBuildingForPlayer(playerid, 3418, 1759.7900, 2246.9399, 17.2094, 0.25);
	RemoveBuildingForPlayer(playerid, 3419, 1759.7900, 2246.9399, 17.2094, 0.25);
	RemoveBuildingForPlayer(playerid, 4959, 1796.9700, 2032.3600, 16.5275, 0.25);
	RemoveBuildingForPlayer(playerid, 4963, 1796.9700, 2032.3600, 16.5275, 0.25);
	RemoveBuildingForPlayer(playerid, 3430, 1921.9200, 2318.0400, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3442, 1921.9200, 2318.0400, 14.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 4990, 1906.0200, 2248.1101, 15.8075, 0.25);
	RemoveBuildingForPlayer(playerid, 4989, 1906.0200, 2244.8799, 15.8075, 0.25);
	RemoveBuildingForPlayer(playerid, 3420, 1789.0400, 2247.3000, 16.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 4438, 1773.5800, 2243.2800, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 4439, 1767.9700, 2243.2200, 14.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 4958, 1811.4200, 2036.3400, 16.6595, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1807.5424, 2039.8140, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1802.7195, 2039.8308, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1798.0652, 2039.7883, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1792.4341, 2039.8474, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1788.1743, 2039.8375, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1783.0938, 2039.7312, 15.8760, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1808.8199, 2278.4399, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1804.4399, 2278.5200, 14.6670, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1805.6200, 2277.5000, 14.6670, 0.25);
	RemoveBuildingForPlayer(playerid, 1218, 1804.6500, 2277.3000, 14.6670, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 1805.4200, 2278.6299, 14.6670, 0.25);
	RemoveBuildingForPlayer(playerid, 1222, 1805.2200, 2276.4800, 14.6670, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1731.1899, 2249.6399, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1730.4700, 2249.0200, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 1730.1500, 2250.1101, 15.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1867.1300, 2005.3700, 15.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1814.6200, 2019.9399, 16.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 4887, 1863.4380, 2035.7843, 12.7780, 0.25);
	RemoveBuildingForPlayer(playerid, 4887, 1837.7709, 2036.1066, 12.7780, 0.25);
	RemoveBuildingForPlayer(playerid, 5047, 221.7570, -2611.4800, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5048, 149.4820, -2642.8601, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5049, 67.2086, -2647.3201, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5050, 91.7605, -2741.1101, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5051, 15.1172, -2750.2400, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5052, 67.5365, -2818.1499, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5053, 43.7095, -2886.4500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5054, -80.7759, -2665.2300, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5055, -197.5580, -2701.9600, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5056, -265.6020, -2734.4500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5057, -68.0145, -2754.6499, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5058, -155.0630, -2782.7300, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5059, -154.5020, -2854.0500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5060, -69.6993, -2840.5701, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5061, -59.5904, -2898.4199, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5062, 221.7570, -2611.4800, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5063, 149.4820, -2642.8601, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5064, 67.2086, -2647.3201, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5065, 91.7605, -2741.1101, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5066, 15.1172, -2750.2400, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5067, 67.5365, -2818.1499, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5068, 43.7095, -2886.4500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5069, -80.7759, -2665.2300, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5070, -197.5580, -2701.9600, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5071, -265.6020, -2734.4500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5072, -68.0145, -2754.6499, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5073, -155.0630, -2782.7300, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5074, -154.5020, -2854.0500, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5075, -69.6993, -2840.5701, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 5076, -59.5904, -2898.4199, 32.6400, 0.25);
	RemoveBuildingForPlayer(playerid, 4849, 1936.8000, 2164.2300, 14.5383, 0.25);
	RemoveBuildingForPlayer(playerid, 4850, 1936.8000, 2164.2300, 14.5383, 0.25);
	RemoveBuildingForPlayer(playerid, 4865, 1901.3101, 2156.4800, 16.0900, 0.25);
	RemoveBuildingForPlayer(playerid, 4866, 1901.3101, 2152.1499, 16.0900, 0.25);
	RemoveBuildingForPlayer(playerid, 3414, 1936.8000, 2164.2300, 14.5383, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1898.5100, 2185.0000, 15.2760, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2158.4500, 19.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2163.4500, 20.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2168.4500, 19.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2173.4500, 20.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2178.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2183.4500, 19.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2188.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2193.4500, 20.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2198.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2203.4500, 19.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2208.4500, 20.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2213.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2218.4500, 19.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2223.4500, 20.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2228.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2233.4500, 19.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2238.4500, 19.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1896.5699, 2243.4500, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1905.2251, 2161.5288, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1905.2300, 2169.5300, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1904.3300, 2177.5300, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1904.1500, 2188.0400, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1904.1500, 2196.0400, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1904.1500, 2207.0400, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1904.1500, 2215.0400, 14.7695, 0.25);
	RemoveBuildingForPlayer(playerid, 9137, 1857.749, 1444.667, 9.483, 0.250);
	RemoveBuildingForPlayer(playerid, 9182, 1857.749, 1444.667, 9.483, 0.250);
	RemoveBuildingForPlayer(playerid, 9145, 1865.832, 1460.964, 9.569, 0.250);
	RemoveBuildingForPlayer(playerid, 9202, 1853.568, 1448.756, 9.454, 0.250);
	RemoveBuildingForPlayer(playerid, 9202, 1853.568, 1448.756, 9.454, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1858.366, 1465.635, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1863.934, 1457.943, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1860.272, 1466.364, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1859.055, 1466.488, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1858.924, 1464.303, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1867.510, 1458.413, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1862.648, 1462.256, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1862.762, 1459.011, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1862.871, 1460.640, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1860.870, 1464.491, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1863.747, 1463.600, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1865.086, 1463.638, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1867.598, 1463.401, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1865.760, 1457.962, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1866.461, 1463.604, 8.723, 0.250);
	RemoveBuildingForPlayer(playerid, 636, 1859.543, 1465.016, 8.996, 0.250);
	RemoveBuildingForPlayer(playerid, 4877, 1783.150, 1781.290, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 4878, 1783.150, 1781.290, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 4877, 1783.150, 1781.290, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 4878, 1783.150, 1781.290, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 4871, 1552.839, 1813.270, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 4872, 1552.839, 1813.270, 14.097, 0.250);
	RemoveBuildingForPlayer(playerid, 5300, 2475.7300, -686.6510, 11.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 5304, 2475.7300, -686.6510, 11.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 5302, 2475.7300, -686.6510, 11.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 5301, 2475.7300, -719.2750, 27.2800, 0.25);
	RemoveBuildingForPlayer(playerid, 5303, 2477.1299, -726.2430, 12.7400, 0.25);
	///старое вч
	RemoveBuildingForPlayer(playerid, 1807, 1950.0000, -2850.0000, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 1950.0000, -2850.0000, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 2009, 2567.8301, -2098.8000, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2010, 2567.8301, -2098.8000, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2013, 2533.7700, -2010.3400, 23.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2014, 2533.7700, -2010.3400, 23.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2015, 2538.8701, -1998.9301, 0.1900, 0.25);
	RemoveBuildingForPlayer(playerid, 2016, 2538.8701, -1998.9301, 0.1900, 0.25);
	RemoveBuildingForPlayer(playerid, 2019, 2559.6799, -2012.3800, 20.9640, 0.25);
	RemoveBuildingForPlayer(playerid, 2020, 2559.6799, -2012.3800, 20.9640, 0.25);
	RemoveBuildingForPlayer(playerid, 2024, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 2025, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 2418, 2097.6499, -2572.2200, 9.6560, 0.25);
	RemoveBuildingForPlayer(playerid, 2422, 1989.8900, -2550.6001, 9.1670, 0.25);
	RemoveBuildingForPlayer(playerid, 2423, 2044.7000, -2551.5000, 8.6820, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2558.3799, -2099.7000, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2533.0200, -2117.6599, 20.3925, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2554.5701, -2093.1599, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2561.1201, -2080.3401, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2547.0701, -2131.5000, 20.9267, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 2557.6299, -2087.3301, 16.4458, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2568.7800, -2080.2000, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2577.5901, -2080.6001, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2536.1799, -2090.7800, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2533.5100, -2108.6399, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2520.3799, -2087.3701, 20.4230, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 2557.6299, -2087.3301, 16.4458, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2547.0701, -2131.5000, 20.9267, 0.25);
	RemoveBuildingForPlayer(playerid, 874, 2540.5100, -2133.0901, 22.5030, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1957.9200, -2615.2100, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1953.7600, -2615.2000, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1959.9700, -2617.3501, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1960.0000, -2621.5300, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1959.9500, -2625.6699, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1951.6300, -2617.2800, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1951.6899, -2621.4500, 10.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1962.7200, -2628.1001, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1967.9000, -2628.1699, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1973.1000, -2628.2200, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1978.2900, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1983.4600, -2628.3101, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1988.7000, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1993.9500, -2628.2400, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1999.0699, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2004.2600, -2628.3401, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2009.4500, -2628.3401, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2014.6700, -2628.3101, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2019.9600, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2025.1899, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2030.4301, -2628.2700, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2035.6000, -2628.2400, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2040.7900, -2628.2200, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2046.0000, -2628.2500, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2051.2500, -2628.2500, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2056.4199, -2628.2800, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2061.5400, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2066.7400, -2628.3201, 11.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1958.7900, -2615.9399, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1954.1700, -2617.8701, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1958.0800, -2620.3799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1953.3700, -2621.3799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1957.4301, -2624.6001, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1953.1400, -2625.6101, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1956.9700, -2618.3601, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1952.8500, -2616.9099, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1953.0400, -2619.8799, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1954.8101, -2623.6101, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1957.0900, -2626.6201, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1957.6500, -2621.9399, 9.9998, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1946.6000, -2627.0901, 10.4000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 1948.8600, -2624.6399, 10.4000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1955.8300, -2620.1599, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.9800, -2616.6799, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1953.3600, -2623.6299, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.1899, -2625.2100, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 1956.8400, -2622.7400, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1955.2900, -2625.5000, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1957.4000, -2618.8601, 15.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2108.1899, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2108.1899, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2102.6699, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2102.6699, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2094.4399, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2574.1499, -2087.9299, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2094.4399, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2567.1201, -2087.9299, 33.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2563.3799, -2110.8899, 21.7335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.9099, -2101.7800, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.8601, -2100.3999, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2542.8101, -2107.6299, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2566.2800, -2109.9099, 21.7469, 0.25);
	RemoveBuildingForPlayer(playerid, 1218, 2542.3000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1218, 2541.3999, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2540.5000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2543.1001, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2540.3999, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2543.2000, -2103.5901, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, 2541.3000, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2542.2000, -2102.6899, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2568.2900, -2111.0200, 21.7469, 0.25);
	RemoveBuildingForPlayer(playerid, 1217, 2541.3201, -2098.7800, 23.3469, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2562.3601, -2111.2000, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2566.7100, -2111.8501, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2565.7200, -2111.2100, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2569.3701, -2110.5701, 21.7335, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2566.6101, -2111.6599, 23.1335, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2563.4099, -2111.8401, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1221, 2567.3101, -2110.4900, 21.7760, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2540.7100, -2097.4399, 23.3335, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2568.6799, -2111.9600, 22.5248, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2542.2000, -2105.2900, 23.3248, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2565.7000, -2111.4500, 22.5248, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 2561.6201, -2117.2300, 20.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 2560.0200, -2118.3201, 20.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 2564.5500, -2111.2800, 21.9270, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2570.5801, -2111.9700, 21.7826, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2540.6699, -2108.2400, 23.3826, 0.25);
	RemoveBuildingForPlayer(playerid, 1755, 2540.8301, -2109.6899, 23.3100, 0.25);
	RemoveBuildingForPlayer(playerid, 1755, 2564.9900, -2109.6001, 21.7600, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2566.5200, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2564.7700, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 874, 2540.5100, -2133.0901, 22.5030, 0.25);
	RemoveBuildingForPlayer(playerid, 803, 2555.9099, -2083.6101, 21.5571, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2540.7000, -2101.3000, 23.3826, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3000, -2130.2100, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3101, -2122.9900, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2514.3101, -2120.1599, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2120.2000, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2123.0000, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2504.3501, -2130.1899, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2026, 2509.4099, -2117.8201, 24.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2505.1399, -2123.4299, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2505.1299, -2119.9800, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2509.5400, -2123.5500, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2508.8401, -2123.5601, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2507.3000, -2118.6799, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2511.3101, -2118.7800, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2513.4299, -2120.1299, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2513.5400, -2123.5100, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 2405, 2011.0900, -2603.8899, 9.8024, 0.25);
	RemoveBuildingForPlayer(playerid, 2406, 2011.0900, -2603.8899, 9.8024, 0.25);
	RemoveBuildingForPlayer(playerid, 2427, 2068.1299, -2631.8899, 10.0100, 0.25);
	RemoveBuildingForPlayer(playerid, 2433, 2068.1299, -2631.8899, 10.0100, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2086.3601, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2103.1599, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1769, 2541.8201, -2069.5601, 22.6200, 0.25);
	RemoveBuildingForPlayer(playerid, 1770, 2541.8201, -2052.4299, 24.2100, 0.25);
	RemoveBuildingForPlayer(playerid, 2021, 2564.7700, -2112.5000, 21.4212, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2542.6399, -2096.9600, 23.6300, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2573.0701, -2111.6699, 22.0300, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 2542.6299, -2109.2600, 23.6300, 0.25);
	RemoveBuildingForPlayer(playerid, 2960, 2541.8301, -2097.7000, 23.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2934, 2541.8201, -2090.1001, 24.3510, 0.25);
	RemoveBuildingForPlayer(playerid, 2935, 2541.8201, -2082.6699, 24.3510, 0.25);
	RemoveBuildingForPlayer(playerid, 2029, 2509.3601, -2126.9900, 20.2600, 0.25);
	RemoveBuildingForPlayer(playerid, 2030, 2514.5500, -2128.0801, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2031, 2514.5400, -2125.2700, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2030, 2504.1399, -2125.2400, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2031, 2504.1499, -2128.0500, 23.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.1499, -2125.9099, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.1799, -2127.3799, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.4700, -2127.3501, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2504.4600, -2125.8999, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.1101, -2125.8799, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.1101, -2127.3501, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.4199, -2127.3701, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 2027, 2514.4199, -2125.9099, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1707, 2544.2300, -2019.1300, 21.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1299, 2570.5801, -2111.9700, 21.7826, 0.25);
	RemoveBuildingForPlayer(playerid, 1771, 2541.8201, -2034.1300, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1785, 2567.4800, -2113.5300, 20.9600, 0.25);
	RemoveBuildingForPlayer(playerid, 1788, 1973.1100, -2610.3301, 22.7800, 0.25);
	RemoveBuildingForPlayer(playerid, 1786, 1973.1100, -2610.3301, 12.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1786, 1973.1100, -2610.3301, 2.9800, 0.25);
	RemoveBuildingForPlayer(playerid, 1788, 1973.5800, -2609.1299, 25.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1538.4900, 1833.2900, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1587.5601, 1833.3101, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1636.6899, 1833.3000, 18.1000, 0.25);
	RemoveBuildingForPlayer(playerid, 3166, 1685.7700, 1833.3000, 17.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 4941, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4954, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4877, 1783.1500, 1781.2900, 14.0974, 0.25);
	RemoveBuildingForPlayer(playerid, 4878, 1783.1500, 1781.2900, 14.0974, 0.25);
	RemoveBuildingForPlayer(playerid, 4871, 1552.8400, 1813.2700, 14.0970, 0.25);
	RemoveBuildingForPlayer(playerid, 4872, 1552.8400, 1813.2700, 14.0970, 0.25);
	RemoveBuildingForPlayer(playerid, 4942, 1898.8300, 1736.3800, 14.3435, 0.25);
	RemoveBuildingForPlayer(playerid, 4943, 1898.8300, 1736.3800, 14.3435, 0.25);
}
stock CreateObjectMode() {
	new tmpobjid;
	tmpobjid = CreateDynamicObject(19071, 145.610000, 2036.949951, 699.979980, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2606, "scroads", "road5", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 152.929992, 2060.270019, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 141.479995, 2060.229980, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 143.979995, 2060.229980, 705.880004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.869995, 2054.060058, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 143.800003, 2060.409912, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 143.800003, 2054.620117, 707.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.479995, 2054.000000, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.309997, 2054.020019, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 138.699996, 2049.870117, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 136.500000, 2055.250000, 703.320007, 0.000000, 0.000000, 90.059997, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2052.179931, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2051.209960, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2050.219970, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2049.239990, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2048.239990, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 143.800003, 2047.290039, 702.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.869995, 2045.439941, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.479995, 2045.459960, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 143.309997, 2045.500000, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 143.800003, 2039.150024, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 143.809997, 2044.670043, 707.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 144.949996, 2040.020019, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 150.089996, 2042.839965, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 149.630004, 2049.209960, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 150.029998, 2049.189941, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 150.190002, 2049.179931, 700.979980, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2632, "1995_fence", "black", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 150.089996, 2055.580078, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 150.089996, 2051.290039, 707.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 154.869995, 2053.780029, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 158.509994, 2048.750000, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 154.779998, 2042.709960, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 158.509994, 2041.500000, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 136.919998, 2040.020019, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 132.259994, 2044.760009, 703.320007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 136.779998, 2049.870117, 703.320007, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10058, "manhuntmall", "GB__toyshop_unitdoor02", 0x00000000);
	tmpobjid = CreateDynamicObject(19071, 148.389999, 2056.969970, 705.780029, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2591, "scroads", "road5", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1535, 146.449996, 2059.810058, 700.869995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3184, 141.949996, 2050.810058, 701.809997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3184, 138.779998, 2050.810058, 701.809997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 140.899993, 2050.739990, 702.719970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 141.320007, 2050.709960, 702.719970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 142.789993, 2050.800048, 702.719970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 142.789993, 2050.800048, 702.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 142.160003, 2050.719970, 702.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 141.130004, 2050.879882, 701.890014, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 142.229995, 2050.860107, 701.380004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 139.759994, 2050.739990, 702.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 138.880004, 2050.790039, 702.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 138.880004, 2050.790039, 702.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 139.570007, 2050.790039, 701.880004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3016, 137.990005, 2050.760009, 701.869995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2916, 137.279998, 2051.560058, 701.039978, 0.000000, 0.000000, 95.940002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2916, 137.279998, 2052.399902, 701.039978, 0.000000, 0.000000, 95.940002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2916, 137.940002, 2051.540039, 701.039978, 0.000000, 0.000000, 95.940002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2916, 137.899993, 2052.479980, 701.039978, 0.000000, 0.000000, 95.940002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1440, 141.750000, 2059.120117, 701.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1583, 138.529998, 2059.350097, 700.950012, 0.000000, 0.000000, 31.260000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1583, 138.899993, 2059.330078, 700.950012, 0.000000, 0.000000, 31.260000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1583, 139.529998, 2059.350097, 700.950012, 0.000000, 0.000000, 31.260000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 142.770004, 2058.149902, 701.309997, 0.000000, 0.000000, -0.059999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 142.850006, 2056.870117, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1536, 146.130004, 2040.459960, 700.960021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1725, 156.320007, 2051.179931, 701.320007, 0.000000, 0.000000, -7.380000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1725, 153.080001, 2051.209960, 701.320007, 0.000000, 0.000000, -33.659999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1725, 155.669998, 2045.150024, 701.320007, 0.000000, 0.000000, 52.979999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3119, 156.839996, 2046.250000, 701.229980, 0.000000, 0.000000, -3.299999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3119, 153.899993, 2049.439941, 701.229980, 0.000000, 0.000000, -79.019996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3172, 152.130004, 2044.430053, 701.380004, 0.000000, 0.000000, 155.220001, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1429, 152.160003, 2044.290039, 702.099975, 0.000000, 0.000000, 153.899993, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 150.970001, 2045.900024, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 150.919998, 2052.790039, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3178, 137.470001, 2056.580078, 701.880004, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10200, 134.919998, 2040.969970, 701.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10200, 134.919998, 2041.890014, 701.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10200, 134.919998, 2042.790039, 701.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10200, 134.919998, 2043.689941, 701.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10200, 134.919998, 2044.589965, 701.000000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1421, 133.300003, 2048.600097, 701.559997, 0.000000, 0.000000, 63.119998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10265, 137.160003, 2042.180053, 701.210021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10265, 134.190002, 2048.330078, 701.190002, 0.000000, 0.000000, -62.159999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10269, 135.220001, 2044.719970, 702.200012, 0.000000, 0.000000, -172.800003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10269, 134.929992, 2044.160034, 702.200012, 0.000000, 0.000000, -172.800003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 140.919998, 2042.060058, 701.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 137.979995, 2045.849975, 701.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1670, 137.889999, 2045.640014, 701.869995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1665, 138.100006, 2046.000000, 701.900024, 0.000000, 0.000000, 51.119998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 135.149993, 2043.680053, 702.219970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 134.860000, 2043.359985, 702.219970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 135.110000, 2043.229980, 702.219970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1667, 134.979995, 2042.550048, 702.179992, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1667, 135.110000, 2042.319946, 702.059997, -69.419998, -63.119998, -52.380001, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1667, 134.869995, 2042.089965, 702.179992, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 135.080001, 2043.040039, 702.090026, 68.940002, 60.540000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1535, 132.740005, 2041.989990, 700.869995, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10269, 140.779998, 2042.349975, 702.000000, 0.000000, 0.000000, -172.800003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 140.740005, 2041.979980, 702.020019, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 140.899993, 2042.010009, 701.900024, 62.099998, -29.399999, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3174, 141.740005, 2048.479980, 701.270019, -37.200000, 80.339996, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3174, 139.229995, 2048.370117, 701.270019, -37.200000, 80.339996, 138.539993, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1421, 134.729995, 2049.060058, 701.559997, 0.000000, 0.000000, 8.819999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3119, 148.580001, 2056.270019, 701.229980, 0.000000, 0.000000, -71.160003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3119, 144.070007, 2050.669921, 701.229980, 0.000000, 0.000000, -160.139999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 149.050003, 2041.280029, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 149.149993, 2042.280029, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1265, 149.149993, 2042.280029, 701.309997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4987, 144.669998, 2041.069946, 701.469970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4987, 144.699996, 2042.390014, 701.469970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10265, 147.350006, 2043.280029, 701.210021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 151.429992, 2044.920043, 702.030029, 0.000000, 0.000000, 31.920000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 151.839996, 2044.989990, 702.030029, 0.000000, 0.000000, 31.920000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 151.470001, 2045.270019, 702.030029, 0.000000, 0.000000, 31.920000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 151.649993, 2044.579956, 702.030029, 0.000000, 0.000000, 31.920000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 145.600006, 2057.209960, 701.020019, -97.680000, -144.839996, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 144.850006, 2058.639892, 701.020019, -97.680000, -144.839996, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1664, 144.339996, 2055.479980, 701.020019, -97.680000, -144.839996, 71.940002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3119, 149.070007, 2046.770019, 701.229980, 0.000000, 0.000000, -354.239990, -1, -1, -1, 300.00, 300.00);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	tmpobjid = CreateDynamicObject(19368, 2139.050048, -1978.810058, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.399902, -1980.359985, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.399902, -1976.469970, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.919921, -1974.790039, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.919921, -1971.579956, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.919921, -1968.369995, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2139.050048, -1966.849975, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2140.570068, -1965.160034, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2133.919921, -1965.959960, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2143.780029, -1965.160034, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2143.780029, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2137.360107, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2134.149902, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2127.739990, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.229980, -1965.229980, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2129.030029, -1965.229980, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19396, 2125.820068, -1965.229980, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2122.610107, -1965.229980, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2119.399902, -1965.229980, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.280029, -1966.920043, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19396, 2124.280029, -1970.130004, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2131.629882, -1978.050048, 906.770019, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2131.629882, -1981.260009, 906.770019, 180.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.280029, -1973.329956, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.280029, -1976.540039, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.280029, -1979.739990, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2129.189941, -1980.359985, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2125.979980, -1980.359985, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19396, 2140.570068, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19396, 2130.939941, -1959.430053, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2126.030029, -1957.750000, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2126.030029, -1954.540039, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2126.030029, -1951.329956, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2126.030029, -1948.119995, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2126.030029, -1944.920043, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbelblue", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.820068, -1974.790039, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.820068, -1971.579956, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2133.820068, -1968.369995, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2133.820068, -1965.979980, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(18783, 2148.989990, -1978.189941, 899.989990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(18783, 2129.830078, -1970.800048, 900.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(18783, 2129.830078, -1981.180053, 897.969970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(18767, 2135.489990, -1985.709960, 897.580017, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2321, "8bitmusicclub", "8bit_groundmain", 0x00000000);
	tmpobjid = CreateDynamicObject(18767, 2134.489990, -1985.709960, 897.580017, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2321, "8bitmusicclub", "8bit_groundmain", 0x00000000);
	tmpobjid = CreateDynamicObject(18767, 2133.489990, -1985.709960, 897.580017, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2321, "8bitmusicclub", "8bit_groundmain", 0x00000000);
	tmpobjid = CreateDynamicObject(18767, 2132.489990, -1985.709960, 897.580017, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2321, "8bitmusicclub", "8bit_groundmain", 0x00000000);
	tmpobjid = CreateDynamicObject(18767, 2131.489990, -1985.709960, 897.580017, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2321, "8bitmusicclub", "8bit_groundmain", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2140.739990, -1977.300048, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2145.469970, -1975.770019, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2145.469970, -1972.569946, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2145.469970, -1969.359985, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2143.949951, -1977.300048, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2143.949951, -1968.359985, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2140.739990, -1968.359985, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(18783, 2149.830078, -1955.329956, 900.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(18783, 2129.830078, -1950.800048, 900.000000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2131.520019, -1978.280029, 903.440002, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2131.520019, -1981.780029, 903.440002, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2132.229980, -1978.280029, 902.549987, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2132.229980, -1981.780029, 902.549987, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2130.840087, -1978.280029, 902.549987, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19441, 2130.840087, -1981.780029, 902.549987, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2122.590087, -1965.410034, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2124.100097, -1966.920043, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2119.379882, -1965.410034, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2122.610107, -1970.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2119.399902, -1970.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2117.889892, -1970.130004, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19364, 2117.889892, -1966.920043, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2135.780029, -1957.569946, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2143.780029, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2137.360107, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2134.149902, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2127.739990, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19384, 2140.570068, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19384, 2130.939941, -1959.250000, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2145.300048, -1957.569946, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2126.229980, -1957.569946, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2135.780029, -1954.359985, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2135.780029, -1951.150024, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2135.780029, -1947.939941, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2145.300048, -1947.939941, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2126.229980, -1947.939941, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2145.300048, -1951.150024, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2126.229980, -1951.150024, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2145.300048, -1954.359985, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2126.229980, -1954.359985, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2134.149902, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19400, 2130.939941, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2127.739990, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2137.360107, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19354, 2143.780029, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19400, 2140.570068, -1946.949951, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_tmb_bok", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 2140.550048, -1947.000000, 904.530029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 2130.919921, -1947.000000, 904.530029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 2140.580078, -1947.319946, 903.690002, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 2130.939941, -1947.390014, 903.690002, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2140.649902, -1986.900024, 902.049987, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(1930, 2138.929931, -1988.890014, 902.059997, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1986, "stalinki", "st2_hollwin", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2140.649902, -1990.800048, 902.049987, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2140.649902, -1986.900024, 905.250000, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2140.649902, -1990.800048, 905.250000, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(1930, 2138.909912, -1988.890014, 902.059997, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1986, "stalinki", "st2_hollwin", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.300048, -1986.900024, 902.049987, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.300048, -1990.800048, 902.049987, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(1930, 2134.020019, -1988.890014, 902.059997, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1986, "stalinki", "st2_hollwin", 0x00000000);
	tmpobjid = CreateDynamicObject(1930, 2134.040039, -1988.890014, 902.059997, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1986, "stalinki", "st2_hollwin", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.300048, -1986.900024, 905.250000, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2132.300048, -1990.800048, 905.250000, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2132.500000, -1967.439941, 902.950012, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2133.120117, -1975.000000, 902.969970, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2132.310058, -1972.959960, 902.969970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2131.840087, -1974.780029, 902.950012, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1744, 2133.419921, -1973.750000, 903.760009, 0.000000, 0.000000, 19.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2083, "EasterEGGs1", "24_desktop", 0x00000000);
	tmpobjid = CreateDynamicObject(1744, 2133.479980, -1974.750000, 903.760009, 0.000000, 0.000000, -9.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2083, "EasterEGGs1", "004_desktop", 0x00000000);
	tmpobjid = CreateDynamicObject(1744, 2132.620117, -1973.089965, 903.760009, 0.000000, 0.000000, 84.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2083, "EasterEGGs1", "24_desktop", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2130.060058, -1979.290039, 902.950012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2129.929931, -1977.550048, 902.950012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2126.229980, -1974.849975, 902.950012, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2126.110107, -1972.699951, 902.950012, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2118.590087, -1970.290039, 902.950012, 0.000000, 0.000000, 120.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 2121.000000, -1966.550048, 903.719970, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(8701, 2121.000000, -1967.599975, 903.710021, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2131.050048, -1949.329956, 902.979980, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2130.939941, -1947.920043, 903.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(1744, 2130.310058, -1949.550048, 903.770019, 0.000000, 0.000000, -114.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2083, "EasterEGGs1", "24_desktop", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2135.080078, -1950.640014, 902.940002, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2135.260009, -1954.170043, 902.940002, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2135.270019, -1957.900024, 902.940002, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2126.840087, -1958.239990, 902.940002, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2126.909912, -1954.390014, 902.940002, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2126.939941, -1950.910034, 902.940002, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(1663, 2131.790039, -1950.349975, 902.940002, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2125, "drainsta", "metallic", 0x00000000);
	tmpobjid = CreateDynamicObject(19173, 2126.320068, -1953.979980, 904.570007, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2615, "M@RS_st_fence", "flgb_russia", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2140.489990, -1949.630004, 902.979980, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2140.379882, -1948.079956, 903.130004, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(1744, 2139.790039, -1949.930053, 903.750000, 0.000000, 0.000000, -114.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2083, "EasterEGGs1", "004_desktop", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2140.489990, -1951.290039, 902.969970, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(3172, 2140.489990, -1954.130004, 902.969970, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9183, "pbIba_pog", "furniture_3", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2141.820068, -1951.209960, 903.130004, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2141.850097, -1954.170043, 903.130004, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2139.199951, -1954.199951, 903.130004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(1562, 2139.199951, -1951.140014, 903.130004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(2028, 2144.750000, -1970.069946, 902.900024, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10061, "manhuntmall", "Gill_toyshop_counter01", 0x00000000);
	tmpobjid = CreateDynamicObject(2028, 2144.770019, -1975.780029, 902.900024, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10061, "manhuntmall", "Gill_toyshop_counter01", 0x00000000);
	tmpobjid = CreateDynamicObject(2028, 2144.820068, -1973.069946, 902.900024, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10061, "manhuntmall", "Gill_toyshop_counter01", 0x00000000);
	tmpobjid = CreateDynamicObject(19393, 2124.100097, -1970.130004, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "polokbel", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2134.429931, -1974.400024, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2134.459960, -1963.939941, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2138.510009, -1963.849975, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2127.040039, -1963.140014, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2129.729980, -1958.319946, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2132.179931, -1958.319946, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2139.389892, -1958.319946, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2141.659912, -1958.319946, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2139.479980, -1962.969970, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2133.580078, -1962.969970, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(3111, 2138.959960, -1967.239990, 904.479980, 90.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2605, "bob88_admin", "gerb", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2131.229980, -1978.310058, 902.989990, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10226, 2131.840087, -1965.660034, 904.659973, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_TV_SCREEN", 0x00000000);
	tmpobjid = CreateDynamicObject(3111, 2129.070068, -1965.329956, 904.349975, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_censored", 0x00000000);
	tmpobjid = CreateDynamicObject(10178, 2124.659912, -1979.260009, 903.739990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2124.879882, -1974.869995, 902.989990, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2124.879882, -1972.750000, 902.989990, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(19164, 2133.659912, -1970.040039, 904.530029, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 2203, "mentovka_int3rd", "Most_Wanted_1024", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2128.090087, -1950.760009, 903.020019, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2128.090087, -1954.300048, 903.020019, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2128.090087, -1958.020019, 903.020019, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2133.939941, -1950.760009, 903.020019, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2133.949951, -1954.300048, 903.020019, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(10182, 2133.939941, -1958.020019, 903.020019, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2135.060058, -1945.989990, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2144.699951, -1956.849975, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2136.350097, -1956.849975, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2136.500000, -1946.020019, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2144.760009, -1945.979980, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.320068, -1963.560058, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.330078, -1960.369995, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2124.540039, -1959.439941, 904.229980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2145.320068, -1961.010009, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, 2145.320068, -1964.199951, 904.229980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "mp_shop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(741, 2124.899902, -1958.329956, 902.760009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "grass1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "mp_diner_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2139.459960, -1992.900024, 902.489990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2074, "mahmutil_bar", "GB_midbar01", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2133.510009, -1992.890014, 902.489990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2074, "mahmutil_bar", "GB_midbar01", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2135.669921, -1991.329956, 902.489990, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2074, "mahmutil_bar", "GB_midbar01", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 2130.169921, -1959.439941, 902.469970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "tnk2", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 2139.790039, -1959.439941, 902.469970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "tnk2", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 2125.050048, -1965.229980, 902.469970, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1907, "mahhousepack", "top", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1907, "mahhousepack", "tnk2", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2134.429931, -1974.119995, 902.989990, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2134.409912, -1970.900024, 902.989990, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2134.419921, -1967.750000, 902.989990, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2131.590087, -1964.689941, 902.960021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2128.610107, -1964.699951, 902.960021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2127.239990, -1959.910034, 902.960021, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2141.409912, -1964.660034, 902.960021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2143.649902, -1959.959960, 902.960021, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2144.790039, -1956.599975, 902.940002, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2144.770019, -1950.420043, 902.940002, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2136.280029, -1950.160034, 902.940002, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(10121, 2136.290039, -1956.310058, 902.940002, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2081, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(19174, 2134.020019, -1974.010009, 904.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "gruppirovka", 0x00000000);
	tmpobjid = CreateDynamicObject(19174, 2134.020019, -1968.510009, 904.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2203, "mentovka_int3rd", "ment_plakat_1", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2134.879882, -1978.660034, 906.369995, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2134.879882, -1953.699951, 906.369995, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 2109.889892, -1967.079956, 906.369995, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2081, "cj_office", "CJ_WOOD_DARK", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(10236, 2136.649902, -1983.000000, 900.869995, 30.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10236, 2138.989990, -1982.979980, 900.869995, 30.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10236, 2134.340087, -1982.989990, 900.869995, 30.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10243, 2136.649902, -1984.869995, 900.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10243, 2139.169921, -1984.849975, 900.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10243, 2134.459960, -1984.869995, 900.460021, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, 2132.780029, -1974.510009, 903.479980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, 2131.060058, -1948.959960, 903.489990, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, 2140.560058, -1949.260009, 903.489990, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2201, 2130.699951, -1977.000000, 905.099975, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1975.449951, 903.119995, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1970.199951, 903.119995, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, 2139.830078, -1972.829956, 903.750000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1970.199951, 904.369995, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1975.449951, 904.369995, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1970.199951, 905.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2139.830078, -1975.449951, 905.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, 2139.830078, -1972.829956, 906.250000, 180.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2591, 2162.770019, -1937.430053, 891.260009, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1569, 2134.969970, -1990.859985, 900.440002, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1569, 2137.969970, -1990.859985, 900.440002, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3181, 2124.310058, -1969.349975, 903.710021, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2138.860107, -1944.770019, 905.159973, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2137.179931, -1944.770019, 905.159973, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2138.020019, -1944.770019, 905.159973, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2138.949951, -1944.770019, 905.900024, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2138.949951, -1944.770019, 907.260009, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2132.639892, -1944.770019, 905.159973, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2134.340087, -1944.770019, 905.159973, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2133.479980, -1944.770019, 905.159973, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2132.020019, -1944.770019, 905.929992, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19157, 2132.020019, -1944.770019, 907.270019, 90.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2134.429931, -1976.069946, 902.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2134.469970, -1965.530029, 902.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2138.520019, -1965.430053, 902.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2127.050048, -1964.780029, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2129.719970, -1959.939941, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2132.189941, -1959.989990, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2139.419921, -1959.969970, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2141.659912, -1959.930053, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2139.409912, -1964.599975, 902.729980, 0.000000, 0.000000, 66.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2133.580078, -1964.569946, 902.729980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10009, 2143.219970, -1964.660034, 902.659973, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10199, 2131.389892, -1965.609985, 904.119995, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.500000, -1965.140014, 904.719970, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2130.760009, -1965.140014, 904.719970, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2130.060058, -1965.140014, 904.719970, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2129.340087, -1965.140014, 904.719970, 90.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2134.639892, -1959.520019, 904.419982, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2136.979980, -1959.520019, 904.419982, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10166, 2130.979980, -1947.069946, 902.929992, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10166, 2140.669921, -1947.079956, 902.929992, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10166, 2140.709960, -1976.989990, 902.929992, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10166, 2140.729980, -1968.670043, 902.929992, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.250000, -1977.150024, 903.530029, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.250000, -1977.150024, 903.549987, 0.000000, 0.000000, -92.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.250000, -1977.150024, 903.570007, 0.000000, 0.000000, -94.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.250000, -1977.150024, 903.590026, 0.000000, 0.000000, -96.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10176, 2132.419921, -1965.959960, 903.270019, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10226, 2132.419921, -1965.660034, 904.659973, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(10226, 2133.000000, -1965.660034, 904.659973, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1748, 2132.750000, -1974.979980, 903.479980, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2133.000000, -1975.699951, 903.450012, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2133.000000, -1975.699951, 903.469970, 0.000000, 0.000000, -94.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2133.000000, -1975.699951, 903.489990, 0.000000, 0.000000, -100.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2133.000000, -1975.699951, 903.530029, 0.000000, 0.000000, -104.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2124.229980, -1976.489990, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2124.229980, -1977.359985, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2124.370117, -1976.859985, 904.549987, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2121.280029, -1967.239990, 903.099975, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, 2121.290039, -1969.849975, 903.750000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2121.290039, -1967.219970, 905.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, 2121.290039, -1970.719970, 905.609985, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.010009, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.859985, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1967.719970, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1968.579956, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1969.439941, 902.380004, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1969.439941, 903.280029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1969.439941, 904.200012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1968.579956, 903.280029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1967.719970, 903.280029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.859985, 903.280029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.010009, 903.280029, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1968.579956, 904.200012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1967.719970, 904.200012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.859985, 904.200012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2118.239990, -1966.010009, 904.200012, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1748, 2130.570068, -1948.900024, 903.500000, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.760009, -1949.300048, 903.469970, 0.000000, 0.000000, -120.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.760009, -1949.300048, 903.510009, 0.000000, 0.000000, -120.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2131.760009, -1949.300048, 903.549987, 0.000000, 0.000000, -120.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18865, 2132.209960, -1948.969970, 903.469970, 0.000000, 0.000000, 222.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2127.939941, -1947.040039, 904.539978, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2133.979980, -1947.040039, 904.539978, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2135.030029, -1947.650024, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1748, 2140.030029, -1949.290039, 903.500000, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2140.510009, -1949.800048, 903.469970, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2145.219970, -1953.560058, 904.539978, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2140.800048, -1951.170043, 903.469970, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2140.860107, -1954.150024, 903.469970, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2140.120117, -1954.140014, 903.469970, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2894, 2140.159912, -1951.140014, 903.469970, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19418, 2139.600097, -1949.400024, 903.489990, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2135.870117, -1953.520019, 904.539978, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1516, 2136.399902, -1953.530029, 902.619995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1516, 2144.610107, -1953.410034, 902.619995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2144.709960, -1958.449951, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2136.399902, -1958.479980, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2136.479980, -1947.579956, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2144.719970, -1947.609985, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3130, 2143.189941, -1946.959960, 902.340026, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19418, 2147.600097, -1967.199951, 903.460021, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1739, 2124.409912, -1962.550048, 904.419982, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(679, 2124.909912, -1960.010009, 902.729980, 0.000000, 0.000000, 40.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3074, 2134.560058, -1946.859985, 905.979980, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	//
	new newmagaz;
	newmagaz = CreateDynamicObject(19071, 595.254089, 73.361351, 380.665008, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2067, "tyk_hummer", "hum_plitka2", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 576.015686, 73.123756, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 576.015686, 76.320503, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 576.015686, 79.530998, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 576.015686, 82.733596, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 576.015686, 85.927001, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 577.671081, 87.434638, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 580.863708, 87.434600, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 577.528869, 71.598602, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 580.725891, 71.598602, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.978759, 85.862297, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.978820, 82.660400, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.978820, 79.460403, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.978820, 76.260200, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.978820, 73.059997, 383.332000, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(1938, 574.205200, 85.906799, 382.352111, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(1938, 574.205200, 82.865798, 382.352111, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 82.186218, 382.879821, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 83.887603, 382.879791, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 85.585601, 382.879791, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 87.266601, 382.879791, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 82.186218, 381.866607, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 83.897903, 381.866607, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 85.569900, 381.866607, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 576.537170, 87.290397, 381.866607, 0.000000, 180.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 85.896301, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 85.279701, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 84.196296, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 82.496498, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 81.916000, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(19087, 576.550903, 83.591499, 383.597290, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2297, "TVtower", "OSTower_carpet", 0x00000000);
	newmagaz = CreateDynamicObject(10170, 576.454162, 78.986213, 381.676330, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 581.204040, 85.617942, 381.620330, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 580.691589, 72.800491, 381.508300, -90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 580.691589, 77.355697, 381.508300, -90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 580.691589, 81.858200, 381.508300, -90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 580.691589, 86.241897, 381.508300, -90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 582.129699, 85.617897, 381.620300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 583.048583, 85.617897, 381.620300, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 581.202270, 81.282043, 381.630554, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 582.125976, 81.281997, 381.630615, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 583.052612, 81.281997, 381.630615, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 581.205322, 76.747596, 381.630615, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 582.125976, 76.747596, 381.630615, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 583.047302, 76.747596, 381.630615, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 581.192749, 73.399612, 381.630615, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 582.123474, 73.399597, 381.630615, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10200, 583.042907, 73.399597, 381.630615, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 3, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 4, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 581.775390, 78.375602, 381.508300, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(19466, 581.747436, 82.947883, 381.508300, -90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1907, "mahhousepack", "cof_wind1", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 586.381103, 87.352752, 382.873138, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(1930, 582.802124, 71.644256, 381.662109, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2440, "pochtamt_bob88", "glass1-1", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 586.397888, 71.598602, 383.342132, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.689819, 71.598602, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(1930, 589.625305, 71.644302, 381.662109, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2440, "pochtamt_bob88", "glass1-1", 0x00000000);
	newmagaz = CreateDynamicObject(1930, 582.834228, 87.362007, 381.662109, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2440, "pochtamt_bob88", "glass1-1", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 586.456115, 87.434600, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(19354, 591.961975, 87.434600, 383.332000, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1940, "mahmutil_bar", "wallpaper_06", 0x00000000);
	newmagaz = CreateDynamicObject(1930, 588.246704, 87.361999, 381.662109, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2440, "pochtamt_bob88", "glass1-1", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 586.381103, 81.506797, 382.873107, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 586.381103, 76.503196, 382.873107, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 586.381103, 71.674003, 382.873107, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 591.866699, 73.037719, 382.873107, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(10101, 591.872924, 85.981201, 382.873107, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	SetDynamicObjectMaterial(newmagaz, 1, 2200, "mentovka_int", "ment_wood2", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 76.364753, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 77.952697, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 79.529197, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 81.112396, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 82.695602, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(19429, 591.594116, 83.858100, 382.039398, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 1904, "mahhouse1inttex", "mah_privatehouse_roomwall1", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 591.527526, 76.422660, 382.908843, 180.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 591.527526, 78.571998, 382.908813, 180.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 591.527526, 80.811798, 382.908813, 180.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(1587, 591.527526, 83.149902, 382.908813, 180.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2601, "sch1195_tex", "1195_clearwall", 0x00000000);
	newmagaz = CreateDynamicObject(19071, 588.163085, 77.907249, 385.972991, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(newmagaz, 0, 2176, "mah_industri2", "gunboard", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	newmagaz = CreateDynamicObject(1569, 577.006591, 87.360641, 381.633972, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1569, 579.971679, 87.360603, 381.634002, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 580.911926, 85.612930, 381.562286, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 580.911926, 81.266296, 381.562286, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 580.911926, 76.731903, 381.562286, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 580.911926, 72.182197, 381.562286, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 582.340087, 78.605957, 381.562286, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10236, 582.361755, 83.140197, 381.562286, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1671, 581.213317, 82.417503, 382.063079, 0.000000, 0.000000, 50.819988, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1671, 581.278930, 86.878517, 382.063079, 0.000000, 0.000000, 50.819988, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1671, 581.198547, 77.778198, 382.063079, 0.000000, 0.000000, 50.819988, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1671, 581.300842, 72.090652, 382.063079, 0.000000, 0.000000, 141.659973, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1514, 581.341491, 85.658287, 382.773223, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(367, 585.220520, 87.003509, 382.139038, 0.000000, 7.000000, -30.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18632, 586.901367, 71.994583, 382.105438, 89.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18645, 585.357666, 87.132698, 383.139160, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 585.299255, 81.672286, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(3017, 585.739746, 81.418426, 382.557342, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18635, 586.713623, 81.368110, 382.519927, 90.000000, -90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.746826, 84.807968, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 582.396728, 71.600372, 384.807250, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 584.737304, 71.600402, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 588.065979, 71.600402, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 590.129211, 71.600402, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 582.500732, 87.413002, 384.807250, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 584.791076, 87.413002, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 588.121582, 87.413002, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(4416, 590.259094, 87.413002, 384.807312, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10009, 576.422058, 76.434288, 381.662689, 0.000000, 0.000000, -270.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10010, 576.566223, 75.387718, 382.740295, 0.000000, 0.000000, -270.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10011, 576.522033, 74.278121, 382.740295, 0.000000, 0.000000, -270.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10012, 576.477416, 73.155639, 382.036926, 0.000000, 0.000000, -270.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10174, 576.484191, 72.090843, 382.169647, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1938, 593.853088, 83.120193, 382.540985, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1938, 593.853088, 80.118598, 382.540985, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1938, 593.853088, 77.080497, 382.540985, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10012, 591.847778, 74.991950, 382.075103, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10092, 591.595703, 82.686859, 381.162963, 0.000000, -90.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10092, 591.595092, 80.415672, 381.162963, 0.000000, -90.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10092, 591.590454, 78.138397, 381.162963, 0.000000, -90.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10092, 591.593933, 77.189781, 381.162963, 0.000000, -90.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18645, 585.918701, 87.143058, 383.139160, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18645, 586.502990, 87.181060, 383.139160, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18645, 587.105895, 87.197647, 383.139160, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(366, 585.727966, 87.238197, 382.471801, 0.000000, -47.000000, -179.339889, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(366, 586.650939, 87.211402, 382.471801, 0.000000, -47.000000, -179.339889, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(366, 587.653747, 87.139686, 382.471801, 0.000000, -47.000000, -179.339889, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(367, 585.882263, 87.007781, 382.139038, 0.000000, 7.000000, -30.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(367, 586.401611, 87.047622, 382.139038, 0.000000, 7.000000, -30.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(367, 586.954345, 86.973503, 382.139038, 0.000000, 7.000000, -30.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1514, 581.288024, 81.218818, 382.773223, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1514, 581.279724, 76.733528, 382.773223, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1514, 581.374328, 73.477653, 382.773193, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(3017, 586.971008, 81.408546, 383.056335, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 585.582336, 81.722923, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 585.864440, 81.673179, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 586.125671, 81.768493, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 586.395874, 81.673767, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 586.676086, 81.773742, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 586.935058, 81.621696, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 587.160095, 81.767768, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1543, 587.454284, 81.696166, 382.546752, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 585.328552, 81.756553, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 585.641357, 81.678390, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.015136, 81.768569, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.441223, 81.659576, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.761596, 81.784027, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 587.071411, 81.622276, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 587.357971, 81.776031, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 585.380981, 81.657981, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 585.766052, 81.709373, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.202209, 81.636611, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.534179, 81.761253, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.845275, 81.623687, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 587.236755, 81.713653, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 587.529785, 76.690902, 382.677612, 0.000000, 0.000000, -47.819999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 587.108459, 76.643730, 382.677612, 0.000000, 0.000000, -47.819999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 586.654724, 76.717292, 382.677612, 0.000000, 0.000000, -47.819999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 586.182006, 76.672378, 382.677612, 0.000000, 0.000000, -94.380012, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 585.735229, 76.663772, 382.677612, 0.000000, 0.000000, -94.380012, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10269, 585.252441, 76.681266, 382.677612, 0.000000, 0.000000, -94.380012, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 585.238159, 81.377090, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 585.447204, 81.257553, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 585.689453, 81.369712, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 585.945800, 81.219253, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 586.144958, 81.342773, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 587.398315, 76.679428, 383.102355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 587.117187, 76.624740, 383.102355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 586.895263, 76.749496, 383.102355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 586.653869, 76.610519, 383.102355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 586.408752, 76.762916, 383.102355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 586.213745, 76.599571, 383.102355, 0.000000, 0.000000, -68.940010, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 585.989135, 76.780166, 383.102355, 0.000000, 0.000000, -68.940010, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 585.760620, 76.585807, 383.102355, 0.000000, 0.000000, -68.940010, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 585.531311, 76.731956, 383.102355, 0.000000, 0.000000, -68.940010, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10015, 585.216857, 76.632476, 383.102355, 0.000000, 0.000000, -68.940010, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18632, 586.853881, 71.918777, 382.553131, 89.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18632, 586.853881, 71.918777, 383.564971, 89.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18632, 586.853881, 71.918777, 383.034973, 89.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.635131, 85.154426, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.833007, 85.595527, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.636413, 85.757377, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.758544, 86.150962, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.597839, 86.356468, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.775390, 86.594657, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.572937, 86.816223, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1668, 591.715148, 87.211746, 382.684539, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.680236, 87.152313, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.752746, 86.779876, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.636962, 86.415756, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.794189, 86.137191, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.634521, 85.932037, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.722595, 85.603050, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.557800, 85.274406, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 591.728027, 85.014892, 383.086486, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18635, 587.450927, 81.430526, 382.519927, 90.000000, -90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18635, 587.433532, 76.432769, 382.519927, 90.000000, -90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18635, 586.651550, 76.413368, 382.519927, 90.000000, -90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18635, 585.810424, 76.413146, 382.519927, 90.000000, -90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18634, 587.136535, 76.281547, 383.049285, 0.000000, 90.000000, 76.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(18634, 585.877075, 76.297233, 383.049285, 0.000000, 90.000000, 76.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10241, 583.172363, 76.644157, 382.868835, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10241, 583.180541, 73.401832, 382.868835, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10241, 583.059265, 81.260673, 382.868835, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(10241, 583.091918, 85.613822, 382.868835, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 580.116882, 72.650558, 382.184570, 0.000000, 0.000000, -94.860008, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 579.208679, 72.446319, 382.184570, 0.000000, 0.000000, -94.860008, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 580.126281, 77.438423, 382.184570, 0.000000, 0.000000, -94.860008, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 586.574768, 80.616706, 382.184570, 0.000000, 0.000000, -2.039999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 589.788452, 86.913787, 382.184570, 0.000000, 0.000000, -2.039999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 590.059265, 72.454277, 382.184570, 0.000000, 0.000000, 167.759963, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.134277, 71.877731, 382.118957, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.382751, 71.774749, 382.118957, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.422607, 72.022148, 382.118957, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.072021, 71.813362, 382.599151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.317199, 71.900070, 382.599151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.521301, 71.802597, 382.599151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.521301, 71.802597, 383.082763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.306091, 71.807853, 383.082763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.194213, 71.936897, 383.082763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.194213, 71.936897, 383.601501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.359741, 71.825111, 383.601501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1666, 587.552551, 71.974990, 383.601501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1738, 591.765991, 73.934097, 382.562408, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1738, 591.695434, 72.566596, 382.562408, 0.000000, 0.000000, -3.059999, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 585.374755, 76.669731, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 585.731323, 76.605247, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.145263, 76.797393, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.556823, 76.573173, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 586.699645, 76.801063, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 587.123657, 76.572448, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1487, 587.390197, 76.776046, 383.726501, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 585.390869, 76.186538, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 585.681457, 76.328292, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.061218, 76.075576, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.433532, 76.401969, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 586.955383, 76.183616, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1520, 587.264282, 76.229827, 382.130218, 0.000000, 0.000000, -85.140007, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.707580, 74.132057, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.612976, 73.870040, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.780578, 73.513389, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.582580, 73.409286, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.650878, 73.010597, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.551391, 72.643272, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.689331, 72.429458, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.769775, 72.043853, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1546, 591.596618, 71.999259, 383.111267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(1349, 581.313110, 84.775253, 382.184570, 0.000000, 0.000000, -182.459976, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(3074, 584.769592, 71.535011, 381.663513, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	newmagaz = CreateDynamicObject(3074, 584.334045, 87.528701, 381.663513, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	//
	CreateDynamicObject(3166, 1366.45, 1680.97, 14.06,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1890.81, 1524.69, 12.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(3166, 1939.69, 1524.62, 12.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(3166, 1842.08, 1527.39, 12.25,   0.00, 0.00, -96.40);
	CreateDynamicObject(5530, 1750.14, 1816.77, 14.38,   0.00, 0.00, 0.00);
	CreateDynamicObject(2249, 1431.41, 1745.33, 11.94,   0.00, 0.00, 270.00);
	CreateDynamicObject(2249, 1394.82, 1709.37, 14.62,   0.00, 0.00, 360.00);
	CreateDynamicObject(2249, 1370.36, 1709.37, 14.62,   0.00, 0.00, 360.00);
	CreateDynamicObject(2249, 1665.46, 1611.25, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1731.60, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1811.86, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1599.40, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1524.41, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1446.17, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1368.31, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1278.23, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(1693, 1888.24, 1713.88, 13.07,   0.60, 0.00, 0.00);
	CreateDynamicObject(1693, 1888.22, 1709.37, 13.06,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.24, 1704.91, 13.06,   0.60, -0.30, 0.00);
	CreateDynamicObject(1693, 1888.22, 1700.47, 13.05,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1695.98, 13.03,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1691.51, 13.03,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1687.03, 13.02,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1682.54, 13.01,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1678.07, 13.01,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1673.58, 12.99,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1669.10, 12.98,   0.60, -0.20, 0.00);
	CreateDynamicObject(19463, 1891.24, 1710.08, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.40, 1701.42, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.57, 1691.84, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.74, 1682.22, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.91, 1672.59, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(985, 1670.02, 1833.36, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1677.84, 1833.74, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1684.90, 1834.03, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(3166, 1366.45, 1680.97, 14.06,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1890.81, 1524.69, 12.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(3166, 1939.69, 1524.62, 12.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(3166, 1842.08, 1527.39, 12.25,   0.00, 0.00, -96.40);
	CreateDynamicObject(5530, 1750.14, 1816.77, 14.38,   0.00, 0.00, 0.00);
	CreateDynamicObject(1566, 1416.07, 1684.41, 15.82,   0.00, 0.00, 90.00);
	CreateDynamicObject(1566, 1416.07, 1687.57, 15.82,   0.00, 0.00, 270.00);
	CreateDynamicObject(2249, 1431.41, 1745.33, 11.94,   0.00, 0.00, 270.00);
	CreateDynamicObject(2249, 1394.82, 1709.37, 14.62,   0.00, 0.00, 360.00);
	CreateDynamicObject(2249, 1370.36, 1709.37, 14.62,   0.00, 0.00, 360.00);
	CreateDynamicObject(2249, 1665.46, 1611.25, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1731.60, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1811.86, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1599.40, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1524.41, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1446.17, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1368.31, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(2249, 1278.23, 1600.24, 11.59,   0.00, 0.00, 450.00);
	CreateDynamicObject(1693, 1888.24, 1713.88, 13.07,   0.60, 0.00, 0.00);
	CreateDynamicObject(1693, 1888.22, 1709.37, 13.06,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.24, 1704.91, 13.06,   0.60, -0.30, 0.00);
	CreateDynamicObject(1693, 1888.22, 1700.47, 13.05,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1695.98, 13.03,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1691.51, 13.03,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1687.03, 13.02,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1682.54, 13.01,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1678.07, 13.01,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1673.58, 12.99,   0.60, -0.20, 0.00);
	CreateDynamicObject(1693, 1888.22, 1669.10, 12.98,   0.60, -0.20, 0.00);
	CreateDynamicObject(19463, 1891.40, 1701.42, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.57, 1691.84, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.74, 1682.22, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(19463, 1891.91, 1672.59, 13.33,   0.00, 180.00, 181.00);
	CreateDynamicObject(985, 1670.00, 1833.37, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1669.91, 1833.45, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1662.17, 1833.01, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1685.26, 1834.01, 14.23,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1677.84, 1833.74, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1669.91, 1833.45, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1662.17, 1833.01, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(19313, 1637.78, 1833.54, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1651.22, 1833.12, 17.78,   0.00, 0.00, 356.81);
	CreateDynamicObject(19313, 1623.85, 1833.49, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1609.83, 1833.52, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1595.80, 1833.55, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1581.70, 1833.54, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1567.73, 1833.55, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1553.76, 1833.59, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1539.75, 1833.63, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1520.85, 1833.67, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1525.74, 1833.63, 17.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(985, 1700.12, 1837.81, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(985, 1692.71, 1835.88, 14.18,   0.00, 0.00, 26.29);
	CreateDynamicObject(985, 1707.18, 1835.63, 14.18,   0.00, 0.00, 323.22);
	CreateDynamicObject(3166, 1366.45, 1680.97, 24.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1366.46, 1729.99, 24.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(4875, 1384.95, 1712.06, 6.82,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1391.28, 1754.54, 23.72,   0.00, 0.00, 270.16);
	CreateDynamicObject(3166, 1440.44, 1753.92, 23.72,   0.00, 0.00, 271.86);
	CreateDynamicObject(3166, 1489.20, 1754.87, 18.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1489.31, 1754.78, 23.72,   0.00, 0.00, 270.16);
	CreateDynamicObject(3166, 1513.68, 1779.14, 23.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1513.66, 1808.97, 23.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(985, 1700.12, 1837.81, 14.21,   0.00, 0.00, 2.45);
	CreateDynamicObject(10000, 1994.82, -86.37, 1516.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1997.41, -118.27, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1997.41, -127.27, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1981.84, -77.71, 1526.28,   0.00, 90.00, 0.00);
	CreateDynamicObject(18770, 1997.41, -108.77, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2014.13, -120.85, 1520.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2006.38, -120.87, 1520.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1987.91, -118.27, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1992.32, -77.70, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1977.82, -77.70, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1981.84, -85.21, 1526.28,   0.00, 90.00, 0.00);
	CreateDynamicObject(18770, 1981.84, -92.71, 1526.28,   0.00, 90.00, 0.00);
	CreateDynamicObject(18770, 1977.82, -85.20, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1977.82, -92.70, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1992.32, -85.20, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1992.32, -92.70, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1898.34, -118.28, 1524.08,   0.00, 90.00, 180.00);
	CreateDynamicObject(18770, 2006.35, -111.48, 1520.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2013.81, -111.48, 1520.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1974.41, -118.27, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2005.12, -70.72, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2005.12, -80.35, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1994.98, -80.35, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 1994.98, -70.72, 1614.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(10000, 2751.39, -2444.05, 2056.84,   0.00, 180.00, 0.00);
	CreateDynamicObject(10000, 2751.39, -2444.05, 2053.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 31.22, 1427.19, -11.00,   0.00, 90.00, 0.00);
	CreateDynamicObject(2376, 1103.50, -1396.58, 13.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19128, -226.94, -1094.74, 16.14,   0.00, 0.00, 0.00);
	CreateDynamicObject(19272, 764.03, -37.68, 988.85,   0.00, 0.00, 0.00);
	CreateDynamicObject(9160, 2248.83, 1368.45, 580.07,   0.00, 0.00, 0.00);
	CreateDynamicObject(10050, 456.51, 637.32, 1002.51,   0.00, 0.00, -90.00);
	CreateDynamicObject(10049, 461.61, -195.40, 1002.74,   0.00, 0.00, 0.00);
	CreateDynamicObject(19071, 2551.86, -1841.82, 999.98,   0.00, 180.00, 0.00);
	CreateDynamicObject(19376, 257.23, 1771.47, 574.27,   0.00, 90.00, 90.00);
	CreateDynamicObject(19446, 2543.23, -2674.63, 455.58,   0.00, 90.00, 0.00);
	CreateDynamicObject(19071, -11.09, 107.65, 978.88,   0.00, 180.00, 0.00);
	CreateDynamicObject(19377, -180.11, 1028.09, 430.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19377, 1835.00, 2235.34, 711.90,   0.00, 90.00, 90.00);
	CreateDynamicObject(19378, 1825.74, 2244.73, 711.93,   0.00, 90.00, 90.00);
	CreateDynamicObject(3508, 267.75, 1799.76, 571.23,   0.00, 0.00, -33.06);
	CreateDynamicObject(19074, 252.21, 1845.50, 553.04,   0.00, 180.00, 0.00);
	CreateDynamicObject(19071, -105.24, 949.28, -0.86,   180.00, 0.00, 0.00);
	CreateDynamicObject(10000, 401.36, -78.72, 1101.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(10000, 1401.40, -78.80, 1251.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19071, 369.65, 1627.78, 1295.09,   0.00, 180.00, 0.00);
	CreateDynamicObject(19071, 708.58, 1997.49, -17.82,   0.00, 180.00, 0.00);
	CreateDynamicObject(1904, 1914.71, -1894.72, 1340.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(19071, 116.29, -176.52, 1000.77,   0.00, 180.00, 0.00);
	CreateDynamicObject(19377, 117.76, -172.74, 1007.51,   0.00, 90.00, 90.00);
	CreateDynamicObject(19377, 117.75, -162.25, 1007.51,   0.00, 90.00, 90.00);
	CreateDynamicObject(19378, 116.67, -142.58, 1012.01,   0.00, 90.00, 90.00);
	CreateDynamicObject(19378, 111.38, -129.46, 1019.65,   0.00, 90.00, 89.58);
	CreateDynamicObject(19378, 111.30, -139.96, 1019.65,   0.00, 90.00, 89.58);
	CreateDynamicObject(19378, 116.55, -140.01, 1029.07,   0.00, 90.00, 89.58);
	CreateDynamicObject(19378, 116.62, -129.51, 1029.07,   0.00, 90.00, 89.58);
	CreateDynamicObject(19378, 116.72, -132.13, 1012.01,   0.00, 90.00, 89.58);
	CreateDynamicObject(19071, 2501.51, 2002.20, 1323.10,   0.00, 180.00, 0.00);
	CreateDynamicObject(19071, -105.24, 949.28, -0.86,   180.00, 0.00, 0.00);
	CreateDynamicObject(10184, -468.26, -29.69, -11.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(5101, 2133.07, -2422.93, 31.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 2155.85, -2361.94, 9.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 2163.66, -2366.81, 9.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(2121, 2477.62, -662.81, -19.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(19458, 396.86, 1930.47, 1000.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19458, 393.36, 1930.44, 1000.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19458, 410.83, 1920.82, 1000.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19458, 407.34, 1920.83, 1000.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19458, 389.86, 1930.43, 1000.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19378, 2385.08, -1962.93, -20.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(19378, 2374.61, -1962.94, -20.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(19378, 2364.14, -1962.95, -20.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(19378, 2374.66, -1943.73, -20.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(19376, 2290.28, -2085.22, 20.96,   0.00, 90.00, 90.00);
	CreateDynamicObject(19378, 2207.61, -522.03, -3.70,   0.00, 90.00, 0.00);
	CreateDynamicObject(3117, 229.67, 1591.42, 10.84,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 403.36, 1537.66, -27.94,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 392.88, 1537.95, -27.94,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, -389.23, 2250.88, -11.17,   0.00, 90.00, 0.00);
	CreateDynamicObject(19378, 270.60, 1588.71, -12.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(19071, -771.50, 1465.82, -21.63,   0.00, 180.00, 0.00);
	CreateDynamicObject(1940, -2272.68, 293.30, 29.80,   0.00, 0.00, -108.54);
	CreateDynamicObject(1941, -2272.68, 293.30, 29.80,   0.00, 0.00, -108.54);
	CreateDynamicObject(1943, -2272.68, 293.30, 29.80,   0.00, 0.00, -108.54);
	CreateDynamicObject(1944, -2272.68, 293.30, 29.80,   0.00, 0.00, -108.54);
	CreateDynamicObject(4593, 771.07, 2327.66, 10.12,   0.00, 0.00, -27.24);
	CreateDynamicObject(2060, -700.78, 2011.32, 2359.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(2060, -698.77, 1881.07, 2359.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(19071, -750.18, 2477.06, 1333.28,   0.00, 180.00, 0.00);
	CreateDynamicObject(19071, -778.02, 2503.10, 1338.88,   0.00, 180.00, 0.00);
	CreateDynamicObject(19071, -2049.58, 2657.69, 3.28,   0.00, 180.00, 0.00);
	CreateDynamicObject(3508, 1939.49, 2173.52, 13.25,   3.50, -5.50, -33.24);
	CreateDynamicObject(3508, 1958.29, 2163.94, 14.91,   0.00, 0.00, 56.34);
	CreateDynamicObject(3508, 1964.43, 2163.81, 14.90,   0.00, 0.00, 56.34);
	CreateDynamicObject(3508, 1938.96, 2155.37, 13.28,   3.50, -5.50, -33.42);
	CreateDynamicObject(970, 1956.33, 2178.50, 15.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 1960.47, 2178.49, 15.47,   0.00, 0.00, -0.36);
	CreateDynamicObject(970, 1964.62, 2178.43, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(970, 1967.38, 2178.36, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(970, 1969.39, 2176.24, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1969.29, 2172.08, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1969.19, 2167.93, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1969.08, 2163.78, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1968.98, 2159.66, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1968.87, 2155.52, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1968.81, 2152.27, 15.47,   0.00, 0.00, -91.32);
	CreateDynamicObject(970, 1966.67, 2150.25, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(970, 1962.55, 2150.34, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(970, 1958.44, 2150.42, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(970, 1956.35, 2150.46, 15.47,   0.00, 0.00, -0.96);
	CreateDynamicObject(19071, -166.47, 462.51, 1311.88,   0.00, 180.00, 0.00);
	CreateDynamicObject(18877, 2216.50, -2366.31, 35.95,   0.00, 108.00, 0.00);
	CreateDynamicObject(18878, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(18879, 2216.50, -2366.31, 35.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1774.40, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(19313, 1754.18, 1752.40, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(626, 1717.45, 1782.99, 14.33,   0.00, 0.00, 27.60);
	CreateDynamicObject(2973, 1732.36, 1672.36, 14.27,   0.00, 0.00, 20.88);
	CreateDynamicObject(19313, 1708.20, 1755.95, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1734.01, 1675.47, 14.27,   0.00, 0.00, -6.54);
	CreateDynamicObject(19313, 1711.82, 1659.20, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(4905, 1709.88, 1588.66, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(4897, 1718.46, 1653.55, 11.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(4906, 1717.79, 1606.50, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(5776, 1767.47, 1769.69, 14.30,   0.00, 0.00, -177.12);
	CreateDynamicObject(8582, 1764.66, 1779.50, 14.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1699.13, 1660.86, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1721.41, 1664.93, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1659.47, 1743.80, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 1680.96, 1666.18, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 1680.97, 1680.34, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1687.63, 1660.92, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1666.79, 1743.22, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1688.37, 1659.21, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1669.88, 1740.57, 14.32,   0.00, 0.00, 32.34);
	CreateDynamicObject(19313, 1702.56, 1659.19, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(4999, 1685.63, 1737.68, 15.39,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1706.62, 1661.60, 14.27,   0.00, 0.00, 55.68);
	CreateDynamicObject(18850, 1698.01, 1684.80, 2.06,   0.00, 0.00, -90.00);
	CreateDynamicObject(2973, 1710.37, 1661.53, 14.27,   0.00, 0.00, 4.14);
	CreateDynamicObject(4900, 1685.62, 1771.76, 11.64,   0.00, 0.00, -181.86);
	CreateDynamicObject(2973, 1721.48, 1672.37, 14.27,   0.00, 0.00, -2.22);
	CreateDynamicObject(2973, 1721.43, 1675.99, 14.27,   0.00, 0.00, 5.04);
	CreateDynamicObject(3166, 1725.22, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(3066, 1721.42, 1690.34, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(1717, 1727.80, 1659.50, 16.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 1707.82, 1746.37, 15.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(2011, 1728.90, 1677.54, 18.82,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 1707.82, 1747.87, 15.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1730.91, 1679.90, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1731.18, 1675.69, 14.27,   0.00, 0.00, 0.90);
	CreateDynamicObject(2973, 1734.78, 1685.64, 14.27,   0.00, 0.00, -6.54);
	CreateDynamicObject(2973, 1735.05, 1688.76, 14.27,   0.00, 0.00, -0.12);
	CreateDynamicObject(3066, 1738.63, 1671.00, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1708.20, 1770.02, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1714.80, 1758.06, 14.31,   0.00, 0.00, -7.62);
	CreateDynamicObject(3066, 1738.86, 1685.60, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(1227, 1712.44, 1768.58, 15.13,   0.00, 0.00, -88.92);
	CreateDynamicObject(2591, 1680.25, 1806.17, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1717.92, 1758.30, 14.31,   0.00, 0.00, 31.38);
	CreateDynamicObject(1227, 1712.42, 1771.21, 15.13,   0.00, 0.00, -90.78);
	CreateDynamicObject(5776, 1709.35, 1780.33, 14.33,   0.00, 0.00, -138.36);
	CreateDynamicObject(2973, 1743.91, 1688.90, 14.27,   0.00, 0.00, 3.72);
	CreateDynamicObject(2973, 1743.96, 1693.67, 14.27,   0.00, 0.00, 26.40);
	CreateDynamicObject(3446, 1725.41, 1759.68, 14.73,   0.00, 0.00, 90.00);
	CreateDynamicObject(1717, 1755.14, 1659.50, 16.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2011, 1755.90, 1677.54, 18.82,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 1695.62, 1806.17, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(2617, 1734.35, 1759.56, 15.31,   0.00, 0.00, 90.00);
	CreateDynamicObject(1717, 1755.14, 1697.49, 16.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2591, 1680.25, 1828.47, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(626, 1800.00, 1746.41, 14.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1725.49, 1782.34, 15.35,   0.00, 0.00, 90.00);
	CreateDynamicObject(2613, 1732.15, 1770.19, 14.30,   0.00, 0.00, 90.00);
	CreateDynamicObject(4897, 1725.44, 1525.95, 10.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(3446, 1738.95, 1759.68, 14.73,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1766.01, 1679.96, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 1711.00, 1806.17, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1746.85, 1758.61, 15.35,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1766.06, 1690.94, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 1695.62, 1828.47, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1736.59, 1782.34, 15.35,   0.00, 0.00, 90.00);
	CreateDynamicObject(3647, 1771.03, 1664.12, 14.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1771.43, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(4904, 1825.38, 1797.11, 11.98,   0.00, 0.00, 23.52);
	CreateDynamicObject(4904, 1727.49, 1800.71, 11.13,   0.00, 0.00, 23.52);
	CreateDynamicObject(4087, 1758.26, 1750.33, 16.41,   0.00, 0.00, 180.00);
	CreateDynamicObject(4905, 1766.17, 1587.93, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(19313, 1754.18, 1766.44, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 1762.50, 1752.49, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(8582, 1758.77, 1762.08, 14.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(2932, 1782.44, 1663.37, 15.71,   0.00, 0.00, 0.00);
	CreateDynamicObject(626, 1747.90, 1784.35, 14.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(4906, 1776.40, 1606.26, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(2934, 1785.18, 1664.39, 18.62,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1752.99, 1777.67, 14.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, 1711.00, 1828.47, 3.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(4100, 1845.92, 1745.82, 19.35,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1752.50, 1781.61, 14.31,   0.00, 0.00, 31.38);
	CreateDynamicObject(2960, 1816.65, 1769.19, 14.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 1785.11, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 1786.12, 1663.40, 15.71,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1762.50, 1766.59, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2591, 1735.07, 1806.18, 3.07,   0.00, 0.00, 90.00);
	CreateDynamicObject(2935, 1789.62, 1663.40, 15.71,   0.00, 0.00, 0.00);
	CreateDynamicObject(18850, 1784.51, 1684.80, 2.06,   0.00, 0.00, -90.00);
	CreateDynamicObject(19313, 1769.67, 1773.61, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, 1772.72, 1770.48, 14.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1799.25, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(3446, 1785.62, 1748.01, 14.71,   0.00, 0.00, 90.00);
	CreateDynamicObject(5776, 1777.56, 1769.73, 14.30,   0.00, 0.00, -199.68);
	CreateDynamicObject(2973, 1803.07, 1663.18, 14.27,   0.00, 0.00, 65.22);
	CreateDynamicObject(4897, 1802.11, 1654.28, 11.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(2591, 1750.45, 1806.17, 3.07,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1803.34, 1667.03, 14.27,   0.00, 0.00, 87.06);
	CreateDynamicObject(2984, 1790.75, 1747.14, 15.67,   0.00, 0.00, 83.88);
	CreateDynamicObject(2973, 1806.97, 1664.01, 14.27,   0.00, 0.00, 137.40);
	CreateDynamicObject(2984, 1792.80, 1746.36, 15.67,   0.00, 0.00, 50.40);
	CreateDynamicObject(2973, 1785.37, 1765.61, 14.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(630, 1784.67, 1769.80, 14.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1783.82, 1773.61, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1789.14, 1765.61, 14.31,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1813.34, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(4341, 1797.00, 1764.12, 17.63,   0.00, 0.00, 180.00);
	CreateDynamicObject(4904, 1779.29, 1799.67, 11.13,   0.00, 0.00, 23.52);
	CreateDynamicObject(626, 1808.16, 1746.46, 14.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 1811.71, 1747.05, 15.35,   0.00, 0.00, 90.00);
	CreateDynamicObject(3166, 1823.54, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(5776, 1809.43, 1767.16, 14.30,   0.00, 0.00, -80.16);
	CreateDynamicObject(2960, 1816.65, 1750.72, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(615, 1808.55, 1773.24, 13.14,   0.00, 0.00, 0.00);
	CreateDynamicObject(3582, 1827.52, 1661.98, 15.99,   0.00, 0.00, -90.00);
	CreateDynamicObject(19313, 1827.44, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1816.65, 1755.34, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1819.13, 1748.39, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(5776, 1809.34, 1779.39, 14.30,   0.00, 0.00, -132.42);
	CreateDynamicObject(2960, 1816.65, 1759.95, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1816.65, 1764.57, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1823.75, 1748.39, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 1814.12, 1780.87, 15.00,   0.00, 0.00, 29.10);
	CreateDynamicObject(2960, 1816.65, 1773.81, 14.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(18850, 1826.51, 1684.80, 2.06,   0.00, 0.00, -90.00);
	CreateDynamicObject(2960, 1819.13, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1868.65, 1744.02, 15.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1828.37, 1748.39, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 1828.82, 1751.93, 14.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 1830.37, 1751.93, 14.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1823.75, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 1831.93, 1751.93, 14.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1832.99, 1748.39, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(4906, 1829.58, 1614.98, 10.62,   0.00, 0.00, 456.00);
	CreateDynamicObject(4905, 1822.14, 1590.41, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(19313, 1841.55, 1659.17, 14.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(2188, 1830.38, 1749.61, 3.86,   0.00, 0.00, 0.00);
	CreateDynamicObject(2188, 1830.38, 1751.60, 4.14,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1828.37, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1837.61, 1748.39, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(3582, 1829.15, 1781.53, 16.05,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1846.76, 1687.90, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1846.62, 1675.85, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1846.61, 1664.27, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1832.99, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1848.51, 1680.37, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1841.71, 1748.39, 14.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 1848.51, 1666.25, 14.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1837.61, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1843.85, 1750.72, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1843.85, 1755.34, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1843.85, 1759.95, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1843.85, 1764.57, 14.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(2960, 1841.71, 1775.93, 14.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2960, 1843.85, 1769.19, 14.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(4906, 1377.71, 1604.24, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(2960, 1843.85, 1773.81, 14.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(4100, 1845.92, 1783.34, 19.35,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1856.96, 1744.08, 15.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(4904, 1860.43, 1763.80, 11.98,   0.00, 0.00, 23.52);
	CreateDynamicObject(3446, 1878.29, 1745.28, 14.69,   0.00, 0.00, 90.00);
	CreateDynamicObject(4904, 1869.16, 1799.21, 11.56,   0.00, 0.00, 187.38);
	CreateDynamicObject(3066, 1357.37, 1692.32, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1356.78, 1691.51, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(18865, 1885.28, 1729.33, 15.48,   0.00, 0.00, -14.76);
	CreateDynamicObject(4897, 1376.17, 1702.53, 12.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1357.79, 1739.69, 2.55,   0.00, 0.00, -29.94);
	CreateDynamicObject(1518, 1885.84, 1729.73, 15.72,   0.00, 0.00, 1.56);
	CreateDynamicObject(1671, 1886.25, 1728.76, 14.96,   0.00, 0.00, 180.00);
	CreateDynamicObject(3172, 1886.25, 1729.71, 14.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(1518, 1886.66, 1729.62, 15.72,   0.00, 0.00, -23.34);
	CreateDynamicObject(3066, 1357.37, 1680.61, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2013, 1886.88, 1731.19, 15.29,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 1886.42, 1685.61, 14.32,   0.00, 0.00, 95.88);
	CreateDynamicObject(3446, 1887.74, 1745.28, 14.69,   0.00, 0.00, 90.00);
	CreateDynamicObject(3647, 1889.35, 1712.74, 14.07,   0.00, 0.00, -90.00);
	CreateDynamicObject(3066, 1889.67, 1700.44, 15.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1377.77, 1744.84, 3.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2915, 1378.46, 1755.17, 2.76,   0.00, 0.00, 0.00);
	CreateDynamicObject(4900, 1828.17, 1888.79, 9.23,   0.00, 0.00, 70.86);
	CreateDynamicObject(2973, 1357.87, 1742.98, 2.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1889.69, 1689.14, 15.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(5554, 1357.78, 1745.14, 2.61,   0.00, 0.00, 31.08);
	CreateDynamicObject(3066, 1357.91, 1749.24, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1888.56, 1681.39, 14.32,   0.00, 0.00, 67.38);
	CreateDynamicObject(3066, 1655.25, 1734.33, 15.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(1278, 1891.72, 1715.76, 14.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(10019, 1378.23, 1754.80, 2.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(2932, 1373.86, 1696.76, 4.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(1278, 1891.67, 1728.03, 14.62,   0.00, 0.00, 0.00);
	CreateDynamicObject(4906, 1864.59, 1598.19, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(4905, 1426.81, 1585.09, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(10019, 1374.05, 1754.80, 2.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(4897, 1462.34, 1525.88, 10.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1675.03, 1660.73, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(10017, 1374.06, 1754.89, 2.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(4900, 1640.19, 1756.32, 11.64,   0.00, 0.00, -34.32);
	CreateDynamicObject(3446, 1379.68, 1741.41, 3.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(4897, 1812.80, 1523.68, 9.79,   0.00, 0.00, 86.22);
	CreateDynamicObject(3166, 1676.08, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(3066, 1378.08, 1710.03, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1356.72, 1680.37, 3.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1662.84, 1660.73, 15.27,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1377.77, 1716.19, 3.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, 1652.18, 1677.42, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(3446, 1378.94, 1690.47, 3.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(3647, 1649.77, 1668.78, 14.36,   0.00, 0.00, -90.00);
	CreateDynamicObject(2991, 1373.07, 1755.69, 3.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 1368.60, 1698.46, 4.01,   0.00, 0.00, 90.00);
	CreateDynamicObject(2935, 1368.59, 1695.20, 4.01,   0.00, 0.00, 90.00);
	CreateDynamicObject(10016, 1370.22, 1754.72, 2.61,   0.00, 0.00, 180.00);
	CreateDynamicObject(19302, 1416.05, 1685.99, 15.63,   0.00, 0.00, 90.00);
	CreateDynamicObject(19304, 1416.05, 1685.48, 17.50,   0.00, 0.00, 90.00);
	CreateDynamicObject(19303, 1416.05, 1684.24, 15.63,   0.00, 0.00, 90.00);
	CreateDynamicObject(615, 1639.63, 1670.63, 12.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(4895, 1644.76, 1655.55, 10.71,   0.00, 0.00, 178.92);
	CreateDynamicObject(4904, 1908.10, 1692.76, 11.70,   0.00, 0.00, 24.54);
	CreateDynamicObject(3166, 1628.29, 1690.19, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(4906, 1437.71, 1604.45, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(4899, 1619.46, 1706.83, 12.43,   0.00, 0.00, 94.44);
	CreateDynamicObject(4899, 1401.48, 1691.41, 12.23,   0.00, 0.00, 179.10);
	CreateDynamicObject(4372, 1427.11, 1672.04, 16.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(10019, 1370.20, 1754.80, 2.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(2991, 1368.73, 1755.69, 3.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(2935, 1366.53, 1676.90, 4.01,   0.00, 0.00, 90.00);
	CreateDynamicObject(10018, 1365.74, 1754.74, 2.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(10019, 1365.71, 1754.80, 2.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(3166, 1430.39, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(2932, 1363.24, 1700.52, 4.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(4906, 1661.70, 1608.20, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(3066, 1417.87, 1711.35, 15.38,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 1417.85, 1699.30, 15.38,   0.00, 0.00, 0.00);
	CreateDynamicObject(3647, 1364.84, 1653.16, 14.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(4900, 1602.97, 1792.90, 11.90,   0.00, 0.00, -47.94);
	CreateDynamicObject(3166, 1626.95, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(4100, 1612.20, 1677.28, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(4905, 1484.41, 1583.46, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(3066, 1452.66, 1673.61, 15.38,   0.00, 0.00, 90.00);
	CreateDynamicObject(4899, 1447.61, 1740.10, 11.94,   0.00, 0.00, 94.44);
	CreateDynamicObject(4372, 1442.17, 1672.06, 16.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(4895, 1588.48, 1738.28, 12.49,   0.00, 0.00, 152.52);
	CreateDynamicObject(4905, 1651.98, 1589.51, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(2956, 1475.86, 1695.63, 14.27,   0.00, 0.00, -237.48);
	CreateDynamicObject(2956, 1472.65, 1715.97, 14.27,   0.00, 0.00, -112.98);
	CreateDynamicObject(616, 1582.35, 1823.72, 15.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(1437, 1475.67, 1672.12, 15.13,   10.00, 0.00, 180.00);
	CreateDynamicObject(616, 1578.20, 1810.45, 13.86,   0.00, 0.00, 0.00);
	CreateDynamicObject(3166, 1579.14, 1690.19, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(3166, 1479.50, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(4897, 1549.68, 1525.85, 10.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(4899, 1585.70, 1662.71, 10.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(1535, 1472.64, 1672.07, 14.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(4906, 1493.81, 1606.05, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(3066, 1464.73, 1673.51, 15.38,   0.00, 0.00, 90.00);
	CreateDynamicObject(4100, 1576.70, 1677.18, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(4988, 1457.91, 1718.63, 16.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, 1480.57, 1676.61, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(4906, 1603.01, 1606.22, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(3166, 1577.85, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(4900, 1545.97, 1767.79, 11.59,   0.00, 0.00, 182.58);
	CreateDynamicObject(4899, 1549.90, 1707.79, 12.08,   0.00, 0.00, 94.44);
	CreateDynamicObject(4897, 1555.24, 1838.00, 12.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(9211, 1560.26, 1853.89, 11.12,   0.00, 0.00, 93.00);
	CreateDynamicObject(4905, 1597.37, 1587.36, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(4906, 1550.69, 1606.43, 11.50,   0.00, 0.00, 259.02);
	CreateDynamicObject(3166, 1528.68, 1647.52, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(3066, 1541.27, 1796.81, 15.17,   0.00, 0.00, 90.00);
	CreateDynamicObject(3647, 1520.70, 1829.85, 14.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, 1512.89, 1676.83, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(4899, 1516.26, 1662.24, 10.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(4100, 1544.64, 1676.94, 19.46,   0.00, 0.00, -90.00);
	CreateDynamicObject(4897, 1506.47, 1807.56, 12.79,   0.00, 0.00, 0.00);
	CreateDynamicObject(4905, 1540.67, 1587.05, 11.04,   0.00, 0.00, 163.98);
	CreateDynamicObject(3066, 1533.64, 1800.89, 15.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(4904, 1496.43, 1708.12, 12.18,   0.00, 0.00, 172.86);
	CreateDynamicObject(9211, 1547.38, 1855.14, 11.12,   0.00, 0.00, 93.00);
	CreateDynamicObject(4897, 1635.88, 1526.58, 10.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(3166, 1529.92, 1690.19, 17.26,   0.00, 0.00, -90.00);
	CreateDynamicObject(634, 1524.25, 1803.50, 14.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(16076, 1657.13, 1701.24, 15.81,   0.00, 0.00, -180.18);
	CreateDynamicObject(1566, 1379.79, 1685.19, 4.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(1566, 1380.00, 1693.22, 4.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 1570.71, 1823.90, 15.25,   0.00, 0.00, 180.00);
	CreateDynamicObject(2991, 1561.13, 1829.98, 15.24,   0.00, 0.00, 360.00);
	CreateDynamicObject(2991, 1561.13, 1829.98, 16.42,   0.00, 0.00, 360.00);
	CreateDynamicObject(2991, 1552.30, 1829.98, 15.23,   0.00, 0.00, 360.00);
	CreateDynamicObject(2009, 1558.50, 1821.37, 15.83,   0.00, 0.00, 90.00);
	CreateDynamicObject(2591, 1612.13, 1861.22, 3.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2991, 1561.90, 1820.55, 15.21,   0.00, 0.00, 90.00);
	CreateDynamicObject(2991, 1559.91, 1820.55, 15.21,   0.00, 0.00, 90.00);
	CreateDynamicObject(2991, 1557.92, 1820.55, 15.21,   0.00, 0.00, 90.00);
	CreateDynamicObject(2991, 1555.94, 1820.55, 15.21,   0.00, 0.00, 90.00);
	CreateDynamicObject(2991, 1556.95, 1823.54, 15.22,   0.00, 0.00, 180.00);
	CreateDynamicObject(2991, 1560.91, 1823.54, 15.21,   0.00, 0.00, 180.00);
	CreateDynamicObject(2991, 1559.83, 1820.56, 16.39,   0.00, 0.00, 270.00);
	CreateDynamicObject(2991, 1557.83, 1821.54, 16.39,   0.00, 0.00, 270.00);
	CreateDynamicObject(1717, 1543.58, 1826.91, 17.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(2991, 1540.30, 1829.91, 14.88,   0.00, 0.00, 360.60);
	CreateDynamicObject(2991, 1540.97, 1826.61, 14.88,   0.00, 0.00, 451.86);
	CreateDynamicObject(16097, 1676.04, 1733.48, 15.63,   0.00, 0.00, 0.00);
	//дм зона
	CreateObject(2934, 381.15, 1653.04, 604.90, 0.00, 0.00, -91.32);
	CreateObject(2932, 411.98, 1662.16, 604.90, 0.00, 0.00, 38.70);
	CreateObject(2932, 335.30, 1661.84, 604.90, 0.00, 0.00, -38.22);
	CreateObject(19074, 334.39, 1612.86, 610.00, 0.00, 90.00, -90.00);
	CreateObject(19074, 354.25, 1612.84, 610.00, 0.00, 90.00, -90.00);
	CreateObject(19074, 373.78, 1612.84, 610.00, 0.00, 90.00, -90.00);
	CreateObject(19074, 393.47, 1612.84, 610.00, 0.00, 90.00, -90.00);
	CreateObject(19074, 413.16, 1612.84, 610.00, 0.00, 90.00, -90.00);
	CreateObject(19074, 425.19, 1625.32, 610.00, 0.00, 90.00, 0.00);
	CreateObject(19074, 425.20, 1645.09, 610.00, 0.00, 90.00, 0.00);
	CreateObject(19074, 425.20, 1664.85, 610.00, 0.00, 90.00, 0.00);
	CreateObject(19074, 413.17, 1673.16, 610.00, 0.00, 90.00, 90.00);
	CreateObject(19074, 393.71, 1673.18, 610.00, 0.00, 90.00, 90.00);
	CreateObject(19074, 374.25, 1673.18, 610.00, 0.00, 90.00, 90.00);
	CreateObject(19074, 354.30, 1673.18, 610.00, 0.00, 90.00, 90.00);
	CreateObject(19074, 335.02, 1673.18, 610.00, 0.00, 90.00, 90.00);
	CreateObject(19074, 323.12, 1664.82, 610.00, 0.00, 90.00, 180.00);
	CreateObject(19074, 323.12, 1645.20, 610.00, 0.00, 90.00, 180.00);
	CreateObject(19074, 323.05, 1625.33, 610.00, 0.00, 90.00, 180.00);
	CreateObject(2935, 374.58, 1644.99, 604.90, 0.00, 0.00, -2.08);
	CreateObject(2935, 409.57, 1623.74, 604.90, 0.00, 0.00, 154.24);
	CreateObject(2934, 345.60, 1643.48, 604.90, 0.00, 0.00, 183.59);
	CreateObject(2934, 341.95, 1641.67, 604.90, 0.00, 0.00, 183.59);
	CreateObject(2934, 343.36, 1640.71, 607.62, 0.00, 0.00, 106.45);
	CreateObject(2934, 381.73, 1637.06, 604.90, 0.00, 0.00, 87.54);
	CreateObject(8229, 272.64, 1639.42, 603.72, 0.00, 0.00, 0.00);
	CreateObject(2934, 389.21, 1644.56, 604.90, 0.00, 0.00, -2.04);
	CreateObject(2934, 336.63, 1623.98, 604.90, 0.00, 0.00, 37.32);
	/////деревня Лытка
	CreateDynamicObject(9139, -2232.90, -1148.80, 47.70,   0.00, 0.00, 71.99);
	CreateDynamicObject(4931, -2246.90, -1109.90, 47.00,   0.00, 0.00, 159.99);
	CreateDynamicObject(4934, -2231.20, -1113.90, 47.00,   0.00, 0.00, 69.99);
	CreateDynamicObject(1791, -2138.50, -1148.70, 51.90,   0.00, 0.00, 346.00);
	CreateDynamicObject(4931, -2200.40, -1160.00, 47.00,   0.00, 0.00, 249.99);
	CreateDynamicObject(4935, -2219.20, -1114.60, 47.00,   0.00, 0.00, 250.00);
	CreateDynamicObject(4338, -2206.00, -1118.60, 49.90,   0.00, 0.00, 341.00);
	CreateDynamicObject(4932, -2254.30, -1135.30, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(4935, -2234.10, -1098.80, 47.00,   0.00, 0.00, 245.99);
	CreateDynamicObject(4933, -2161.10, -1135.80, 47.00,   0.00, 0.00, 68.49);
	CreateDynamicObject(4934, -2146.80, -1137.60, 47.00,   0.00, 0.00, 69.99);
	CreateDynamicObject(9147, -2220.30, -1168.70, 47.00,   0.00, 0.00, 250.00);
	CreateDynamicObject(3516, -2229.20, -1171.00, 48.20,   0.00, 0.00, 69.75);
	CreateDynamicObject(3514, -2215.10, -1122.90, 48.40,   0.00, 0.00, 271.49);
	CreateDynamicObject(616, -2200.90, -1193.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2219.20, -1186.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2211.20, -1192.30, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2216.70, -1182.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2172.70, -1195.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2251.00, -1169.80, 49.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2236.40, -1185.90, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2185.70, -1195.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2225.50, -1192.60, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2235.00, -1177.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2255.70, -1163.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2280.50, -1162.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2192.90, -1190.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2178.30, -1206.40, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2219.90, -1198.80, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2229.50, -1184.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2245.70, -1185.50, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2243.00, -1171.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2273.10, -1171.80, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2252.80, -1178.80, 47.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2180.70, -1198.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2216.30, -1193.60, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2242.30, -1180.10, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2262.10, -1173.30, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(660, -2268.40, -1163.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2290.20, -1158.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2304.20, -1145.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2282.10, -1144.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2289.50, -1169.80, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2292.90, -1146.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2313.80, -1157.20, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2325.50, -1134.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2314.10, -1135.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2344.80, -1148.20, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2345.50, -1124.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2325.60, -1156.50, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2338.30, -1152.40, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2319.90, -1150.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2335.60, -1132.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(616, -2357.40, -1146.10, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2346.80, -1138.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2322.90, -1142.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(634, -2356.90, -1118.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2358.50, -1134.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2345.90, -1132.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2371.20, -1138.60, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(641, -2304.20, -1162.60, 47.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2204.70, -1153.00, 47.50,   0.00, 0.00, 350.00);
	CreateDynamicObject(970, -2207.90, -1164.50, 47.60,   0.00, 0.00, 48.00);
	CreateDynamicObject(818, -2149.70, -1130.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2150.00, -1131.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2150.20, -1132.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2151.00, -1135.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2152.40, -1140.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2152.60, -1139.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2151.20, -1141.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2148.70, -1142.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2145.50, -1143.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2152.20, -1142.00, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2153.50, -1143.90, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2152.80, -1146.20, 47.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2148.10, -1143.20, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2147.10, -1145.10, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.60, -1144.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2141.40, -1148.60, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2140.80, -1146.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2139.90, -1144.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2139.20, -1142.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2139.10, -1139.90, 47.00,   0.00, 0.00, 8.00);
	CreateDynamicObject(874, -2140.00, -1137.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2145.40, -1146.10, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2146.00, -1148.40, 46.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2153.50, -1141.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2154.90, -1145.40, 46.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2140.10, -1135.30, 47.00,   0.00, 0.00, 247.99);
	CreateDynamicObject(635, -2148.90, -1130.10, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(3514, -2150.30, -1145.00, 48.30,   0.00, 0.00, 12.00);
	CreateDynamicObject(635, -2154.50, -1141.70, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(1245, -2144.50, -1146.50, 46.80,   0.00, 327.60, 74.00);
	CreateDynamicObject(635, -2141.70, -1149.10, 46.90,   0.00, 0.00, 248.00);
	CreateDynamicObject(635, -2139.20, -1143.80, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(5826, -2142.90, -1141.60, 47.30,   0.00, 0.00, 340.00);
	CreateDynamicObject(635, -2144.70, -1166.20, 46.90,   0.00, 0.00, 248.00);
	CreateDynamicObject(635, -2145.90, -1175.30, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(635, -2150.70, -1183.60, 47.00,   0.00, 0.00, 247.99);
	CreateDynamicObject(635, -2159.70, -1192.50, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(818, -2145.10, -1166.70, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2145.50, -1169.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2146.10, -1172.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2145.60, -1176.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2146.60, -1179.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2148.20, -1181.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2152.20, -1184.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2154.20, -1187.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2157.10, -1190.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2152.68, -1173.17, 45.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.40, -1166.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.60, -1169.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2146.00, -1171.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.70, -1175.10, 47.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.70, -1173.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2145.90, -1177.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2146.30, -1179.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2147.90, -1181.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2148.90, -1183.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2151.40, -1185.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2153.20, -1186.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2155.40, -1188.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2157.00, -1191.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2159.40, -1193.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2147.20, -1167.70, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2150.10, -1167.40, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2148.10, -1169.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2150.60, -1169.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2148.40, -1171.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2150.90, -1171.90, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2148.00, -1173.90, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2150.80, -1174.30, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2147.70, -1176.10, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2151.00, -1176.30, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2148.50, -1178.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2151.70, -1178.30, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2150.40, -1180.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2153.00, -1180.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2152.50, -1182.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2155.20, -1182.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2154.70, -1185.10, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.40, -1184.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.80, -1188.10, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2159.90, -1186.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2159.50, -1190.00, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2162.00, -1188.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2146.40, -1166.00, 47.50,   0.00, 0.00, 346.00);
	CreateDynamicObject(970, -2150.50, -1165.00, 47.50,   0.00, 0.00, 346.00);
	CreateDynamicObject(970, -2154.60, -1164.40, 47.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2157.80, -1166.00, 47.50,   0.00, 0.00, 53.25);
	CreateDynamicObject(4100, -2141.10, -1164.10, 52.00,   0.00, 0.00, 308.00);
	CreateDynamicObject(4100, -2156.60, -1147.30, 51.90,   0.00, 0.00, 38.00);
	CreateDynamicObject(4100, -2176.30, -1153.50, 52.10,   0.00, 0.00, 298.00);
	CreateDynamicObject(818, -2164.60, -1194.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2167.90, -1194.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2162.30, -1193.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2166.60, -1195.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2163.10, -1194.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2162.10, -1191.90, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2164.10, -1191.20, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2167.12, -1193.39, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2164.37, -1190.96, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2163.30, -1188.19, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2162.80, -1185.20, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2161.40, -1180.80, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2161.68, -1184.19, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2159.12, -1177.99, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.78, -1175.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.68, -1172.96, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.45, -1169.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2161.90, -1193.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2164.50, -1194.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2167.10, -1195.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2170.00, -1136.80, 47.60,   0.00, 0.00, 64.00);
	CreateDynamicObject(970, -2167.40, -1133.80, 47.60,   0.00, 0.00, 34.00);
	CreateDynamicObject(970, -2163.70, -1132.70, 47.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2165.50, -1138.80, 47.50,   0.00, 0.00, 68.00);
	CreateDynamicObject(970, -2164.30, -1141.40, 47.50,   0.00, 0.00, 338.00);
	CreateDynamicObject(970, -2159.40, -1141.00, 47.50,   0.00, 0.00, 69.00);
	CreateDynamicObject(970, -2162.10, -1142.20, 47.40,   0.00, 0.00, 338.00);
	CreateDynamicObject(635, -2164.30, -1139.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2161.90, -1140.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2161.50, -1140.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2163.10, -1139.30, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2145.00, -1168.50, 47.50,   0.00, 0.00, 74.00);
	CreateDynamicObject(970, -2145.50, -1172.30, 47.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, -2145.60, -1175.20, 47.60,   0.00, 0.00, 84.00);
	CreateDynamicObject(970, -2146.60, -1179.30, 47.60,   0.00, 0.00, 70.00);
	CreateDynamicObject(970, -2148.90, -1182.50, 47.60,   0.00, 0.00, 40.00);
	CreateDynamicObject(970, -2151.80, -1185.40, 47.60,   0.00, 0.00, 46.00);
	CreateDynamicObject(970, -2154.70, -1188.40, 47.60,   0.00, 0.00, 44.00);
	CreateDynamicObject(970, -2157.50, -1191.30, 47.60,   0.00, 0.00, 48.00);
	CreateDynamicObject(970, -2160.60, -1193.70, 47.60,   0.00, 0.00, 32.00);
	CreateDynamicObject(970, -2163.30, -1195.00, 47.60,   0.00, 0.00, 20.00);
	CreateDynamicObject(970, -2166.80, -1196.20, 47.60,   0.00, 0.00, 18.00);
	CreateDynamicObject(635, -2166.14, -1197.91, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2159.20, -1182.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.70, -1180.10, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2155.20, -1179.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2157.20, -1177.30, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2154.50, -1176.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2156.90, -1174.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2153.80, -1174.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2156.90, -1172.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2154.00, -1172.20, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2155.60, -1170.10, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2153.00, -1169.20, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2155.20, -1166.90, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2170.60, -1141.00, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2155.40, -1143.50, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2156.00, -1145.30, 46.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2156.80, -1141.60, 47.30,   0.00, 0.00, 68.00);
	CreateDynamicObject(970, -2151.50, -1133.50, 47.60,   0.00, 0.00, 340.25);
	CreateDynamicObject(818, -2164.20, -1131.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2165.80, -1132.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2167.80, -1133.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2169.60, -1134.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(818, -2170.50, -1136.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1245, -2169.30, -1139.60, 46.90,   0.00, 328.00, 90.00);
	CreateDynamicObject(2934, -2185.10, -1186.70, 48.50,   0.00, 0.00, 72.00);
	CreateDynamicObject(2934, -2186.10, -1189.50, 48.50,   0.00, 0.00, 72.00);
	CreateDynamicObject(2934, -2185.80, -1188.10, 51.40,   0.00, 0.00, 72.00);
	CreateDynamicObject(970, -2170.70, -1196.10, 47.60,   0.00, 0.00, 348.00);
	CreateDynamicObject(970, -2174.80, -1196.60, 47.60,   0.00, 0.00, 22.00);
	CreateDynamicObject(970, -2178.80, -1198.00, 47.60,   0.00, 0.00, 10.00);
	CreateDynamicObject(970, -2181.90, -1196.90, 47.60,   0.00, 0.00, 304.00);
	CreateDynamicObject(970, -2183.30, -1193.20, 47.60,   0.00, 0.00, 280.00);
	CreateDynamicObject(4342, -2183.10, -1125.30, 54.20,   0.00, 0.00, 159.00);
	CreateDynamicObject(635, -2179.90, -1137.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2184.50, -1135.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2191.60, -1132.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2198.40, -1129.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2175.30, -1138.50, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2183.30, -1135.20, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2180.70, -1136.20, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2174.60, -1138.40, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2181.80, -1136.10, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2188.80, -1133.60, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2191.90, -1133.30, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2192.43, -1131.97, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2198.60, -1129.90, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2183.80, -1135.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2180.20, -1136.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2175.20, -1138.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2189.00, -1133.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2193.20, -1131.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2198.03, -1129.67, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, -2194.51, -1132.08, 47.70,   0.00, 0.00, -4.56);
	CreateDynamicObject(1256, -2185.40, -1135.30, 47.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2194.60, -1153.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2196.60, -1152.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(4100, -2175.30, -1140.50, 52.00,   0.00, 0.00, 34.00);
	CreateDynamicObject(4100, -2184.60, -1137.20, 52.10,   0.00, 0.00, 26.00);
	CreateDynamicObject(869, -2194.70, -1153.40, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2197.20, -1152.70, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2196.20, -1151.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2198.00, -1116.40, 47.60,   0.00, 0.00, 340.00);
	CreateDynamicObject(970, -2195.00, -1117.40, 47.60,   0.00, 0.00, 340.00);
	CreateDynamicObject(635, -2194.70, -1115.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2197.00, -1114.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2194.90, -1115.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2197.20, -1114.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2206.90, -1126.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2209.00, -1125.70, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2210.30, -1125.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2204.80, -1127.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2238.40, -1103.20, 47.60,   0.00, 0.00, 262.00);
	CreateDynamicObject(970, -2237.70, -1107.10, 47.60,   0.00, 0.00, 298.00);
	CreateDynamicObject(970, -2234.60, -1108.90, 47.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(1432, -2235.90, -1105.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2237.90, -1102.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2226.30, -1097.70, 47.60,   0.00, 0.00, 334.00);
	CreateDynamicObject(970, -2222.80, -1099.10, 47.60,   0.00, 0.00, 340.00);
	CreateDynamicObject(970, -2220.80, -1101.80, 47.60,   0.00, 0.00, 275.25);
	CreateDynamicObject(3095, -2227.00, -1101.70, 46.50,   0.00, 0.00, 336.00);
	CreateDynamicObject(3095, -2228.30, -1105.30, 46.50,   0.00, 0.00, 336.00);
	CreateDynamicObject(3095, -2225.10, -1104.40, 46.50,   0.00, 0.00, 3.00);
	CreateDynamicObject(970, -2220.60, -1105.80, 47.60,   0.00, 0.00, 91.00);
	CreateDynamicObject(970, -2220.60, -1109.90, 47.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(3095, -2225.20, -1111.60, 46.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2194.30, -1155.60, 47.60,   0.00, 0.00, 338.00);
	CreateDynamicObject(970, -2191.70, -1154.40, 47.50,   0.00, 0.00, 70.00);
	CreateDynamicObject(1256, -2227.00, -1118.10, 47.70,   0.00, 0.00, 158.00);
	CreateDynamicObject(1256, -2241.40, -1114.40, 47.60,   0.00, 0.00, 158.00);
	CreateDynamicObject(1256, -2248.40, -1133.20, 47.70,   0.00, 0.00, 198.00);
	CreateDynamicObject(970, -2212.40, -1112.00, 47.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2246.00, -1151.90, 47.60,   0.00, 0.00, 318.00);
	CreateDynamicObject(970, -2249.00, -1149.20, 47.60,   0.00, 0.00, 320.00);
	CreateDynamicObject(970, -2251.10, -1145.80, 47.60,   0.00, 0.00, 280.00);
	CreateDynamicObject(970, -2252.30, -1142.20, 47.60,   0.00, 0.00, 296.00);
	CreateDynamicObject(4100, -2191.30, -1151.90, 52.10,   0.00, 0.00, 296.00);
	CreateDynamicObject(4100, -2212.60, -1127.60, 52.20,   0.00, 0.00, 18.00);
	CreateDynamicObject(4100, -2200.50, -1131.40, 52.20,   0.00, 0.00, 24.00);
	CreateDynamicObject(4100, -2217.60, -1142.90, 52.10,   0.00, 0.00, 322.00);
	CreateDynamicObject(4100, -2258.10, -1127.80, 52.10,   0.00, 0.00, 289.50);
	CreateDynamicObject(4100, -2237.10, -1135.90, 52.10,   0.00, 0.00, 288.00);
	CreateDynamicObject(4100, -2242.80, -1117.90, 52.10,   0.00, 0.00, 66.00);
	CreateDynamicObject(869, -2220.00, -1150.50, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2215.30, -1153.60, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2209.40, -1154.40, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2246.50, -1152.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2250.90, -1148.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2252.70, -1142.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2248.80, -1151.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2253.20, -1142.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2252.30, -1144.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2251.60, -1146.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2250.20, -1148.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2249.00, -1150.30, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2247.10, -1151.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2245.50, -1153.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2239.10, -1105.20, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2240.30, -1105.20, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2240.20, -1103.00, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(636, -2236.70, -1139.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(636, -2234.30, -1152.80, 47.00,   0.00, 0.00, 226.00);
	CreateDynamicObject(635, -2220.00, -1107.10, 47.00,   0.00, 0.00, 248.00);
	CreateDynamicObject(8623, -2198.70, -1131.40, 47.00,   0.00, 0.00, 258.99);
	CreateDynamicObject(8623, -2188.90, -1134.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2179.89, -1138.66, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2165.30, -1142.50, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2162.10, -1143.70, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2147.20, -1147.90, 46.80,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2210.70, -1146.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2214.90, -1144.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2234.10, -1104.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2243.10, -1135.00, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2244.10, -1137.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2245.30, -1140.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2246.90, -1144.80, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(8623, -2246.10, -1142.70, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2217.90, -1145.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1762, -2220.10, -1102.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1762, -2221.70, -1098.50, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(3524, -2226.00, -1150.90, 47.10,   0.00, 0.00, 342.00);
	CreateDynamicObject(1256, -2236.20, -1147.60, 47.70,   0.00, 0.00, 252.00);
	CreateDynamicObject(3514, -2233.00, -1143.10, 48.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(4960, -2211.90, -1154.10, 47.60,   0.00, 0.00, 117.99);
	CreateDynamicObject(635, -2213.10, -1147.40, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(635, -2204.50, -1151.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, -2206.20, -1150.70, 47.50,   0.00, 0.00, 74.00);
	CreateDynamicObject(970, -2209.80, -1151.70, 47.50,   0.00, 0.00, 76.00);
	CreateDynamicObject(855, -2203.70, -1152.10, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(855, -2202.90, -1149.90, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2204.30, -1150.20, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(871, -2204.40, -1149.30, 47.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(874, -2213.20, -1147.60, 47.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2213.10, -1145.70, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2217.60, -1144.90, 47.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(869, -2211.80, -1149.90, 47.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(2591, -2111.60, -1148.83, 35.80,   0.00, 0.00, -19.20);
	CreateDynamicObject(2591, -2123.43, -1144.61, 35.80,   0.00, 0.00, -19.20);
	CreateDynamicObject(2591, -2128.48, -1159.13, 35.80,   0.00, 0.00, -19.20);
	CreateDynamicObject(2591, -2116.64, -1163.29, 35.80,   0.00, 0.00, -19.20);
	CreateDynamicObject(8623, -2176.10, -1140.27, 46.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(16087, -2176.40, -1169.02, 49.41,   0.00, 0.00, -109.62);
	CreateDynamicObject(978, -2191.41, -1155.52, 47.59,   0.00, 0.00, -108.84);
	CreateDynamicObject(978, -2194.44, -1164.36, 47.59,   0.00, 0.00, -108.84);
	CreateDynamicObject(978, -2197.41, -1173.13, 47.59,   0.00, 0.00, -108.84);
	CreateDynamicObject(978, -2160.93, -1172.09, 47.59,   0.00, 0.00, -108.18);
	CreateDynamicObject(978, -2163.85, -1180.90, 47.59,   0.00, 0.00, -108.60);
	CreateDynamicObject(978, -2165.90, -1187.01, 47.59,   0.00, 0.00, -108.60);
	CreateDynamicObject(978, -2171.61, -1189.83, 47.59,   0.00, 0.00, -199.20);
	CreateDynamicObject(978, -2180.12, -1186.84, 47.59,   0.00, 0.00, -199.20);
	//заборыыы лееей
	CreateObject(4996, 1937.24, 2183.34, 18.29,   0.00, 0.00, 0.00);
	CreateObject(4997, 1937.24, 2183.34, 18.29,   0.00, 0.00, 0.00);
	CreateObject(3414, 1936.80, 2164.23, 14.54,   0.00, 0.00, 0.00);
	CreateObject(4865, 1901.31, 2156.48, 16.09,   0.00, 0.00, 0.00);
	CreateObject(4866, 1901.31, 2152.15, 16.09,   0.00, 0.00, 0.00);
	CreateObject(1232, 1898.98, 2156.59, 15.28,   356.86, 0.00, 3.14);
	CreateObject(1232, 1898.70, 2150.01, 15.28,   356.86, 0.00, 3.14);
	//
	CreateDynamicObject(18765, 2523.83, -2135.01, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2523.89, -2125.14, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2513.93, -2135.02, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2520.01, -2125.59, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2518.53, -2122.40, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2525.06, -2122.60, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2543.60, -2109.29, 23.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2513.05, -2140.64, 21.53,   0.02, 0.00, 0.00);
	CreateDynamicObject(997, 2507.14, -2134.96, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2519.14, -2118.09, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(997, 2509.42, -2138.57, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(997, 2527.17, -2140.61, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2518.94, -2140.64, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2524.62, -2118.08, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(10011, 2528.40, 22.09, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(10010, 2563.05, -2062.92, 27.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(10010, 2528.38, -2134.73, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(1256, 2528.49, -2121.24, 21.53,   -0.02, 0.00, 360.00);
	CreateDynamicObject(1256, 2521.93, -2117.96, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(18765, 2520.13, -2122.74, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2524.45, -2122.44, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2521.11, -2125.26, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2517.57, -2117.99, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1232, 2515.53, -2118.07, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(1232, 2528.08, -2117.94, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 2528.50, -2129.94, 21.62,   -0.02, 0.02, 268.98);
	CreateDynamicObject(2942, 2528.50, -2128.86, 21.62,   -0.02, 0.02, 268.98);
	CreateDynamicObject(1232, 2509.34, -2139.58, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2523.88, -2135.52, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2515.99, -2135.59, 18.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2518.56, -2135.50, 18.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2521.16, -2135.51, 18.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2513.82, -2135.51, 18.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(10013, 2528.40, 1.00, 20.98,   0.00, 0.00, 269.00);
	CreateDynamicObject(10013, 2528.47, -2136.09, 21.37,   0.00, 0.00, 269.00);
	CreateDynamicObject(10011, 2528.39, -2133.50, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(10012, 2528.39, -2127.68, 21.39,   0.00, 0.00, 269.00);
	CreateDynamicObject(10009, 2528.41, -2126.30, 21.15,   0.00, 0.00, 269.00);
	CreateDynamicObject(2942, 2528.53, -2131.10, 21.62,   0.08, 0.06, 268.98);
	CreateDynamicObject(2942, 2528.53, -2132.16, 21.62,   0.08, 0.06, 268.98);
	CreateDynamicObject(4640, 2534.62, -2141.34, 20.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2526.02, -2117.95, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1549, 2523.90, -2117.85, 20.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1549, 2519.79, -2117.74, 20.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1549, 2515.49, -2122.97, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1549, 2528.48, -2123.08, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1232, 2528.39, -2139.60, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2515.54, -2121.04, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1256, 2515.54, -2130.52, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1256, 2515.54, -2134.14, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1549, 2515.49, -2132.27, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1256, 2512.32, -2137.38, 21.55,   0.20, 0.08, 90.00);
	CreateDynamicObject(2028, 2508.84, -2123.56, 22.86,   356.86, 0.00, 3.14);
	CreateDynamicObject(2028, 2505.13, -2119.98, 22.86,   356.86, 0.00, 0.00);
	CreateDynamicObject(19456, 1960.14, -2623.26, 11.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1965.04, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1974.66, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1984.28, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1993.90, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2003.52, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2013.16, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2032.40, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2042.03, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2061.28, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2063.84, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2068.56, -2623.11, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(19456, 2068.56, -2613.50, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(1907, 2407.08, -1715.76, 24.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(1908, 2409.72, -1712.39, 28.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(1908, 2061.43, -2621.37, 13.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(1909, 2061.42, -2621.37, 13.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(1907, 2061.45, -2621.34, 13.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2051.65, -2628.00, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2068.56, -2603.92, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(19456, 2068.56, -2594.32, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(19456, 2068.56, -2584.70, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(19456, 2068.58, -2582.09, 11.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(4999, 2060.80, -2588.49, 10.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(2935, 2061.45, -2611.75, 11.27,   0.00, 0.00, 269.00);
	CreateDynamicObject(19456, 2063.67, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2054.07, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2044.45, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2034.81, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2025.17, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2015.95, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2006.35, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1996.73, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1987.15, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1977.57, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1967.95, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1964.83, -2577.37, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 1960.14, -2616.40, 11.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1960.14, -2597.98, 11.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1960.14, -2588.38, 11.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 1960.14, -2582.22, 11.56,   0.00, 0.00, 0.00);
	CreateDynamicObject(968, 1960.15, -2603.79, 10.87,   0.00, -0.68, 90.00);
	CreateDynamicObject(966, 1960.18, -2603.76, 9.81,   0.00, 0.00, 90.00);
	CreateDynamicObject(4442, 1976.87, -2624.64, 11.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(4109, 1994.86, -2624.57, 10.67,   0.00, 0.00, 180.00);
	CreateDynamicObject(2365, 2005.48, -2622.84, 8.98,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2022.78, -2627.98, 11.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(2975, 2005.29, -2617.41, 9.81,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1999.71, -2616.73, 9.81,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 2017.90, -2622.59, 11.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(2935, 2021.28, -2622.56, 11.27,   0.00, 0.00, 180.00);
	CreateDynamicObject(2932, 2017.89, -2622.60, 14.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(2428, 2013.83, -2602.67, 10.04,   0.00, 0.00, 0.00);
	CreateDynamicObject(923, 2014.45, -2617.21, 9.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(2409, 1941.22, -2640.04, 10.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(10814, 2033.91, -2599.20, 9.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(4994, 1962.52, -2580.62, 10.61,   0.00, 0.00, 100.00);
	CreateDynamicObject(2313, 1982.86, -2584.41, 9.83,   0.00, 0.00, 270.00);
	CreateDynamicObject(3169, 1969.89, -2591.88, 11.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(3170, 1977.23, -2591.91, 11.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1222, 1974.56, -2592.00, 10.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 1984.83, -2592.30, 9.81,   0.00, 0.00, 0.00);
	CreateDynamicObject(3170, 2014.20, -2617.33, 11.09,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 1996.82, -2592.53, 10.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(2969, 1996.42, -2591.95, 11.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(930, 2004.46, -2615.69, 9.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(1348, 2002.69, -2617.61, 10.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(1749, 2065.99, -2618.21, 17.96,   0.00, 0.00, 269.00);
	CreateDynamicObject(1742, 2066.00, -2617.30, 18.02,   0.00, 0.00, 269.00);
	CreateDynamicObject(1744, 2065.93, -2618.46, 18.74,   0.00, 0.00, 269.00);
	CreateDynamicObject(1744, 2065.36, -2618.35, 18.74,   0.00, 0.00, 250.00);
	CreateDynamicObject(1743, 2066.88, -2618.35, 18.70,   0.00, 0.00, 269.00);
	CreateDynamicObject(1738, 2065.98, -2617.93, 18.46,   0.00, 0.00, 269.00);
	CreateDynamicObject(1748, 2065.44, -2617.95, 18.46,   0.00, 0.00, 269.00);
	CreateDynamicObject(18765, 2523.83, -2135.01, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2523.89, -2125.14, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2513.93, -2135.02, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2520.01, -2125.59, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2518.53, -2122.40, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2525.06, -2122.60, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2543.60, -2109.29, 23.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2513.05, -2140.64, 21.53,   0.02, 0.00, 0.00);
	CreateDynamicObject(997, 2507.14, -2134.96, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2519.14, -2118.09, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(997, 2509.42, -2138.57, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(997, 2527.17, -2140.61, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2518.94, -2140.64, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(996, 2524.62, -2118.08, 21.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(10011, 2528.40, 22.09, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(10010, 2563.05, -2062.92, 27.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(10010, 2528.38, -2134.73, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(1256, 2528.49, -2121.24, 21.53,   -0.02, 0.00, 360.00);
	CreateDynamicObject(1256, 2521.93, -2117.96, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(18765, 2520.13, -2122.74, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2524.45, -2122.44, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2521.11, -2125.26, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2517.57, -2117.99, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1232, 2515.53, -2118.07, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(1232, 2528.08, -2117.94, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 2528.50, -2129.94, 21.62,   -0.02, 0.02, 268.98);
	CreateDynamicObject(2942, 2528.50, -2128.86, 21.62,   -0.02, 0.02, 268.98);
	CreateDynamicObject(1232, 2509.34, -2139.58, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2523.88, -2135.52, 18.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2515.99, -2135.59, 18.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2518.56, -2135.50, 18.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2521.16, -2135.51, 18.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(18765, 2513.82, -2135.51, 18.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(10013, 2528.40, 1.00, 20.98,   0.00, 0.00, 269.00);
	CreateDynamicObject(10013, 2528.47, -2136.09, 21.37,   0.00, 0.00, 269.00);
	CreateDynamicObject(10011, 2528.39, -2133.50, 22.09,   0.00, 0.00, 269.00);
	CreateDynamicObject(10012, 2528.39, -2127.68, 21.39,   0.00, 0.00, 269.00);
	CreateDynamicObject(10009, 2528.41, -2126.30, 21.15,   0.00, 0.00, 269.00);
	CreateDynamicObject(2942, 2528.53, -2131.10, 21.62,   0.08, 0.06, 268.98);
	CreateDynamicObject(2942, 2528.53, -2132.16, 21.62,   0.08, 0.06, 268.98);
	CreateDynamicObject(4640, 2534.62, -2141.34, 20.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2526.02, -2117.95, 21.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1549, 2523.90, -2117.85, 20.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1549, 2519.79, -2117.74, 20.98,   0.00, 0.00, 0.00);
	CreateDynamicObject(1549, 2515.49, -2122.97, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1549, 2528.48, -2123.08, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1232, 2528.39, -2139.60, 23.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2515.54, -2121.04, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1256, 2515.54, -2130.52, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1256, 2515.54, -2134.14, 21.55,   0.20, 0.08, 180.00);
	CreateDynamicObject(1549, 2515.49, -2132.27, 20.97,   0.00, 0.00, 90.00);
	CreateDynamicObject(1256, 2512.32, -2137.38, 21.55,   0.20, 0.08, 90.00);
	CreateDynamicObject(2028, 2508.84, -2123.56, 22.86,   356.86, 0.00, 3.14);
	CreateDynamicObject(2028, 2505.13, -2119.98, 22.86,   356.86, 0.00, 0.00);
	CreateDynamicObject(1433, 2065.02, -2622.27, 17.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(1433, 2065.02, -2621.31, 17.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(1433, 2065.02, -2623.21, 17.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(1433, 2065.02, -2624.15, 17.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(1433, 2065.02, -2625.05, 17.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(1671, 2065.07, -2626.06, 17.94,   0.00, 0.00, 180.00);
	CreateDynamicObject(1671, 2064.08, -2625.18, 17.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(1671, 2064.08, -2624.20, 17.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(1671, 2064.08, -2623.20, 17.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(1671, 2064.08, -2622.36, 17.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(1671, 2064.08, -2621.38, 17.94,   0.00, 0.00, 90.00);
	CreateDynamicObject(1671, 2066.02, -2621.38, 17.94,   0.00, 0.00, 269.00);
	CreateDynamicObject(1671, 2066.02, -2622.26, 17.94,   0.00, 0.00, 269.00);
	CreateDynamicObject(1671, 2066.02, -2623.10, 17.94,   0.00, 0.00, 269.00);
	CreateDynamicObject(1671, 2066.02, -2624.12, 17.94,   0.00, 0.00, 269.00);
	CreateDynamicObject(1671, 2066.02, -2624.98, 17.94,   0.00, 0.00, 269.00);
	CreateDynamicObject(3111, 2067.15, -2620.65, 19.24,   90.00, 0.00, 269.00);
	CreateDynamicObject(19172, 2067.15, -2623.04, 19.26,   0.00, 0.00, 269.00);
	CreateDynamicObject(3066, 1991.20, -2592.50, 10.85,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 2065.55, -2622.08, 11.82,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2062.77, -2617.10, 10.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 2060.51, -2616.69, 11.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1685, 2056.76, -2623.31, 11.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(10178, 2056.15, -2617.61, 18.76,   0.00, 0.00, 360.00);
	CreateDynamicObject(3170, 2057.48, -2616.68, 12.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(10019, 2064.78, -2625.70, 14.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(10017, 2064.80, -2625.65, 14.24,   0.00, 0.00, 269.00);
	CreateDynamicObject(10019, 2064.78, -2622.70, 14.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(10016, 2064.59, -2622.72, 14.24,   0.00, 0.00, 269.00);
	CreateDynamicObject(10019, 2064.78, -2619.98, 14.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(10018, 2064.56, -2619.93, 14.24,   0.00, 0.00, 90.00);
	CreateDynamicObject(3184, 2065.64, -2616.12, 15.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(2991, 2057.75, -2616.88, 14.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2054.80, -2621.64, 10.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2054.80, -2617.86, 10.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(1549, 2054.82, -2619.77, 9.76,   0.00, 0.00, 90.00);
	////музей инт
	CreateDynamicObject(19071, 23.38773, 1108.45422, 1005.29108,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(18762, 18.40181, 1099.78870, 1006.25745,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1942, 18.60720, 1115.48816, 1006.76257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1942, 43.06750, 1102.64746, 1006.76257,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1942, 18.60720, 1115.48816, 1010.26257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1942, 43.06750, 1102.64746, 1010.26257,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19461, 42.84390, 1106.82593, 1004.50372,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(19461, 18.82910, 1101.65173, 1007.69971,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(8704, 32.19090, 1097.27405, 1004.64929,   0.00000, -5.17900, 90.00000);
	CreateDynamicObject(8704, 31.99100, 1121.06116, 1004.64929,   0.00000, -5.17900, 90.00000);
	CreateDynamicObject(18997, 19.58106, 1108.93652, 1006.26434,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(748, 21.35984, 1105.62183, 1006.11407,   0.00000, 0.00000, 60.89999);
	CreateDynamicObject(748, 20.97575, 1112.49817, 1006.11407,   0.00000, 0.00000, -169.44005);
	CreateDynamicObject(750, 6.06258, 1133.25928, 1006.26636,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4091, 12.75705, 1111.06506, 1006.26501,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19461, 18.82780, 1111.28308, 1007.69971,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.85330, 1111.33765, 1009.35571,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.84790, 1101.72375, 1009.35571,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.82780, 1120.91406, 1007.69971,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.85330, 1120.97375, 1009.35571,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(4091, 12.76720, 1081.31848, 1006.26501,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19461, 18.82910, 1092.01965, 1007.69971,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.84790, 1092.13684, 1009.35571,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(4091, 29.03865, 1084.58679, 1006.26501,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19461, 25.31932, 1090.68518, 1007.69971,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 34.94670, 1090.68445, 1007.69971,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 44.55870, 1090.68347, 1007.69971,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 42.84330, 1097.24866, 1007.69971,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(4091, 48.97488, 1107.64941, 1006.26501,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(4091, 48.96880, 1137.42261, 1006.26501,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(4091, 30.80225, 1133.60876, 1006.26501,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19461, 42.84060, 1106.88062, 1007.69971,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84200, 1116.51294, 1007.69971,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84380, 1126.14746, 1007.69971,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 36.34210, 1127.46167, 1007.69971,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 26.70830, 1127.46118, 1007.69971,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 17.09744, 1127.45923, 1007.69971,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 25.31930, 1090.68518, 1009.35571,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 34.94670, 1090.68445, 1009.35571,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 44.55870, 1090.68347, 1009.35571,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 42.84330, 1097.24866, 1009.35571,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84060, 1106.88062, 1009.35571,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84200, 1116.51294, 1009.35571,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84380, 1126.14746, 1009.35571,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 36.34210, 1127.46167, 1009.35571,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 26.70830, 1127.46118, 1009.35571,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 17.09740, 1127.45923, 1009.35571,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 17.09740, 1127.45923, 1006.37469,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 26.70830, 1127.46118, 1006.37469,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 36.34210, 1127.46167, 1006.37469,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 42.84380, 1126.14746, 1006.37469,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84200, 1116.51294, 1006.37469,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84060, 1106.88062, 1006.37469,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84330, 1097.24866, 1006.37469,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 44.55870, 1090.68347, 1006.37469,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 34.94670, 1090.68445, 1006.37469,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 25.31930, 1090.68518, 1006.37469,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 18.82910, 1092.01965, 1006.37469,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.82910, 1101.65173, 1006.37469,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.82780, 1111.28308, 1006.37469,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.82780, 1120.91406, 1006.37469,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 44.55870, 1090.68347, 1010.60468,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 34.94670, 1090.68445, 1010.60468,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 25.31930, 1090.68518, 1010.60468,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19461, 18.84790, 1092.13684, 1010.60468,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.84790, 1101.72375, 1010.60468,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.85330, 1111.33765, 1010.60468,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 18.85330, 1120.97375, 1010.60468,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19461, 17.09740, 1127.45923, 1010.60468,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 26.70830, 1127.46118, 1010.60468,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 36.34210, 1127.46167, 1010.60468,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 42.84380, 1126.14746, 1010.60468,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84200, 1116.51294, 1010.60468,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84060, 1106.88062, 1010.60468,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19461, 42.84330, 1097.24866, 1010.60468,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(2946, 41.13700, 1106.89697, 1006.26459,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 41.15050, 1110.06982, 1006.26459,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19461, 42.84390, 1110.12988, 1004.50372,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(1587, 20.07150, 1093.04468, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78460, 1094.05078, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1095.05273, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1096.80969, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78460, 1097.81580, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1098.81775, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1100.57471, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78460, 1101.58081, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1102.58264, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1125.17273, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78559, 1124.17029, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1123.16467, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1121.40771, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78560, 1120.40527, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1119.39966, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19466, 20.78560, 1116.38928, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1117.39172, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1587, 20.07150, 1115.38367, 1008.52148,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(1444, 20.74674, 1095.84497, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1277, 20.74160, 1094.02576, 1008.53430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19166, 20.76150, 1097.80383, 1008.53632,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(2054, 20.69900, 1101.63086, 1008.50482,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1444, 20.79886, 1099.66785, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 20.73693, 1118.37488, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 20.75530, 1122.21997, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1739, 41.18781, 1105.68494, 1008.51959,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1739, 41.17593, 1111.32983, 1008.51959,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10162, 20.75322, 1092.65796, 1010.15326,   0.00000, 0.00000, 146.10001);
	CreateDynamicObject(10162, 40.93491, 1125.49487, 1010.15326,   0.00000, 0.00000, 323.52002);
	CreateDynamicObject(328, 20.67840, 1115.88806, 1008.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2985, 38.58651, 1125.19470, 1006.24377,   0.00000, 0.00000, -166.86003);
	CreateDynamicObject(1451, 22.16885, 1110.43054, 1006.90802,   0.00000, 0.00000, 58.08000);
	CreateDynamicObject(19466, 40.94368, 1114.51343, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2918, 39.83544, 1124.45593, 1007.18378,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 34.45488, 1118.95422, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 34.45490, 1122.19421, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2976, 40.47081, 1123.39490, 1006.28711,   0.00000, 0.00000, 21.00000);
	CreateDynamicObject(2986, 21.67604, 1092.41968, 1006.53760,   0.00000, 90.00000, -90.00000);
	CreateDynamicObject(2986, 39.99741, 1092.48486, 1006.53760,   0.00000, 90.00000, -90.00000);
	CreateDynamicObject(3028, 31.48150, 1125.68030, 1008.81787,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject(10236, 33.76349, 1118.70959, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 31.50150, 1118.70959, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 29.96451, 1118.95337, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 29.96450, 1122.17139, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 31.49774, 1124.03796, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 33.72470, 1124.03796, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 37.65604, 1124.02905, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 38.73132, 1122.39246, 1006.00739,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(10236, 40.57282, 1122.09192, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 40.61576, 1096.48474, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 37.96632, 1094.86145, 1006.00739,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(10236, 37.67431, 1092.89233, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4047, 36.18670, 1096.88135, 1005.14502,   0.00000, 0.00000, -23.73999);
	CreateDynamicObject(4322, 24.92409, 1092.37244, 1008.10828,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 23.21080, 1091.88855, 1008.52148,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19466, 24.21408, 1092.61536, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 26.45410, 1092.61401, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2894, 27.02140, 1092.42053, 1008.11761,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(1587, 27.43880, 1091.88855, 1008.52148,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(2894, 27.02140, 1092.42053, 1008.91559,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(1587, 22.95350, 1126.28503, 1008.52148,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19466, 23.94480, 1125.58325, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 26.18500, 1125.58362, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1587, 27.18150, 1126.28503, 1008.52148,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19317, 24.21057, 1125.77380, 1008.65491,   0.00000, 60.00000, 0.00000);
	CreateDynamicObject(19318, 26.18500, 1125.79968, 1008.63013,   0.00000, 60.00000, 0.00000);
	CreateDynamicObject(3348, 41.40460, 1109.81860, 1006.53967,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(1587, 29.96150, 1126.28503, 1008.52148,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(19466, 30.94480, 1125.58325, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 33.18500, 1125.58362, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1587, 34.17150, 1126.28503, 1008.52148,   0.00000, -90.00000, -90.00000);
	CreateDynamicObject(1587, 29.94680, 1091.88855, 1008.52148,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19466, 30.95410, 1092.61401, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 33.19340, 1092.59998, 1008.52289,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1587, 34.16880, 1091.88855, 1008.52148,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(1587, 41.65648, 1097.75989, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19466, 40.92480, 1098.78320, 1008.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 40.92480, 1102.52417, 1008.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 41.65650, 1099.76794, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(1587, 41.65650, 1101.54993, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(1587, 41.65650, 1103.49390, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(1587, 41.65650, 1113.49390, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(1587, 41.65650, 1115.49390, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(19466, 40.94370, 1118.01343, 1008.52289,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1587, 41.65650, 1116.99390, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(1587, 41.65650, 1118.99390, 1008.52148,   0.00000, -90.00000, 180.00000);
	CreateDynamicObject(2894, 41.00900, 1114.53784, 1008.90472,   90.00000, -90.00000, 0.00000);
	CreateDynamicObject(2894, 41.00900, 1114.53784, 1008.17670,   90.00000, -90.00000, 0.00000);
	CreateDynamicObject(3111, 41.11450, 1118.01025, 1008.54260,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(10236, 31.64815, 1100.24365, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 34.00820, 1100.24365, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 30.19576, 1098.30261, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 34.65929, 1098.27197, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 34.65930, 1095.15405, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10236, 33.92812, 1094.91846, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 31.67736, 1094.92358, 1006.00739,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10236, 30.19320, 1095.20947, 1006.00739,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3028, 33.45250, 1125.68030, 1008.81787,   0.00000, 70.00000, 0.00000);
	CreateDynamicObject(874, 21.98181, 1106.32947, 1006.28522,   0.00000, 0.00000, -23.58000);
	CreateDynamicObject(874, 20.74002, 1108.45959, 1006.28522,   0.00000, 0.00000, 2.58000);
	CreateDynamicObject(874, 21.14499, 1111.79944, 1006.28522,   0.00000, 0.00000, -40.80000);
	CreateDynamicObject(19315, 22.50774, 1107.61011, 1006.72552,   0.00000, 0.00000, 17.52000);
	CreateDynamicObject(19315, 22.70598, 1111.33862, 1006.72552,   0.00000, 0.00000, -45.24000);
	CreateDynamicObject(19079, 22.38175, 1110.26379, 1007.79059,   0.00000, -90.00000, -95.04002);
	CreateDynamicObject(328, 20.67840, 1116.17212, 1008.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(328, 20.67840, 1116.45605, 1008.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(328, 20.67840, 1116.74011, 1008.54510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10226, 20.89471, 1118.34521, 1008.87408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10226, 20.88123, 1122.22864, 1008.87408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10226, 20.89061, 1099.63257, 1008.87408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10226, 20.89668, 1095.86768, 1008.87408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10226, 28.74081, 1092.69824, 1008.87408,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(10226, 28.53550, 1125.49963, 1008.87408,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 28.65651, 1092.81506, 1007.08160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 28.54127, 1125.32422, 1007.08160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10226, 40.87229, 1116.34583, 1008.87408,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(10226, 40.86823, 1100.67554, 1008.87408,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1444, 40.87855, 1116.33679, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 40.69368, 1100.54016, 1007.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3095, 41.69729, 1126.18494, 1006.28430,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(3095, 41.67218, 1126.29114, 1006.28430,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19461, 37.12283, 1127.48059, 1009.35571,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19461, 42.85620, 1121.65723, 1009.35571,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(8087, 20.51550, 1108.60791, 1008.07202,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19174, 38.54222, 1092.37219, 1008.52570,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19461, 37.18909, 1090.65710, 1009.35571,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(19174, 41.23320, 1092.37219, 1008.52570,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19174, 41.17574, 1095.01868, 1008.52570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19461, 42.86636, 1096.39233, 1009.35571,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(19174, 41.17570, 1092.33875, 1008.52570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2894, 38.11720, 1095.51025, 1007.05090,   90.00000, 90.00000, 140.10001);
	CreateDynamicObject(19470, 38.12895, 1095.48010, 1006.28857,   0.00000, 0.00000, 140.09999);
	CreateDynamicObject(19470, 32.20773, 1100.12463, 1006.28857,   0.00000, 0.00000, 90.10000);
	CreateDynamicObject(2894, 32.22270, 1100.16504, 1007.05090,   90.00000, 90.00000, 90.10000);
	CreateDynamicObject(19470, 32.02286, 1118.43506, 1006.28857,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2894, 32.01130, 1118.38562, 1007.05292,   90.00000, 90.00000, -90.00000);
	CreateDynamicObject(19470, 38.04483, 1122.59229, 1006.28857,   0.00000, 0.00000, -139.20016);
	CreateDynamicObject(2894, 38.01180, 1122.57568, 1007.05292,   90.00000, 90.00000, -139.20020);
	CreateDynamicObject(10168, 32.20255, 1108.95825, 1011.90741,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10243, 40.49320, 1110.79016, 1006.27173,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10243, 40.49320, 1106.79016, 1006.27173,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(330, 20.60360, 1120.41675, 1008.58557,   0.00000, 0.00000, -86.82000);
	CreateDynamicObject(3119, 20.35115, 1125.60510, 1008.88611,   90.00000, -90.00000, 0.00000);
	CreateDynamicObject(3017, 20.71190, 1124.39429, 1008.57599,   -11.87600, 87.62400, -90.00000);
	CreateDynamicObject(2894, 20.58356, 1123.71521, 1008.51752,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(4440, 41.11930, 1102.38171, 1008.51990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(357, 41.11230, 1098.53760, 1008.39917,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19170, 33.15894, 1092.44153, 1008.51611,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19171, 31.07190, 1092.37256, 1008.52197,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(10168, 32.30669, 1095.88782, 1011.90741,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10168, 32.10238, 1122.39807, 1011.90741,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19071, 23.07270, 1108.48254, 1011.68799,   0.00000, 0.00000, 0.00000);
	CreateObject(19450, 2317.16, -254.09, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2307.60, -254.08, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2299.54, -254.08, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2295.11, -249.19, 2.77, 0.00, 0.00, 0.00);
	CreateObject(19450, 2321.77, -249.30, 2.77, 0.00, 0.00, 0.00);
	CreateObject(19450, 2321.77, -249.38, 2.77, 0.00, 0.00, 0.00);
	CreateObject(19450, 2317.08, -242.89, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2321.75, -247.61, 2.77, 0.00, 0.00, 0.00);
	CreateObject(19450, 2317.08, -242.89, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2295.11, -247.48, 2.77, 0.00, 0.00, 0.00);
	CreateObject(19450, 2299.82, -242.90, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19450, 2307.90, -242.90, 2.77, 0.00, 0.00, 90.00);
	CreateObject(19462, 2299.85, -252.21, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2299.85, -248.81, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2299.48, -245.34, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2299.44, -244.62, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2309.03, -244.73, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2309.05, -247.75, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2308.92, -251.05, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2308.90, -252.46, 0.95, 0.00, 90.00, 90.00);
	CreateObject(19462, 2316.94, -252.28, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2317.00, -248.86, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2316.85, -245.49, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19462, 2316.85, -244.75, 0.96, 0.00, 90.00, 90.00);
	CreateObject(19454, 2299.89, -244.67, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2299.91, -248.14, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2300.02, -251.54, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2300.04, -252.27, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2309.54, -252.27, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2309.51, -248.88, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2309.68, -245.52, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2309.66, -244.66, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2316.81, -244.71, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2316.84, -248.18, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2316.84, -251.68, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2316.85, -252.34, 4.47, 0.00, 90.00, 90.00);
	CreateObject(1717, 2321.70, -248.59, 1.90, 0.00, 0.00, 0.00);
	CreateObject(1436, 2295.87, -252.91, 1.84, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -250.41, 1.84, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -244.41, 1.84, 0.00, 0.00, 90.00);
	CreateObject(1000, 2296.16, -252.93, 2.08, 0.00, 0.00, -88.80);
	CreateObject(1001, 2295.44, -252.88, 2.08, 0.00, 0.00, -93.12);
	CreateObject(1436, 2295.87, -252.92, 1.14, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -252.92, 2.37, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -250.41, 2.37, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -250.42, 1.14, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -246.91, 2.37, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -246.91, 1.84, 0.00, 0.00, 90.00);
	CreateObject(1436, 2295.87, -244.43, 2.37, 0.00, 0.00, 90.00);
	CreateObject(1002, 2296.12, -252.82, 1.41, 0.00, 0.00, -84.12);
	CreateObject(1003, 2295.46, -252.88, 1.41, 0.00, 0.00, -94.20);
	CreateObject(1015, 2295.44, -252.86, 2.60, 0.00, 0.00, -94.62);
	CreateObject(1023, 2295.77, -252.86, 2.60, 0.00, 0.00, -79.26);
	CreateObject(1027, 2295.31, -251.33, 2.72, 0.00, 0.00, -364.50);
	CreateObject(1026, 2295.71, -251.30, 2.72, 0.00, 0.00, -364.50);
	CreateObject(1027, 2296.25, -251.31, 2.72, 0.00, 0.00, -357.06);
	CreateObject(1029, 2295.68, -249.00, 2.56, 0.00, 0.00, -357.06);
	CreateObject(1034, 2295.83, -248.81, 1.96, 0.00, 0.00, -357.12);
	CreateObject(1046, 2295.55, -251.40, 2.56, 0.00, 0.00, -190.44);
	CreateObject(1073, 2298.32, -253.90, 3.64, 0.00, 0.00, -273.24);
	CreateObject(1073, 2299.03, -253.95, 3.00, 0.00, 0.00, -273.24);
	CreateObject(1073, 2297.51, -253.93, 3.00, 0.00, 0.00, -273.24);
	CreateObject(1073, 2299.76, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1075, 2300.48, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1075, 2301.20, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1075, 2301.92, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1075, 2302.64, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1081, 2303.36, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1081, 2304.08, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1081, 2304.80, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1081, 2305.52, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1081, 2305.52, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1082, 2306.24, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1082, 2306.96, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1082, 2307.68, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1082, 2308.40, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1085, 2309.12, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(19454, 2300.22, -245.46, 4.47, 0.00, 90.00, 90.00);
	CreateObject(19454, 2300.26, -244.65, 4.47, 0.00, 90.00, 90.00);
	CreateObject(1085, 2309.86, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1085, 2310.60, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1085, 2311.34, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1096, 2312.08, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1096, 2312.82, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1096, 2313.56, -253.94, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1096, 2314.30, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1097, 2315.01, -253.93, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1097, 2315.74, -253.92, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1097, 2316.45, -253.93, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1097, 2317.20, -253.90, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1098, 2317.93, -253.93, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1098, 2318.64, -253.90, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1098, 2319.37, -253.93, 3.00, 0.00, 0.00, -270.00);
	CreateObject(1098, 2320.08, -253.90, 3.64, 0.00, 0.00, -267.90);
	CreateObject(1025, 2295.79, -247.38, 2.19, 0.00, -90.00, 0.00);
	CreateObject(1025, 2295.77, -246.34, 2.19, 0.00, -90.00, 0.00);
	CreateObject(1025, 2295.77, -246.34, 2.75, 0.00, -90.00, 0.00);
	CreateObject(1025, 2295.69, -247.40, 2.75, 0.00, -90.00, 0.00);
	CreateObject(1050, 2295.55, -244.72, 2.63, 0.00, 0.00, -100.74);
	CreateObject(1058, 2296.12, -244.70, 2.63, 0.00, 0.00, -80.22);
	CreateObject(1060, 2296.09, -243.82, 2.63, 0.00, 1.92, -164.94);
	CreateObject(1221, 2296.02, -247.38, 1.50, 0.00, 0.00, -8.64);
	CreateObject(1221, 2295.94, -246.37, 1.50, 0.00, 0.00, -92.94);
	CreateObject(1221, 2295.94, -244.93, 1.50, 0.00, 0.00, -93.36);
	CreateObject(1221, 2295.96, -243.84, 1.50, 0.00, 0.00, 3.72);
	CreateObject(10208, 2298.31, -243.59, 1.01, 0.00, 0.00, 0.00);
	CreateObject(10208, 2300.04, -243.59, 1.01, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.17, -243.19, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.26, -243.20, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.17, -243.27, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.26, -243.28, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.26, -243.35, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.26, -243.42, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.26, -243.48, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.18, -243.35, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.18, -243.42, 2.12, 0.00, 0.00, 0.00);
	CreateObject(365, 2298.18, -243.48, 2.12, 0.00, 0.00, 0.00);
	CreateObject(366, 2296.79, -243.14, 2.12, 0.00, 40.00, 0.00);
	CreateObject(366, 2297.18, -243.14, 2.12, 0.00, 40.00, 0.00);
	CreateObject(372, 2299.05, -243.67, 2.12, 0.00, 0.00, 0.00);
	CreateObject(364, 2299.63, -243.90, 1.91, 0.00, 0.00, 92.64);
	CreateObject(337, 2297.18, -243.08, 2.45, 0.00, 0.00, -256.02);
	CreateObject(19172, 2299.67, -243.04, 3.22, 0.00, 0.00, 0.00);
	CreateObject(19174, 2305.61, -243.04, 3.22, 0.00, 0.00, 0.00);
	CreateObject(19175, 2313.44, -243.04, 3.22, 0.00, 0.00, 0.00);
	CreateObject(19173, 2319.65, -243.04, 3.22, 0.00, 0.00, 0.00);
	CreateDynamicObject(2067, 2562.09, -2116.66, 21.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(2013, 2545.05, -2033.54, 23.50,   0.00, 0.00, 90.00);
	CreateDynamicObject(19074, 2570.12, -2130.11, 18.45,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2530.15, -2130.01, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2510.20, -2130.02, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2530.04, -2110.01, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2530.03, -2097.03, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2550.15, -2110.08, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2570.07, -2110.06, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2570.09, -2092.57, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(19074, 2550.19, -2092.54, 18.47,   0.00, 180.00, 0.00);
	CreateDynamicObject(2069, 2562.07, -2116.68, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(1617, 2550.67, -2135.78, 24.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(1617, 2558.73, -2135.81, 24.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(1697, 2531.44, -2100.04, 27.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(1697, 2531.55, -2114.06, 27.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(1697, 2531.35, -2128.46, 27.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(1688, 2543.24, -2099.61, 26.74,   0.00, 0.00, 0.00);
	CreateDynamicObject(1688, 2542.43, -2128.67, 26.74,   0.00, 0.00, 0.00);
	CreateDynamicObject(3030, 2541.82, -2114.22, 25.51,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2537.14, -2138.00, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2537.13, -2133.90, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2539.18, -2140.04, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2543.33, -2140.05, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2547.49, -2140.05, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2549.61, -2140.04, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2551.64, -2137.98, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2526.18, -2137.98, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2524.12, -2140.03, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2520.02, -2140.01, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2515.90, -2140.00, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2506.84, -2140.03, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(19425, 2512.17, -2139.94, 20.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(19425, 2510.64, -2139.94, 20.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(1229, 2508.97, -2140.05, 22.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(2013, 2507.23, -2125.18, 23.50,   0.00, 0.00, 0.00);
	CreateDynamicObject(1227, 2505.49, -2130.81, 21.76,   0.00, 0.00, 90.00);
	CreateDynamicObject(1227, 2505.48, -2133.57, 21.76,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2504.79, -2137.74, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2504.79, -2133.57, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2504.79, -2129.41, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2512.16, -2120.07, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2516.26, -2120.07, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2518.16, -2120.06, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2520.23, -2117.97, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.22, -2113.84, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.20, -2109.73, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.18, -2105.63, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.17, -2101.53, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.13, -2097.46, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.11, -2093.37, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2520.11, -2089.24, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2522.20, -2087.19, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2526.32, -2087.20, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2530.44, -2087.19, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2534.55, -2087.20, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2536.61, -2087.20, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2538.67, -2089.31, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2538.64, -2090.67, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2553.07, -2090.42, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2552.98, -2086.30, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2552.95, -2084.61, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2555.01, -2082.57, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2559.13, -2082.55, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2562.69, -2082.53, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2564.68, -2080.46, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2566.20, -2080.51, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(1761, 2567.93, -2080.51, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2569.64, -2079.39, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2563.60, -2081.38, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2560.01, -2081.43, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2557.27, -2081.34, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2554.07, -2081.35, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2536.55, -2091.74, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2536.67, -2090.57, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(1761, 2536.73, -2088.72, 20.92,   356.86, 0.00, 3.14);
	CreateDynamicObject(970, 2568.73, -2082.58, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2571.19, -2080.49, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2574.99, -2080.47, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2577.95, -2082.58, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2580.04, -2084.63, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2580.12, -2088.75, 21.42,   0.00, 0.00, -89.00);
	CreateDynamicObject(970, 2580.14, -2092.86, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.12, -2096.99, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.10, -2101.11, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.09, -2105.23, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.08, -2109.36, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.07, -2113.50, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.06, -2117.61, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.06, -2121.73, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.06, -2125.87, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.08, -2129.97, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.09, -2134.11, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2580.09, -2138.03, 21.42,   0.00, 0.00, -90.00);
	CreateDynamicObject(970, 2578.04, -2140.04, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2573.89, -2140.03, 21.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 2571.82, -2137.98, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(970, 2571.84, -2137.24, 21.42,   0.00, 0.00, 90.00);
	CreateDynamicObject(1717, 2541.02, -2093.13, 23.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(1717, 2545.15, -2093.14, 23.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(1717, 2549.34, -2093.13, 23.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(19435, 2553.94, -2092.58, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(19435, 2555.55, -2092.59, 22.78,   0.00, 0.00, 90.00);
	CreateDynamicObject(1557, 2553.26, -2092.64, 20.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(1557, 2556.28, -2092.61, 20.90,   0.00, 0.00, 180.00);
	CreateDynamicObject(1557, 2553.20, -2092.56, 20.90,   0.00, 0.00, 0.00);
	CreateDynamicObject(1557, 2556.21, -2092.55, 20.90,   0.00, 0.00, 180.00);
	CreateDynamicObject(18766, 2542.25, -2124.29, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.81, -2124.28, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.82, -2119.32, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.82, -2114.38, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.80, -2109.41, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.81, -2104.44, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.81, -2099.48, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2548.83, -2095.66, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2540.92, -2095.71, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2540.90, -2100.64, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2540.90, -2105.63, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2540.90, -2110.59, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2540.87, -2115.46, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2541.29, -2119.59, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2554.26, -2132.91, 20.68,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2566.63, -2137.53, 20.45,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2566.76, -2137.69, 20.47,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2532.05, -2137.53, 20.47,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2531.21, -2137.53, 20.47,   90.00, 0.00, 0.00);
	CreateDynamicObject(4091, 2570.81, -2108.13, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2570.81, -2121.01, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2562.65, -2121.02, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2554.48, -2121.02, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2546.27, -2121.01, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2542.64, -2121.02, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2541.47, -2108.52, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2533.30, -2108.52, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2549.67, -2108.62, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2557.77, -2108.25, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2565.11, -2108.13, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2533.43, -2125.75, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(4091, 2536.13, -2125.73, 13.39,   -90.00, 0.00, 90.00);
	CreateDynamicObject(870, 2538.42, -2137.43, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(870, 2540.77, -2137.50, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(870, 2543.26, -2137.61, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(870, 2545.42, -2137.65, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(870, 2547.78, -2137.66, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(870, 2550.16, -2137.70, 21.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2562.67, -2135.24, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2563.69, -2135.24, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2564.69, -2135.19, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2565.80, -2135.20, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2566.91, -2135.22, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2567.87, -2135.22, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2568.83, -2135.19, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2569.67, -2135.20, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2531.20, -2142.34, 20.09,   104.00, 0.00, 0.00);
	CreateDynamicObject(18766, 2532.08, -2142.34, 20.09,   104.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2529.61, -2112.32, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2529.60, -2106.67, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2529.20, -2101.08, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2529.56, -2096.22, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2534.90, -2096.27, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2535.41, -2101.27, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2535.36, -2107.04, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1679, 2536.03, -2112.33, 21.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(1342, 2538.61, -2117.39, 22.16,   0.00, 0.00, 0.00);
	CreateDynamicObject(1341, 2538.70, -2120.57, 22.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(1340, 2538.79, -2125.24, 22.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.18, -2125.87, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.15, -2122.64, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.12, -2119.63, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.13, -2116.65, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.12, -2113.77, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.18, -2110.89, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.18, -2108.12, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.21, -2105.26, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.22, -2102.37, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.54, -2124.22, 22.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.57, -2121.05, 22.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.21, -2118.19, 22.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.38, -2115.17, 22.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.56, -2112.31, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.34, -2109.46, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.47, -2106.68, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2565.52, -2103.78, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2565.90, -2125.84, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.90, -2122.60, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.85, -2119.63, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.86, -2116.58, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.88, -2113.77, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.98, -2110.86, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.93, -2108.08, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2565.97, -2105.21, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2566.02, -2102.39, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2556.34, -2125.87, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.35, -2123.09, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.30, -2120.35, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.30, -2117.63, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.26, -2114.85, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.22, -2112.15, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.19, -2109.40, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.17, -2106.60, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2556.23, -2103.74, 21.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.58, -2105.14, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.52, -2107.97, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.54, -2110.77, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.53, -2113.47, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.52, -2116.25, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.61, -2118.95, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.60, -2121.71, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(4101, 2556.63, -2124.46, 22.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(1256, 2557.15, -2125.86, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.28, -2123.02, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.27, -2120.29, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.22, -2117.58, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.15, -2114.81, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.13, -2112.12, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.05, -2109.35, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.01, -2106.59, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1256, 2557.04, -2103.66, 21.72,   0.00, 0.00, 180.00);
	CreateDynamicObject(1214, 2569.31, -2092.84, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2568.51, -2092.84, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2567.69, -2092.87, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2566.70, -2092.85, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2565.68, -2092.85, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2564.67, -2092.83, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2563.60, -2092.80, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1214, 2562.66, -2092.82, 21.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(1761, 2578.58, -2080.24, 20.92,   356.86, 0.00, -2.34);
	CreateDynamicObject(1761, 2576.60, -2079.54, 20.92,   356.86, 0.00, -2.34);
	CreateDynamicObject(18766, 2556.84, -2137.71, 20.47,   90.00, 0.00, 0.00);
	CreateDynamicObject(2060, 2097.00, -2687.20, 1000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2133.33, -2781.48, 959.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2133.33, -2781.48, 964.29,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2133.33, -2781.48, 959.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2133.33, -2791.43, 959.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2133.33, -2791.43, 964.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2089.67, -2781.36, 955.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2089.67, -2781.36, 959.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2089.67, -2791.44, 959.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(4374, 2089.67, -2791.44, 955.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 2108.12, -2784.84, 953.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(3066, 2114.45, -2789.19, 953.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 2101.13, -2789.25, 953.95,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2123.77, -2792.05, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2118.51, -2788.71, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2121.69, -2785.36, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2097.66, -2792.37, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2093.49, -2789.21, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2096.68, -2785.51, 953.01,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 2121.27, -2774.50, 954.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(2934, 2114.89, -2770.68, 954.44,   0.00, 0.00, 50.22);
	CreateDynamicObject(2934, 2104.09, -2761.50, 954.44,   0.00, 0.00, 50.22);
	CreateDynamicObject(2934, 2095.40, -2759.27, 954.44,   0.00, 0.00, 93.72);
	CreateDynamicObject(2975, 2122.23, -2779.57, 953.03,   0.00, 0.00, 42.30);
	CreateDynamicObject(2960, 2110.65, -2766.88, 955.90,   0.00, 0.00, -41.34);
	CreateDynamicObject(2960, 2107.26, -2763.90, 955.90,   0.00, 0.00, -41.34);
	CreateDynamicObject(2975, 2106.48, -2762.25, 955.89,   0.00, 0.00, -31.92);
	CreateDynamicObject(2975, 2104.32, -2760.67, 955.89,   0.00, 0.00, -37.20);
	CreateDynamicObject(2975, 2102.83, -2759.47, 955.26,   0.00, 0.00, -37.20);
	CreateDynamicObject(2975, 2098.04, -2758.32, 955.26,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 2093.81, -2758.70, 955.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(1503, 2115.80, -2776.25, 953.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(2974, 2127.90, -2779.21, 957.83,   0.00, 0.00, -59.52);
	CreateDynamicObject(2974, 2131.03, -2779.41, 955.56,   0.00, 0.00, 90.00);
	CreateDynamicObject(1383, 2114.61, -2739.44, 962.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(1383, 2124.11, -2772.39, 962.47,   0.00, 90.00, 90.00);
	CreateDynamicObject(19463, 2089.46, -2754.31, 957.57,   0.00, 90.00, 90.00);
	CreateDynamicObject(19463, 2089.46, -2750.56, 959.68,   0.00, 90.00, 90.00);
	CreateDynamicObject(19463, 2089.46, -2746.76, 961.71,   0.00, 90.00, 90.00);
	CreateDynamicObject(19463, 2089.46, -2742.85, 963.35,   0.00, 90.00, 90.00);
	CreateDynamicObject(2934, 2092.49, -2733.89, 963.76,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 2097.18, -2728.69, 966.48,   0.00, 0.00, -65.34);
	CreateDynamicObject(19463, 2109.77, -2724.83, 966.14,   0.00, 90.00, 90.00);
	CreateDynamicObject(1348, 2113.71, -2726.16, 966.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1348, 2111.59, -2725.95, 966.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1348, 2109.40, -2725.91, 966.87,   0.00, 0.00, 13.68);
	CreateDynamicObject(1437, 2124.81, -2788.37, 953.03,   -10.00, 0.00, -90.00);
	CreateDynamicObject(1217, 2109.73, -2724.38, 953.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1217, 2111.66, -2725.36, 953.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1217, 2113.83, -2724.60, 953.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(1217, 2116.57, -2724.23, 953.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(898, 2111.79, -2747.29, 949.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(9148, 2120.57, -2745.66, 951.49,   0.00, -60.00, 0.00);
	CreateDynamicObject(823, 2110.12, -2749.94, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2109.83, -2742.80, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2106.58, -2747.89, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2109.88, -2764.72, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(898, 2107.10, -2725.55, 947.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2103.07, -2724.90, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(2934, 2127.42, -2755.31, 954.44,   0.00, 0.00, 121.50);
	CreateDynamicObject(3066, 2121.19, -2732.72, 953.95,   0.00, 0.00, 141.60);
	CreateDynamicObject(1378, 2111.72, -2739.27, 940.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(4931, 2097.02, -2742.81, 948.47,   0.00, 0.00, -23.52);
	CreateDynamicObject(4931, 2100.92, -2775.41, 948.47,   0.00, 0.00, -2.64);
	CreateDynamicObject(19313, 2099.45, -2722.48, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2113.45, -2722.50, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2127.45, -2722.50, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2089.79, -2733.21, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2089.83, -2747.27, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2089.83, -2761.26, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 2128.62, -2794.36, 957.78,   0.00, 0.00, 28.08);
	CreateDynamicObject(2973, 2128.57, -2788.06, 957.78,   0.00, 0.00, 28.08);
	CreateDynamicObject(2973, 2129.50, -2782.66, 957.78,   0.00, 0.00, 28.08);
	CreateDynamicObject(2890, 2127.16, -2740.85, 953.03,   0.00, 0.00, 21.48);
	CreateDynamicObject(3037, 2115.81, -2760.41, 952.46,   0.00, 0.00, 90.00);
	CreateDynamicObject(3580, 2121.02, -2760.43, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3580, 2110.75, -2760.26, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3580, 2114.36, -2760.26, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3580, 2118.25, -2760.32, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3579, 2099.25, -2767.07, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3579, 2109.98, -2775.67, 953.03,   0.00, 0.00, -60.72);
	CreateDynamicObject(3579, 2102.60, -2780.22, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2134.04, -2733.27, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2134.05, -2747.36, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2134.09, -2761.43, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2134.08, -2775.44, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2134.10, -2789.47, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2089.77, -2775.30, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2089.78, -2789.32, 969.03,   0.00, 0.00, 90.00);
	CreateDynamicObject(19313, 2103.74, -2800.39, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2117.72, -2800.38, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2131.69, -2800.36, 969.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(19463, 2123.71, -2724.77, 966.14,   0.00, 90.00, 90.00);
	CreateDynamicObject(19463, 2131.75, -2733.94, 966.14,   0.00, 90.00, 0.00);
	CreateDynamicObject(19463, 2132.11, -2751.13, 966.14,   0.00, 90.00, 0.00);
	CreateDynamicObject(19463, 2131.90, -2763.45, 967.52,   0.00, 90.00, 0.00);
	CreateDynamicObject(19463, 2131.48, -2778.04, 966.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(3579, 2112.89, -2726.36, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(3579, 2120.92, -2724.53, 953.03,   0.00, 0.00, 5.34);
	CreateDynamicObject(823, 2121.89, -2725.74, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2095.18, -2772.66, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(18770, 2109.55, -2722.47, 858.59,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2109.54, -2722.29, 858.59,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2118.20, -2722.47, 858.59,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2118.21, -2722.29, 858.59,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2131.79, -2722.45, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2133.74, -2724.39, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2089.79, -2724.39, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2091.73, -2722.45, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2091.71, -2800.41, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2089.78, -2798.47, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2131.72, -2800.41, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2133.67, -2798.47, 872.21,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2089.82, -2777.02, 860.20,   0.00, 180.00, 0.00);
	CreateDynamicObject(18770, 2089.82, -2795.75, 860.20,   0.00, 180.00, 0.00);
	CreateDynamicObject(823, 2122.56, -2741.76, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2123.55, -2760.61, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2094.25, -2745.56, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2096.70, -2788.44, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2119.59, -2785.63, 952.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(3066, 2114.04, -2715.56, 953.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(2973, 2110.05, -2712.51, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2110.02, -2709.33, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2109.99, -2710.54, 955.43,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2117.07, -2712.26, 953.03,   0.00, 0.00, -26.58);
	CreateDynamicObject(3014, 2111.79, -2713.49, 953.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(3014, 2112.59, -2713.69, 953.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(3014, 2112.07, -2712.61, 953.23,   0.00, 0.00, 53.40);
	CreateDynamicObject(3014, 2112.71, -2713.01, 953.23,   0.00, 0.00, 53.40);
	CreateDynamicObject(373, 2113.08, -2714.22, 953.45,   -30.00, -60.00, 0.00);
	CreateDynamicObject(373, 2113.05, -2713.66, 953.45,   -30.00, -60.00, 0.00);
	CreateDynamicObject(373, 2113.24, -2714.01, 953.45,   -30.00, -60.00, 0.00);
	CreateDynamicObject(355, 2113.76, -2713.64, 953.02,   80.00, -20.00, 0.00);
	CreateDynamicObject(355, 2113.55, -2713.37, 953.02,   80.00, -20.00, 30.00);
	CreateDynamicObject(358, 2111.87, -2712.09, 953.02,   40.00, 0.00, 0.00);
	CreateDynamicObject(359, 2113.40, -2712.73, 953.00,   90.00, 0.00, 40.00);
	CreateDynamicObject(371, 2113.84, -2714.03, 953.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(371, 2113.55, -2713.90, 953.24,   0.00, 0.00, 23.10);
	CreateDynamicObject(19456, 2122.54, -2716.72, 954.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2122.54, -2716.72, 958.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2122.54, -2707.11, 958.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2122.54, -2707.11, 954.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2117.67, -2702.38, 954.73,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2108.11, -2702.38, 954.73,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2117.67, -2702.38, 958.17,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2108.12, -2702.39, 958.17,   0.00, 0.00, 90.00);
	CreateDynamicObject(19456, 2105.88, -2716.74, 954.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2105.88, -2707.15, 954.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2105.88, -2707.15, 958.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(19456, 2105.88, -2716.74, 958.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 2120.68, -2703.65, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2975, 2121.25, -2705.38, 953.03,   0.00, 0.00, -27.66);
	CreateDynamicObject(2975, 2119.41, -2705.01, 953.03,   0.00, 0.00, -68.64);
	CreateDynamicObject(3170, 2120.12, -2720.26, 954.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(3170, 2120.91, -2718.51, 954.20,   0.00, 0.00, 17.22);
	CreateDynamicObject(2973, 2107.37, -2720.09, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2973, 2107.31, -2703.82, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2120.71, -2716.44, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(823, 2106.77, -2719.14, 953.15,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2115.60, -2718.20, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2101.56, -2718.20, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2101.56, -2711.69, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2101.56, -2705.07, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2115.60, -2711.69, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(19313, 2115.60, -2705.07, 959.88,   90.00, 0.00, 0.00);
	CreateDynamicObject(1569, 2111.79, -2702.43, 953.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(1569, 2114.79, -2702.43, 953.03,   0.00, 0.00, 180.00);
	CreateDynamicObject(18762, 2122.53, -2702.51, 957.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2122.53, -2702.51, 952.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2122.53, -2721.00, 952.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2122.53, -2721.00, 957.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2105.89, -2702.51, 957.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2105.89, -2702.51, 952.48,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2105.89, -2721.00, 957.47,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 2105.89, -2721.00, 952.48,   0.00, 0.00, 0.00);
}
callback: SetRang(tablename[], name[], rank, namegive[], text[]) 
{
	new hour,minute,second,timestr[64];
	gettime(hour,minute,second);
	format(timestr,sizeof(timestr),"%02d:%02d:%02d",hour,minute,second);
	mysql_tqueryf(mysql, "INSERT INTO `%s` (`name`,`name_give`, `rank`, `reason`) VALUES ('%s', '%s', '%d', '%s')", tablename, name, namegive, rank, text);
	return 1;
}
CMD:awarn(playerid) 
{
    if(CheckAdmin(playerid)) return 1;
	if(PI[playerid][pAdminWarn] < 1) return SCM(playerid, COLOR_GREY, !"У Вас не выговоров");
	return ShowPlayerDialogf(playerid, 7565, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация", !"Проверить", !"Закрыть", "\
	{FFFFFF}Информация для снятия выговора:\n\n\
	{FFFF99}1. Мероприятие:\n\
	{FFFFFF}Проведите 5 мероприятия: {FFFF99}проведено %d\n\n\
	{FFFF99}2. Репорт:\n\
	{FFFFFF}Ответьте на 45 репорта: {FFFF99}отвечено %d\n\n\
	{FFFF99}Удачи на посту, соблюдайте правила!", PI[playerid][pAdminEvents], PI[playerid][pAdminReports]);
}
callback: CefLoad(playerid) 
{
	KillTimer(PI[playerid][LoadCefInformation]);
	CheckGangWar(playerid);
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][pID]));
}
CMD:asetrang(playerid) 
{
    if(CheckAdmin(playerid)) return 1;
	if(PI[playerid][pAdmin] == 8) return SCM(playerid, COLOR_GREY, !"Вы уже игровой мастер максимального уровня");
	if(PI[playerid][pAdminWarn] != 0) return SCM(playerid, COLOR_GREY, !"У Вас есть выговор, снимите его используя команду: /awarn");
	return ShowPlayerDialogf(playerid, 7566, DIALOG_STYLE_MSGBOX, !"{ee3366}Информация", !"Проверить", !"Закрыть", "\
	{FFFFFF}Информация для повышения:\n\n\
	{FFFF99}1. Мероприятие:\n\
	{FFFFFF}Проведите %d мероприятия: {FFFF99}проведено %d\n\
	{FFFF99}2. Репорт:\n\
	{FFFFFF}Ответьте на %d репорта: {FFFF99}отвечено %d\n\
	{FFFF99}Удачи на посту, соблюдайте правила!", 2*PI[playerid][pAdmin], PI[playerid][pAdminEvents], 15*PI[playerid][pAdmin], PI[playerid][pAdminReports]);
}
CMD:vc(playerid, params[])
{
    if(PI[playerid][data_MUTE] == 1) return SCM(playerid, COLOR_GREY, !"Ваш чат временно заблокирован");
	if(PI[playerid][data_VIP] == 0) return SCM(playerid, COLOR_GREY, !"Данная команда Вам недоступна");
	if(GetPVarInt(playerid, "vrchat") > gettime())return SCM(playerid, COLOR_GREY, !"Отправлять сообщения в этот чат, можно раз в 1 секунду");
    static text[86];
    if(sscanf(params, "s[86]", text)) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /vc [текст]");

	new str_vip[144];
	if(PI[playerid][pAdmin] >= 1) format(str_vip, sizeof(str_vip), "{FFA500}[VIP (Игровой Мастер #%d)]{FFFFFF}: %s", PI[playerid][pAdminNumber], text);
	else format(str_vip, sizeof(str_vip), "{FFA500}[VIP] {FFFFFF}%s[%i]: %s", PI[playerid][pName], playerid, text);

    SendVIPMessage(-1, str_vip);
    SetPVarInt(playerid, "vrchat",gettime()+1);
    return 1;
}
public void:OnPlayerKeyDown(player, key) 
{
	if(PI[player][pTester] == 1) 
	{
		new buffer[64];
		format(buffer, sizeof(buffer), "KeyDown: %d", key);
		SendClientMessage(player, -1, buffer);
	}
	if(key == 114)
	{
		if(PI[player][pAdmin] >= 2) 
		{
			ShowPlayerDialogf(player, 7213, DIALOG_STYLE_LIST, "{ee3366}Настройки игрового мастера", "Изменить", "Закрыть", "\
			{FFFFFF}1. Режим бога: \t\t\t%s\n\
			2. Установить никнейм\t{FFFFFF}Вручную\n\
			3. Сгенерировать никнейм\t\t{FFFFFF}Автоматически\n\
			4. Установить невидимый скин.\n\
			5. Выдать себе JetPack\n\
			{FFFFFF}6. Оповещения анти-чита: \t\t%s\n\
			{FFFFFF}7. Админский чат: \t\t\t%s", 
			PI[player][pAdminStatus] ? ("{4eaa77}Включен{FFFFFF}") : ("{ce6c4f}Отключено{FFFFFF}"),
			PI[player][data_ASCHEAT] ? ("{4eaa77}Включены{FFFFFF}") : ("{ce6c4f}Отключены{FFFFFF}"),
			PI[player][data_CADMIN] ? ("{4eaa77}Включен{FFFFFF}") : ("{ce6c4f}Отключен{FFFFFF}"));
		}
	}
	if(key == 74) if(PI[player][pRang] > 8) callcmd::lmenu(player);
    if(key == 66) 
	{
		for(new g = 0; g < TotalBusiness; g++) if(IsPlayerInRangeOfPoint(player, 1.3, BizInfo[g][data_BUYX], BizInfo[g][data_BUYY], BizInfo[g][data_BUYZ])) ShowBusinessMenu(player, g);
		if(IsPlayerInRangeOfPoint(player, 25.0, 1565.9385, 1810.2889, 15.5197)) 
		{
			if(ArmyStorage == 0) cef_emit_event(player, "show-center-notify", CEFINT(2), CEFSTR("Склад закрыт"));
			else 
			{
				switch(PI[player][pMember]) 
				{
					case 2,5,6,7: 
					{
						if(IsPlayerInRangeOfPoint(player, 1.0, 1565.9385, 1810.2889, 15.5197)) 
						{
							ApplyAnimation(player,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
							MoveObject(VchSkladGate, 1568.7144, 1809.5629, 19.4385, 1.9, 0.0000, 0.0000, 90.1401);
							ArmyStorageDoorTimer = SetTimer("CloseArmyStorageDoor", 7000, 0);
						}
						else if(IsPlayerInRangeOfPoint(player, 1.0, 1571.5328, 1809.0415, 15.3236)) 
						{
							ApplyAnimation(player,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
							MoveObject(VchSkladGate, 1568.7144, 1809.5629, 19.4385, 1.9, 0.0000, 0.0000, 90.1401);
							ArmyStorageDoorTimer = SetTimer("CloseArmyStorageDoor", 7000, 0);
						}
					}
				}
			}
		}
		else if(PlayerToPoint(1.0, player, 1534.6836,1820.4808,578.6213) || PlayerToPoint(1.0, player, 1537.8619,1820.2335,578.6213) || PlayerToPoint(1.0, player, 1540.8298,1820.5121,578.6213)) 
		{
			ShowPlayerDialogf(player, 7999, DIALOG_STYLE_LIST, "{ee3366}Банк", !"Далее", !"Закрыть", "\
				1. Банковская карта {FFFF99}(№ %d)\n\
				{FFFFFF}2. Оплата имущества\n\
				3. Медицинские услуги", PI[player][pID]);
		}
	}
	if(key == 16) 
	{
		if(GetPVarInt(player, "AnimOn") != 0) 
		{
			cef_emit_event(player, "hide-button");
			ClearAnimations(player);
			SetPVarInt(player, "AnimOn", 0);
			SetPVarInt(player,"UseAnim", 0);
			SetPlayerSpecialAction(player, SPECIAL_ACTION_NONE);
		}
		else if(GetPVarInt(player, "SpecBool") == 1) 
		{
			TogglePlayerSpectating(player, false);
			HideAdmInfo(player);
		}
	}
	if(key == 17) 
	{
		if(GetPVarInt(player, "SpecBool") == 1) 
		{
			if(IsPlayerInAnyVehicle(GetPVarInt(player, "specid"))) 
			{
				new carid = GetPlayerVehicleID(GetPVarInt(player, "specid"));
				PlayerSpectateVehicle(player, carid);
			}
			else PlayerSpectatePlayer(player,GetPVarInt(player, "specid"));
			ShowAdmInfo(player, GetPVarInt(player, "specid"));
		}
	}
	if(key == 20) 
	{
		if(GetPVarInt(player, "SpecBool") == 1) 
		{
			new str[25];
			format(str,sizeof str,"%s", PI[GetPVarInt(player, "specid")][pName]);
			callcmd::checkoff(player,str);
		}
	}
	if(key == 17)
	{
		if(IsPlayerInAnyVehicle(player) && GetPlayerState(player) == PLAYER_STATE_DRIVER) 
		{
			callcmd::engine(player);
		}
	}
	if(key == 75)
	{
		new carid = GetPlayerVehicleID(player);
		for(new b = 0; b < TotalBusiness; b++)
		{
			if(PlayerToPoint(10.0, player, BizInfo[b][data_BUYX],BizInfo[b][data_BUYY], BizInfo[b][data_BUYZ])) 
			{
				if(BizInfo[b][data_TYPE] == 1) 
				{
					if(IsPlayerInAnyVehicle(player) && GetPlayerState(player) == PLAYER_STATE_DRIVER) 
					{
						new buyvalue = 0, car = GetPlayerVehicleID(player);
						if(CarInfo[car][cFuel] >= 50) SCM(player, COLOR_GREY, !"У Вас уже полный бак (50 литров)");
						else 
						{
							if(PI[player][pMoney] != 0 && PI[player][pMoney] >= BizInfo[b][data_CENA])
							{
								buyvalue = PI[player][pMoney]/BizInfo[b][data_CENA];
								if(buyvalue > 50-CarInfo[car][cFuel]) buyvalue = 50-CarInfo[car][cFuel];
							}
							ShowPlayerDialogf(player, 6751, DIALOG_STYLE_INPUT, "{ee3366}Покупка топлива", "Купить", "Отмена", "\
							{FFFFFF}Стоимость бензина: {FFFF99}%d рублей за 1 литр\n\
							{FFFFFF}Для полного бака вам понадобится: {FFFF99}%d литр(-ов) бензина\n\
							{FFFFFF}На вашем счету хватит на: {FFFF99}%d литров бензина\n\
							{FFFFFF}Введите количество литров бензина, которое хотите приобрести:", BizInfo[b][data_CENA], 50-CarInfo[car][cFuel], buyvalue);
						}
					}
					else
					{
						ShowPlayerDialogf(player, 6752, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка канистры", "Купить", "Отмена", "\
						{FFFFFF}Вы желаете купить канисту с бензином?\n\
						Стоимость: {FFFF99}%d рублей за 10 литров", BizInfo[b][data_CENA]*20);
					}
					SetPVarInt(player, "business",b);
				}
			}
		}
		if(carid == PI[player][pLoadVehicleID]) callcmd::key(player);
	}
}
public void:OnPlayerKeyUp(player, key) 
{
	if(key == 77) callcmd::menu(player);
	if(key == 80) 
	{
		if(PI[player][data_PHONE] != 0) callcmd::phone(player);
		else SCM(player, COLOR_GREY, !"У Вас нет телефона, купить его можно в любом Мазагине 24/7");
	}
	if(key == 76) callcmd::lock(player);
	if(key == 113) callcmd::tp(player);
	if(key == 89) if(PI[player][pRequestIDFrom] != -1 || PI[player][pRequestIDFor] != -1) CheckRequest(player);// Y
	if(key == 78 && IsPlayerLogged{player}) if(PI[player][pRequestIDFrom] != -1 || PI[player][pRequestIDFor] != -1) CancelRequest(player); // N
}
CMD:sellgun(playerid, params[]) 
{
	if(!IsPlayerOPG(playerid)) 
		return SCM(playerid, COLOR_GREY, !"Вы не состоите в ОПГ");
 	if(sscanf(params, "udd", params[0], params[1], params[2])) 
		return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givegun [ID игрока] [количество] [цена]");
	if(150 < params[2] > 200 ) 
		return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givegun [ID игрока] [количество] [цена (от 150 до 200 руб)]");
    if(PI[params[0]][pWeaponLock] > 0) 
		return SCM(playerid, COLOR_GREY, !"У данного игрока блокировка оружия");
	if(playerid == params[0]) 
		return SCM(playerid, COLOR_GREY, !"Нельзя передавать самому себе");

	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
	if(!PlayerToPoint(5.0, params[0], x,y,z)) return SCM(playerid, COLOR_GREY, !"Нужно находиться возле игрока");

	if(!IsPlayerLogged{params[0]}) 
		return SCM(playerid, COLOR_GREY, !"Данный игрок не прошел авторизацию");
	if(PI[params[0]][pLevel] < 2) 
		return SCM(playerid, COLOR_GREY, !"У игрока нет 2-го уровня");

	new gun = GetPlayerWeapon(playerid), gunslot = getWeaponIdSlot(gun);

	if(gun == 38 && gun == 34 && gun == 35 && gun == 36 && gun == 37 && gun == 39 && gun == 40) 
		return SCM(playerid, COLOR_GREY, !"Нельзя передать данное оружие");
	if(params[1] < 1) return SCM(playerid, COLOR_GREY, !"Недопустимое значение");
	if(PI[playerid][data_GUN][gunslot] == 0 || gunslot == 0) 
		return SCM(playerid, COLOR_GREY, !"Чтобы передать оружие, нужно взять его в руки");
	if(PI[playerid][data_AMMO][gunslot] < params[1]) 

		return SCM(playerid, COLOR_GREY, !"У Вас нет такого количества патронов");
	SetPVarInt(playerid, "pt", params[1]);
	SetPVarInt(playerid, "cena", params[2]);
	return SendRequestForPlayer(playerid, params[0], 15, params[1]);
}
callback: DialogTimerSellGun(playerid) 
{
	new str[5], str_3[256];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );

	new pt = GetPVarInt(playerid, "pt");
	if(pt != 0)
	{
		new cena = GetPVarInt(playerid, "cena")/GetPVarInt(playerid, "pt");
		new gun = GetPlayerWeapon(GetPVarInt(playerid, "from_player"));

		format(str_3,sizeof(str_3),"\
		Продавец: %s[%d]\n\
		Оружие: %s (%d пт)\n\
		Стоимость: %d руб (%d за 1 пт)\n\n\
		Вы действительно хотите принять это предложение", 
			PI[GetPVarInt(playerid, "from_player")][pName],
			GetPVarInt(playerid, "from_player"),weapon_names[gun],
			GetPVarInt(playerid, "value_1"),
			GetPVarInt(playerid, "cena"),
			cena);

		ShowPlayerDialog(playerid, 8791, DIALOG_STYLE_MSGBOX, !"{ee3366}Покупка оружия", str_3, (pDialogCurrectTime[playerid] < gettime()) ? ("Купить") : (str), "Нет");
		
		if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	}
	else 
	{
		clearDialogTimer(playerid);
		return SendClientMessagef(playerid, COLOR_GREY, "Количество патрон не может быть равно 0");
	}
	return 1;
}
public SV_VOID:OnPlayerActivationKeyPress(SV_UINT:playerid, SV_UINT:keyid)
{
    // Подключаем игрока к локальному потоку как спикера, если нажата клавиша 'B'
    if (keyid == 0x58 && lstream[playerid]) SvAttachSpeakerToStream(lstream[playerid], playerid);
	if(keyid == 0x5A && gstream && PI[playerid][pAdmin] >= 7)
	{
    	SvAttachSpeakerToStream(gstream, playerid);
    }
}

public SV_VOID:OnPlayerActivationKeyRelease(SV_UINT:playerid, SV_UINT:keyid)
{
    // Отключаем игрока от локального потока, если отпущена клавиша 'B'
    if (keyid == 0x58 && lstream[playerid]) SvDetachSpeakerFromStream(lstream[playerid], playerid);
    if(keyid == 0x5A && gstream && PI[playerid][pAdmin] >= 7)
	{
    	SvDetachSpeakerFromStream(gstream, playerid);
    }
}
stock RandomString() 
{
    new string[8];
    format(string, 8, "%c%c%i%c", 65+random(26), 65+random(26), 100+random(899), 65+random(26));
    return string;
}
stock Vzlomsistema(playerid) 
{
    new string[64];
    format(string, 64, "%s", RandomString());
    SetPVarString(playerid, "Взлом фургона", string);
    format(string, 64, "Введите пароль от фургона:\n{FFA000}%s", string);
    ShowPlayerDialog(playerid, 777, 1, "\tВзлом фургона", string, "Вввод", "");
    return 1;
}
stock RandomYgonString() 
{
    new string[8];
    format(string, 8, "%c%c%i%c", 65+random(26), 65+random(26), 100+random(899), 65+random(26));
    return string;
}
stock YgonSystem(playerid) 
{
    new string[64];
    format(string, 64, "%s", RandomString());
    SetPVarString(playerid, "Взлом авто", string);
    format(string, 64, "Введите Пароль от Авто:\n{FFA000}%s", string);
    ShowPlayerDialog(playerid, 778, 1, "\tВзлом авто", string, "Вввод", "");
    return 1;
}
CMD:givecard(playerid, params[])
{
    if(CheckAdmin(playerid, 5)) return 1;
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givemedcard [ID игрока]");
	else if(PI[params[0]][data_MEDCARD]) return SCM(playerid, COLOR_GREY,"У игрока уже имеется мед. карта!");
	PI[params[0]][data_MEDCARD] = 1;
	SCMf(params[0], COLOR_WHITE, "Игровой мастер #%d выдал вам мед. карту. Теперь вы сможете устроится в организацию.", PI[playerid][pAdminNumber]);
	SCMf(playerid, COLOR_GREY, "Вы выдали мед. карту игроку %s", getName(params[0]));
    return 1;
}
CMD:help(playerid)
{
    ShowPlayerDialog(playerid, dialog_COMMAND, DIALOG_STYLE_LIST, "{ee3366}Команды сервера", "\
	1. Общие команды\n\
	2. Недвижимость\n\
	3. Бизнес\n\
	4. Транспорт\n\
	5. Работа\n\
	6. Команды организации\n\
	7. Команды лидера/заместителя", "Выбрать", "Закрыть");
    return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PI[playerid][pAdmin] <= 1)
	{
		SCM(playerid, COLOR_GREEN, "Пункт назначения отмечен у Вас на мини-карте!");
		cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
	}
	return 1;
}
CMD:getcar(playerid, params[])
{
    if(CheckAdmin(playerid, 3)) return 1;
	else if(sscanf(params, "i", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /getcar [Car ID]");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetVehiclePos(params[0], x+2, y+2, z);
	return 1;
}
stock PassiveMode(playerid)
{
    if(PI[playerid][pWanted] > 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Пассивный режим", !"{FFFFFF}Пасивный режим недоступен c розыском", !"Закрыть", !"");
    if(PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 7 || PI[playerid][pMember] == 1 || PI[playerid][pMember] == 2 || PI[playerid][pMember] == 3) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Пасивный режим", !"{FFFFFF}Пасивный режим недоступен в вашей организации!", !"Закрыть", !"");
	switch(PI[playerid][pPassiveMode])
	{
		case 0: ShowPlayerDialog(playerid, Dialog_PassiveMode, DIALOG_STYLE_LIST, !"{ee3366}Пассивный режим", !"{ffffff}Пассивный режим \t\t{ce6c4f} Отключен", !"Выбрать", !"Отмена");
		case 1: ShowPlayerDialog(playerid, Dialog_OffPassiveMode, DIALOG_STYLE_LIST, !"{ee3366}Пассиный режим", !"{ffffff}Пассивный режим \t\t{4eaa77} Включен", !"Выбрать", !"Отмена");
	}
	return 1;
}
stock PassiveModeEnabled(playerid)
{
    return DisableRemoteVehicleCollisions(playerid, 1);
}
stock PassiveModeOff(playerid)
{
    return DisableRemoteVehicleCollisions(playerid, 0);
}
stock PlayerStayInGreenZone(playerid)
{
    SetTimerEx("GreenZoneOff", 20000, false, "d", playerid);
    return 1;
}
forward GreenZoneOff(playerid);
public GreenZoneOff(playerid)
{
    //DisableGreenZoneForPlayer(playerid);
    return 1;
}
stock MaskEnabled(playerid)
{
    return DisableRemoteVehicleCollisions(playerid, true);
}
stock MaskDisable(playerid)
{
    return DisableRemoteVehicleCollisions(playerid, false);
}
stock CheckAdmin(playerid, lvl = 1)
{
	if(PI[playerid][pAdmin] < lvl) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"У Вас нет доступа к этой команде");
	//if(PI[playerid][pVkontakteID] < 100000) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"Чтобы использовать админские команды привяжите страницу ВКонтакте");
	return 0;
}
alias:promocode("promo", "supercode", "code");
CMD:promocode(playerid)
{
	ShowPlayerDialog(playerid, 5050, DIALOG_STYLE_LIST, !"{ee3366}Промокоды", "\
	1. Использовать промокод", "Далее", "Закрыть");
	return 1;
}
callback: MysqlReferalCheck(playerid, referal[])
{
	if(!cache_num_rows()) 
	{ 
		SCM(playerid, COLOR_GREY, !"Игрок не найден.");
		return ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, !"{ee3366}Реферальная система", !"\
			{FFFFFF}Если Вы узнали о нашем сервере от своего друга\n\
			то можете ввести его ник в нижнем окошке\n\n\
			{FFFF99}При достижении 3-го уровня Вы получите призы!", "Далее", "Пропустить");
	}
	SCMf(playerid, COLOR_HINT, "[Информация]: {FFFFFF}Вы указали игрока {6699ff}%s в качестве пригласившего Вас игрока.", referal);
	strmid(PI[playerid][pReferal], referal, 0, strlen(referal), 24);

	SetPVarInt(playerid, "RegStatus", 1);

	if(console_Debbug == 1) printf("[Referal]: Player: %s, [pReferal - %s], [referal - %s], pAdmin - %d", PI[playerid][pName], PI[playerid][pReferal], referal, PI[playerid][pAdmin]);
	return AccountCreate(playerid);
}
callback: MysqlReferal(playerid)
{
	if(!cache_num_rows()) return 1;
	static Referal[24];
	cache_get_row(0, 0, Referal, mysql);
	if(GetString(Referal, "No Referal"))
	{
		new refid = GetNameID(Referal);
		if(IsPlayerConnected(refid))
		{
			SCMf(playerid, COLOR_YELLOW, "Вы указали при регистрации {3366cc}%s{FFFF00} вашим рефералом, за это Вы получили {3366cc}250.000 рублей", PI[refid][pName]);
			SCMf(refid, COLOR_YELLOW, "%s указал Вас при регистрации как пригласившего игрока, за это Вы получили {3366cc}150.000 рублей", PI[playerid][pReferal]);
			GivePlayerMoneyLog(playerid, 250000);
			GivePlayerMoneyLog(refid, 150000);
		}
		else 
		{
			SCMf(playerid, COLOR_YELLOW, "Вы указали при регистрации {3366cc}%s{FFFF00} вашим рефералом, за это Вы получили {3366cc}250.000 рублей", PI[playerid][pReferal]);
			GivePlayerMoneyLog(playerid, 250000);

			mysql_queryf(mysql, "UPDATE `accounts` SET `Money`=`Money`+%d WHERE `Name`='%e'", false, 150000, Referal);
		}
	}
	return 1;
}
callback: MysqlPromoCheck(playerid)
{
    if(!cache_num_rows()) 
	{ 
		SCM(playerid, COLOR_GREY, !"Промо-код не найден, проверьте правильность ввода");
		return PromoCodeUse(playerid);
	}

    new money = cache_get_field_content_int(0, "money");
	new donate_points = cache_get_field_content_int(0, "donate");
	new exp = cache_get_field_content_int(0, "exp");

    ShowPlayerDialogf(playerid, 0, 0, !"{ee3366}Успешно", !"Спасибо", !"", "\
	{FFFFFF}Вы успешно активировали {FFFF99}промо-код\n\n\
	{FFFFFF}Вам выдано: {FFFF99}%d рублей\n\
	{FFFFFF}Вам выдано: {FFFF99}%d Донат-поинтов\n\
	{FFFFFF}Вам выдано: {FFFF99}%d EXP", money, donate_points, exp);

	PI[playerid][pDonate] += donate_points;
	UpdatePlayerDataInt(playerid, "Donate", PI[playerid][pDonate], 35720);
	PI[playerid][data_EXP] += exp;
	UpdatePlayerDataInt(playerid, "exp", PI[playerid][data_EXP], 35722);

	PI[playerid][pPromoCodeUse] = 1;
	UpdatePlayerDataInt(playerid, "exp", PI[playerid][pPromoCodeUse], 35722);

	GivePlayerMoneyLog(playerid, money);
	CheckNextLevel(playerid);
	return 1;
}
stock PromoCodeUse(playerid)
{
	if(PI[playerid][pPromoCodeUse] == 1) return SCM(playerid, COLOR_GREY, !"Вы уже использовали промокод!");
	ShowPlayerDialog(playerid, 5051, DIALOG_STYLE_INPUT, !"{ee3366}Промокоды", !"\
	{3366cc}Где можно получить промокод?\n\
	{FFFFFF}— Самый простой способ получения промокода, это от ютубера.\n\
	{FFFFFF}— Также можно узнать промокод посмотрев топ-промокодов на сервере.\n\n\
	{3366cc}Как создать свой личный промокод?\n\
	{FFFFFF}— Мы создаём промокоды всем нашим официальным ютуберам.\n\
	{FFFFFF}— Создать промокод также можно на 5-том уровне персонажа за 1 миллион.\n\n\
	{3366cc}Введите промокод в поле ниже:", !"Далее", !"Закрыть");
	return 1;
}
/*stock PromoCodeCreate(playerid)
{
	if(PI[playerid][pPromoCode] == 1) return SCM(playerid, COLOR_GREY, !"Вы уже создали промокод!");
	ShowPlayerDialog(playerid, 5052, DIALOG_STYLE_INPUT, !"{ee3366}Создание промокода", "\
	— После создания Вам будет доступна подробная статистика Вашего промокода.\n\
	— После создания название промокода нельзя будет изменить.\n\
	— Вы сможете его удалить при желании.\n\
	— Цена создания 1.000.000 рублей\n\
	{FFFF99}Вы действительно хотите создать промокод? Если да,\n\
	{FFFF99}введите название промокода в поле ниже:", "Далее", "Закрыть");
	return 1;
}
stock TopPromoCodes(playerid)
{
	SCM(playerid, -1, "soon..");
	return 1;
}*/
stock CheckNextLevel(playerid)
{
	new expamount = (PI[playerid][pLevel] + 1)*4;
	if(PI[playerid][data_EXP] >= expamount)
	{
		for(new i = expamount; i <= PI[playerid][data_EXP]; i++)
		{
			PI[playerid][pLevel]++;
			PI[playerid][data_EXP] -= expamount;
			if(PI[playerid][pLevel] == 3)
			{
				static str[85];
			    format(str, sizeof(str), "SELECT `Referal` FROM `accounts` WHERE `Name` = '%s'", getName(playerid));
			    mysql_tquery(mysql, str, "MysqlReferal", "d", false, playerid);
			}
		}
		SetPlayerScore(playerid, PI[playerid][pLevel]);
		SCMf(playerid, COLOR_LIGHTBLUE_2, "Поздравляю! Вы достигли %d-го уровня!", PI[playerid][pLevel]);
		UpdatePlayerDataInt(playerid, "exp", PI[playerid][data_EXP], 35774);
		return 1;
	}
	return 0;
}
stock GetNameID(const name[])
{
	extract name -> new player: PLAYER_ID;
	if(IsPlayerConnected(PLAYER_ID)) return PLAYER_ID;
	return INVALID_PLAYER_ID;
}
alias:referal("ref");
CMD:referal(playerid)
{
	static Referal[24];

	mysql_queryf(mysql, "SELECT * FROM `accounts` WHERE `Name` = '%e' LIMIT 1", true, PI[playerid][pName]);
	if(cache_num_rows() > 0) cache_get_field_content(0, "Referal", Referal, mysql);

	ShowPlayerDialogf(playerid, 5060, DIALOG_STYLE_LIST, !"{ee3366}Реферальная система", "Далее", "Закрыть", "1. Ваш реферал: {FFFF99}%s\n{FFFFFF}2. Посмотреть Ваших рефералов", Referal);
	return 1;
}
stock ShowMySQLReferals(playerid)
{
	new Ref3LVL, Ref1LVL, Level, accounts;
	static Name[24], string2[4096], str2[50], str[70];
	mysql_queryf(mysql, "SELECT `Name`, `Level` FROM `accounts` WHERE `Referal` = '%e' LIMIT 10", true, getName(playerid));
	accounts = cache_get_row_count(mysql);
	if(!accounts) return SCM(playerid, COLOR_GREY, !"Больше вас никто не указывал как реферала");
    format(string2, 36, "{FFFFFF}Имя	{FFFFFF}Уровень\n");
	for(new i; i < accounts; i ++)
	{
		cache_get_row(i, 0, Name, mysql);
		Level = cache_get_row_int(i, 1, mysql);
		if(Level >= 3)
		{
			format(str2, sizeof(str2), "%s\t{FFFF99}%d{FFFFFF}\n", Name, Level);
			Ref3LVL++;
		}
		else
		{
			format(str2, sizeof(str2), "%s\t{CCCCCC}%d{FFFFFF}\n", Name, Level);
			Ref1LVL++;
		}
		strcat(string2, str2);
	}
	format(str, sizeof(str), "{ee3366}Мои рефералы  {FFFFFF}({FFFF99}%d{FFFFFF} / {FF6347}%d{CCCCCC})", Ref3LVL, Ref1LVL);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, str, string2, !"Ок", !"");
	return true;
}
stock AccountCreate(playerid)
{
	if(GetPVarInt(playerid, "RegStatus") == 0) return Kick(playerid);

    if(PI[playerid][pSex] == 1) 
	{
    	switch(random(4)) 
		{
			case 0: PI[playerid][pSkin] = 134;
			case 1: PI[playerid][pSkin] = 135;
			case 2: PI[playerid][pSkin] = 137;
			case 3: PI[playerid][pSkin] = 230;
		}
    }
    else if(PI[playerid][pSex] == 2) 
	{
    	switch(random(3)) 
		{
			case 0: PI[playerid][pSkin] = 196;
			case 1: PI[playerid][pSkin] = 197;
			case 2: PI[playerid][pSkin] = 199;
		}
    }
	SetPlayerSkinAC(playerid, PI[playerid][pSkin]);

    PI[playerid][pDemorgan] = 0;
	PI[playerid][pHospital] = 0;

	new str_q[590];
	mysql_format(mysql, str_q, sizeof(str_q), "\
	INSERT INTO `accounts` (`id`,`Name`, `licb`, `licg`, `Respect`, `CarThiefLvl`, `HealthPoints`, `Money`, `Password`, `Email`, `RegIP`, `Referal`, `sex`, `skin`, `Level`) VALUES ('','%e', '1', '1', '1', '1', '160', '5000', md5('%e'), '%e', '%s', '%s', '%d', '%d', '1')",
		PI[playerid][pName],
		PI[playerid][pPassword],
		PI[playerid][pEmail],
		PI[playerid][pRegIP],
		PI[playerid][pReferal],
		PI[playerid][pSex],
		PI[playerid][pSkin]);
    mysql_function_query(mysql, str_q, false, "", "");

	new query[110];
	mysql_format(mysql, query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%e' AND `Password` = md5('%s')", PI[playerid][pName], PI[playerid][pPassword]);
	mysql_function_query(mysql, query, true, "LoadPlayerData", "d", playerid);

	if(console_Debbug == 1) printf("%s %d (set: m %d, l %d)", getName(playerid), GetPVarInt(playerid,"RegStatus"), PI[playerid][pLevel], PI[playerid][pMoney]);
	SendAdminsMessagef(COLOR_GREY, "[Warning] %s[%d] только что создал аккаунт, получено: (денег: %d) (донат: %d)", PI[playerid][pName], playerid, PI[playerid][pMoney], PI[playerid][pDonate]);

	DeletePVar(playerid,"RegStatus");
	return 1;
}
stock PlayerHideTextDraws(playerid)
{
	if(PI[playerid][data_CLOTHESMENU] == true) 
	{
		TextDrawHideForPlayer(playerid, buy_clothes[0]);
		TextDrawHideForPlayer(playerid, buy_clothes[1]);
		TextDrawHideForPlayer(playerid, buy_clothes[2]);
		TextDrawHideForPlayer(playerid, buy_clothes[3]);
		TextDrawHideForPlayer(playerid, buy_clothes[4]);
		TextDrawHideForPlayer(playerid, buy_clothes[5]);
		PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
 		CancelSelectTextDraw(playerid);
 		PI[playerid][data_CLICKTD] = false;
		PI[playerid][data_CLOTHESMENU] = false;
	}
    if(PI[playerid][pInAutoSalon] == true) 
	{
		PI[playerid][pAutoSalonCar] = INVALID_VEHICLE_ID;
 		DestroyVehicle(PI[playerid][pAutoSalonCar]);
		HideAutoSalonMenu(playerid);
	}
	if(PI[playerid][data_OPENCASINO] == true) 
	{
		casino_stavka[playerid] = 0;
		casino_update[playerid] = 0;
 		HideCasinoGame(playerid);
		KillTimer(casino_timer[playerid]);
	}
}
stock GetSkinOfPlayer(playerid)
{
	new skin, org = PI[playerid][pMember];//, rank = PI[playerid][pRang];
	if(!org) skin = PI[playerid][pSkin];
	else
	{
	    skin = PI[playerid][pOrgSkin];
	}
	return skin;
}
stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
{
    SetSpawnInfo(playerid, 255, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);
    TogglePlayerControllable(playerid, false);
    return true;
}
callback: PlayerSpawn(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new Float:X, Float:Y, Float:Z;
	    GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(playerid, X ,Y, Z);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return 1;
	}
 	SettingSpawn(playerid);
	SpawnPlayer(playerid);
	return 1;

}
public OnPlayerDialogShow(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
    ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
    return 1;
}
stock OtherMapping()
{
	CreateObjectMode();
	CreateObject(1895, 1913.80, 1734.63, 12.48,   0.00, 2.00, 90.00);
	//
	Create3DTextLabel("{FFFF00}Информация\nНажмите 'H' для взаимодействия", -1, -159.0336,629.8907,-49.9206, 20.0, 6);
	Create3DTextLabel("{0049FF}ВАЗ 2106\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.1327,628.4642,-48.3760, 20.0, 6);
	Create3DTextLabel("{0049FF}ВАЗ 2109\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.8143,628.2504,-48.4673, 20.0, 6);
	Create3DTextLabel("{0049FF}BMW E535i\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.2175,628.2169,-48.5641, 20.0, 6);
	Create3DTextLabel("{0049FF}Volskwagen Multivan T6{008000}\nИспользуется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -148.8194,629.9135,-47.9391, 20.0, 6);
	Create3DTextLabel("{0049FF}УАЗ 3303\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.0745,651.6722,-47.8130, 20.0, 6);
	Create3DTextLabel("{0049FF}Tyota Land Cruiser V8\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.5484,652.8447,-48.6778, 20.0, 6);
	Create3DTextLabel("{0049FF}BMW X5\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.3067,653.1296,-48.2929, 20.0, 6);
	Create3DTextLabel("{008000}Выезд\nНажмите 'H'", -1, -165.2955,624.4387,-50.1706, 20.0, 6);
	Create3DTextLabel("{FFFF00}Информация\nНажмите 'H' для взаимодействия", -1, -159.0336,629.8907,-49.9206, 20.0, 5);
	Create3DTextLabel("{0049FF}ВАЗ 2106\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.1327,628.4642,-48.3760, 20.0, 5);
	Create3DTextLabel("{0049FF}ВАЗ 2109\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.8143,628.2504,-48.4673, 20.0, 5);
	Create3DTextLabel("{0049FF}BMW E535i\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.2175,628.2169,-48.5641, 20.0, 5);
	Create3DTextLabel("{0049FF}Volskwagen Multivan T6{008000}\nИспользуется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -148.8194,629.9135,-47.9391, 20.0, 5);
	Create3DTextLabel("{0049FF}УАЗ 3303\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.0745,651.6722,-47.8130, 20.0, 5);
	Create3DTextLabel("{0049FF}Tyota Land Cruiser V8\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.5484,652.8447,-48.6778, 20.0, 5);
	Create3DTextLabel("{0049FF}BMW X5\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.3067,653.1296,-48.2929, 20.0, 5);
	Create3DTextLabel("{008000}Выезд\nНажмите 'H'", -1, -165.2955,624.4387,-50.1706, 20.0, 5);
	Create3DTextLabel("{FFFF00}Информация\nНажмите 'H' для взаимодействия", -1, -159.0336,629.8907,-49.9206, 20.0, 7);
	Create3DTextLabel("{0049FF}ВАЗ 2106\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.1327,628.4642,-48.3760, 20.0, 7);
	Create3DTextLabel("{0049FF}ВАЗ 2109\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.8143,628.2504,-48.4673, 20.0, 7);
	Create3DTextLabel("{0049FF}BMW E535i\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.2175,628.2169,-48.5641, 20.0, 7);
	Create3DTextLabel("{0049FF}Volskwagen Multivan T6{008000}\nИспользуется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -148.8194,629.9135,-47.9391, 20.0, 7);
	Create3DTextLabel("{0049FF}УАЗ 3303\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -120.0745,651.6722,-47.8130, 20.0, 7);
	Create3DTextLabel("{0049FF}Tyota Land Cruiser V8\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -128.5484,652.8447,-48.6778, 20.0, 7);
	Create3DTextLabel("{0049FF}BMW X5\n{008000}Используется: 0 из 2\n{e6e69c}Взять - нажмите 'H' рядом с авто", -1, -136.3067,653.1296,-48.2929, 20.0, 7);
	Create3DTextLabel("{008000}Выезд\nНажмите 'H'", -1, -165.2955,624.4387,-50.1706, 20.0, 7);
	CreateObject(19313, 1892.29, 1709.41, 16.18,   0.00, 0.00, -90.00);
	CreateObject(19313, 1891.77, 1734.28, 16.18,   0.00, 0.00, -90.00);
    CreateObject(966, 1447.30, 2368.45, 12.60,   0.00, 0.00, 270.75);
	///////////////[КАПТЕРА ПИКАПЫ]////////////////////////
	/////конец
    VchSkladGate = CreateObject(1717, 1568.80, 1809.53, 16.25,   0.00, 0.00, 90.00);
	Gate = CreateObject(975, 2121.8877, 1798.9204, 12.8168,   0.00, 0.00, 90.12);
	GatePravo = CreateObject(975, 1872.5520, -2228.8486, 11.9105,   0.00, 0.00, 0.00);
	Create3DTextLabel("{008000}Банк\nБатырево", -1, 1794.7571,2036.6995,15.8694, 20.0, 0);
	vhodbank = CreateDynamicPickup(1318, 23, 1795.1494,2039.2830,15.8942, -1);
	vihodbank = CreateDynamicPickup(1318, 23, 1535.9500,1807.5229,578.6213, -1);
	pick_bank[0] = CreateDynamicPickup(1274, 23, 1534.6836,1820.4808,578.6213, -1);
	pick_bank[1] = CreateDynamicPickup(1274, 23, 1537.8619,1820.2335,578.6213, -1);
	pick_bank[2] = CreateDynamicPickup(1274, 23, 1540.8298,1820.5121,578.6213, -1);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1534.6836,1820.4808,578.6213, 6.5, 92);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1537.8619,1820.2335,578.6213, 6.5, 92);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1540.8298,1820.5121,578.6213, 6.5, 92);
	opgintvihod_offklub = CreateDynamicPickup(1318, 23, -2126.8787,2389.4063,1501.8101, 1);
	opgintvhod_offklub = CreateDynamicPickup(1318, 23,-365.9405,-1213.8025,41.0700, -1);
	opgintvhod_gopota = CreateDynamicPickup(1318, 23, 2215.5474,-2597.8342,21.9600, -1);
	opgintvihod_gopota = CreateDynamicPickup(1318, 23, -2126.8787,2389.4063,1501.8101, 2);
	opgintvhod_skinhead = CreateDynamicPickup(1318, 23, 2315.6936,1767.5208,1.1716, -1);
	opgintvihod_skinhead = CreateDynamicPickup(1318, 23, -2126.8787,2389.4063,1501.8101, 3);
	Create3DTextLabel("{008000}Мэрия птг. Батырево", -1, 1818.2981,2095.7285,17.1631, 20.0, 0);
	VhodMeriya = CreateDynamicPickup(1318, 23, 1818.2981,2095.7285,16.1631, -1);
	VihodMeriya = CreateDynamicPickup(1318, 23, 1158.0463,2576.4780,1112.4800, -1);
	VhodPravoKrisha = CreateDynamicPickup(1318, 23, -34.0207,1813.7625,-35.9791, -1);
	VihodPravoKrisha = CreateDynamicPickup(1318, 23, 1907.2355,-2216.6323,43.2401, 0);
	VhodLiftMeriya = CreateDynamicPickup(1318, 23, 1907.3646,-2229.9827,11.9824, -1);
	VihodLiftMeriya = CreateDynamicPickup(1318, 23, -37.5695,1815.2181,-35.9791, -1);
	VhodKaznaPickup = CreateDynamicPickup(1318, 23, 1147.7219,2565.4226,1112.4800, -1);
	VihodKaznaPickup = CreateDynamicPickup(1318, 23, -1362.6874,1240.6281,2102.4299, -1);
	Kazna_GiveMoney = CreateDynamicPickup(19134, 23, -36.3876,1825.8743,-35.9791, -1);
    Pravo_givegun_pickup = CreateDynamicPickup(1239, 23, -35.1521,1819.1311,-35.9791, -1);
    ArmyShop = CreateDynamicPickup(1239, 23, -1411.6289,395.9333,419.1073, 0);
    vch_givegun_pickup = CreateDynamicPickup(19134, 23, 743.2869,1525.6694,2002.1899, -1);
	MVD_givegun_pickup = CreateDynamicPickup(19134, 23, 126.3125,1895.6376,-31.9697, -1);
	Create3DTextLabel("{008000}/clear\nдля снятия розыска", -1, 1456.4865,1627.6499,697.1956, 5.0, 1);
	Create3DTextLabel("{008000}КПЗ", -1, 2422.6599,-1811.7466,22.4303, 20.0, 0);
	vxoddchmvd0 = CreateDynamicPickup(1318, 23, 2422.6599,-1811.7466,22.4303, 0);
	vxoddchmvd1 = CreateDynamicPickup(1318, 23, 137.7148,1897.4443,-31.9625, -1);
	VhodSportzalPolice = CreateDynamicPickup(1318, 23, 2385.7202,-1796.4390,21.9341, 0);
	VihodSportzalPolice = CreateDynamicPickup(1318, 23, 138.0581,1981.8760,-16.3778, -1);
	Create3DTextLabel("{008000}Нажмите 'ALT'", -1, 2121.3992,1794.0708,12.2849, 20.0, 0);
	Create3DTextLabel("{008000}Полиция", -1,2403.3105,-1843.4712,22.4368, 20.0, 0);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2335.1279,1766.7971,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2335.1255,1762.8182,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2329.4746,1763.0470,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2325.4631,1761.3829,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2330.1829,1769.1815,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2326.0420,1774.8130,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2333.0562,1770.7949,-13.9100, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2332.6768,1754.2649,-10.4741, 20.0, -1);
	Create3DTextLabel("{008000}/dice Для игры", -1, 2325.6680,1754.4149,-10.4741, 20.0, -1);
	VhodUchastokMVD0 = CreateDynamicPickup(1318, 23, 2403.3105,-1843.4712,22.4368, 0);
	VhodUchastokMVD1 = CreateDynamicPickup(1318, 23, 126.4313,1851.9615,-31.9703, -1);
	VhodArmy1 = CreateDynamicPickup(1318, 23, 1919.4459, 2304.0505, 15.5697, -1);
	VhodArmy2 = CreateDynamicPickup(1318, 23, -454.3694,-1489.6445,41.0700, -1);
	palata_vhod = CreateDynamicPickup(1318, 23, -691.4985,1617.8883,1002.0200, -1);
	palata_vihod = CreateDynamicPickup(1318, 23, 1324.4685,2505.1799,1002.1400, -1);
	ordinatorskaya_vhod = CreateDynamicPickup(1318, 23,  -688.8463,1666.1891,1002.0200, -1);
	ordinatorskaya_vihod = CreateDynamicPickup(1318, 23, -2851.9490,2814.9189,1002.1600, -1);
	BCRDEnter_1 = CreateDynamicPickup(1318, 23,  2110.8955,1820.9956,13.3484, -1);
	BCRDExit = CreateDynamicPickup(1318, 23,  -679.4802,1633.7867,1002.0200, -1);
	BCRDExit1 = CreateDynamicPickup(1318, 23,  -679.4778,1630.4673,1002.0200, -1);
	shahtavhod = CreateDynamicPickup(1318, 23,  2784.7847,2711.2119,16.7200, -1);
	shahtavihod= CreateDynamicPickup(1318, 23,  2343.8123,-1457.7288,1137.4415, -1);
	Create3DTextLabel("{008000}Казино", -1, 2320.5139,-1930.3152,22.3337, 10.0, 0);
	kazino_vhod = CreateDynamicPickup(1318, 23, 2320.5139,-1930.3152,22.3337, -1);
	kazino_vihod = CreateDynamicPickup(1318, 23, 2337.2285,1766.9097,-13.9100, -1);
	Create3DTextLabel("{008000}Автошкола", -1, 1843.0927,1451.3744,10.7364, 10.0, 0);
	Create3DTextLabel("{00ff91}Чтобы взять парашу введите\n{ff0026}/par", -1, 1843.0927,1451.3744,10.7364, 10.0, 0);
	PAR_vhod = CreateDynamicPickup(1318, 23, 2126.6987,-1962.8444,20.3229, -1);
	AutoSchool_Enter = CreateDynamicPickup(1318, 23, 1843.0927,1451.3744,10.7364, -1);
	AutoSchool_Exit = CreateDynamicPickup(1318, 23, 2261.1738,2721.2053,1122.4604, -1);
	AutoSchool_Info = CreateDynamicPickup(1239, 23,2277.3806,2711.6648,1122.4604, -1);
	AutoSchool_Test = CreateDynamicPickup(1210, 23, 2275.4622,2708.3694,1122.4604, -1);
	Create3DTextLabel("{008000}Казарма", -1, 1787.7538,1786.4166,17.2422, 20.0, 0);
	VhodArmyKazarmy = CreateDynamicPickup(1318, 23, -2586.6238,311.0948,12.2297, -1);
	VihodArmyKazarmy  = CreateDynamicPickup(1318, 23, 742.7764,1506.8319,2002.1899, -1);
	Create3DTextLabel("{008000}Столовая", -1, 1720.6887,1758.3757,15.3300, 20.0, 0);
	VhodArmyStolovaya = CreateDynamicPickup(1318, 23, -2559.2588,356.1953,12.2297, -1);
	VihodArmyStolovaya = CreateDynamicPickup(1318, 23, -2433.8774,1812.5083,2053.4800, -1);
	ArmyStolovaya = CreateDynamicPickup(1314, 16089, -2430.6829,1801.1373,2053.4800, -1);
	EatPolice = CreateDynamicPickup(16089, 23, 119.2875,1887.0156,-31.0664, -1);
	EatPolice1 = CreateDynamicPickup(16089, 23, 139.4049,1869.3790,-31.9697, -1);
	///пикапы тиров
	vhodtirkavkaz = CreateDynamicPickup(1318, 23, -356.5761,-1180.2509,41.0675, 0);
	vihodtirkavkaz = CreateDynamicPickup(1318, 23, -145.8029,1818.6835,-5.9800, -5);
	vhodtirgopota = CreateDynamicPickup(1318, 23, 2255.5798,-2594.4944,22.1780, 0);
	vihodtirgopota = CreateDynamicPickup(1318, 23, -145.8029,1818.6835,-5.9800, -4);
	vhodtirskinhed = CreateDynamicPickup(1318, 23, 1401.3895,2399.4485,13.4012, 0);
	vihodtirskinhed = CreateDynamicPickup(1318, 23, -145.8029,1818.6835,-5.9800, -3);
	vhodtirvch = CreateDynamicPickup(1318, 23, -2633.2554,312.8313,11.2209, 0);
	vihodtirvch = CreateDynamicPickup(1318, 23, -145.8029,1818.6835,-5.9800, 2);
	vhodtirpravo = CreateDynamicPickup(1318, 23, 1907.2701,-2209.0989,11.7839, 0);
	vihodtirpravo = CreateDynamicPickup(1318, 23, -145.8029,1818.6835,-5.9800, -1);
	//информационные пикапы
	
	//информационный пикап ВЧ
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, -456.9816,-1499.0930,41.0115+1, 20.0, 1, 1);
	VCHinfo = CreateDynamicPickup(1239, 23, -456.9816,-1499.0930,41.0115, -1);
 	//информационный пикап ВЧ-1
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, 1934.0089,1727.4718,15.8244, 20.0, 1, 1);
	VCHinfo1 = CreateDynamicPickup(1239, 23, 1934.0089,1727.4718,15.8244, -1);
	//информационный пикап БЦРБ
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, -688.3610,1634.2631,1002.0200, 20.0, 1, 1);
	CRBinfo = CreateDynamicPickup(1239, 23, -688.3610,1634.2631,1002.0200, -1);
	//информационный пикап Правительства области (около пра-ва)
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, 1920.8109,-2246.5757,11.0240, 20.0, 1, 1);
	Pravoinfo = CreateDynamicPickup(1239, 23, 1920.8109,-2246.5757,11.0240, -1);
	//информационный пикап Правительства области (около мерии)
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, 2172.5773,-2200.8076,21.9914+1, 20.0, 1, 1);
	Pravoinfo1 = CreateDynamicPickup(1239, 23,2172.5773,-2200.8076,21.9914, -1);
	//информационный пикап Министерства Внутренних Дел (Полиция)
	Create3DTextLabel("{FFFF00}Информационный пикап", -1, 125.1833,1860.9231,-31.9775, 20.0, 1, 1);
	MVDinfo = CreateDynamicPickup(1239, 23,125.1833,1860.9231,-31.9775, -1);
	VihodVoenkomat = CreateDynamicPickup(1318, 23, 2491.6680,210.6661,1502.4700, -1);
	Create3DTextLabel("{FFD700}Парковка\n{FFFFFF}Правительство", -1,1874.6547,-2208.8955,11.2510, 20.0, 0);
	VihodMagazNaVh = CreateDynamicPickup(1318, 23, -1412.5814,381.9860,419.1073, 0);
	MagazNaVh = CreateDynamicPickup(1318, 23, -2610.6729,356.4666,12.2297, 0);
	MeriyaGarageVhod = CreateDynamicPickup(1318, 23, 1874.6547,-2208.8955,11.2510, -1);
	MeriyaGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 1);
	Create3DTextLabel("{FFD700}Парковка\n{FFFFFF}Полиция", -1,2441.2083,-1798.4343,21.9369, 20.0, 0);
	MVDGarageVhod = CreateDynamicPickup(1318, 23, 2441.2083,-1798.4343,21.9369, -1);
	MVDGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 2);
	Create3DTextLabel("{FFD700}Въезд", -1,2147.6340,1810.1619,12.2200, 20.0, 0);
	CRBGarageVhod = CreateDynamicPickup(1318, 23, 2143.4570,1809.5634,12.2200, -1);
	CRBGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 3);
	Create3DTextLabel("{FFD700}Въезд", -1,2304.1958,-2285.7551,22.9721, 20.0, 0);
	VchGarageVhod = CreateDynamicPickup(1318, 23, -2757.7261,347.3786,10.9850, -1);
	VchGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 4);
	GopotaGarageVhod = CreateDynamicPickup(1318, 23, 2243.2651,-2587.0442,21.9600, -1);
	GopotaGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 5);
	Create3DTextLabel("{FFD700}Въезд", -1, -2757.7310,351.1184,10.9850, 20.0, 0);

	SkinheadGarageVhod = CreateDynamicPickup(1318, 23, 2327.8706,1782.9962,1.1716, -1);
	SkinheadGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 6);
	Create3DTextLabel("{FFD700}Въезд", -1,-562.5096,-1392.1708,42.1858, 20.0, 0);
	OffClubGarageVhod = CreateDynamicPickup(1318, 23, -360.3912,-1227.4340,41.1000, -1);
	OffClubGarageVihod = CreateDynamicPickup(1318, 23, -168.2390,626.4500,-50.1706, 7);
	army_sklad = CreateDynamicCP(1567.5477,1823.2529,15.6548, 3,  0, 0, -1, 50.0);
	NPC_ALL[0] = CreateActor(149, 1921.8282, 2096.4849, 15.7053,91.9485);
	ApplyActorAnimation(NPC_ALL[0],"SMOKING","M_smklean_loop",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[1] = CreateActor(146, 1920.4588, 2096.3789, 15.7053,269.3558);
	ApplyActorAnimation(NPC_ALL[1],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[2] = CreateActor(2, 1890.2318, 2025.9119, 17.3818, 178.9477);
	ApplyActorAnimation(NPC_ALL[2],"GRAVEYARD", "mrnF_loop",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[3] = CreateActor(137, 1840.4908, 2037.1929, 15.4456, 0);
	ApplyActorAnimation(NPC_ALL[3],"INT_HOUSE", "BED_LOOP_L",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[4] = CreateActor(295, 1822.4370,2086.6152,15.8538,208.6428);
	ApplyActorAnimation(NPC_ALL[4],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[5] = CreateActor(228, 1823.1276,2085.9524,15.8534,38.3961);
	ApplyActorAnimation(NPC_ALL[5],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[6] = CreateActor(187, 1822.3309,2085.7205,15.8538,318.4312);
	ApplyActorAnimation(NPC_ALL[6],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[9] = CreateActor(189, 1540.8746,1822.7574,578.6213,179.6009);
	NPC_ALL[10] = CreateActor(11, 1537.7498,1822.6302,578.6213,179.6007);
	NPC_ALL[11] = CreateActor(262,-2031.0870,-1225.7803,48.1920,264.4656);//нпс фругон #1 Бусаево-Лыткарено
	NPC_ALL[12] = CreateActor(253,-2031.7631,-1229.6356,48.1920,256.7655);
	NPC_ALL[13] = CreateActor(283,-2035.5232,-1228.7413,48.1920,254.2588);
	NPC_ALL[14] = CreateActor(167,-2038.1693,-1228.1062,48.1920,252.1999);
	NPC_ALL[15] = CreateActor(255,-2037.3772,-1224.6672,48.1920,259.2108);
	NPC_ALL[16] = CreateActor(278,-2035.1566,-1224.8599,48.1920,265.3600);
	NPC_ALL[17] = CreateActor(279,2029.7246,-1227.9517,48.1920,260.1121);//нпс фругон #1 Бусаево-Лыткарено
	NPC_ALL[18] = CreateActor(262,1928.1489,-186.3653,4.0924,234.3846);//нпс фругон #2 д.Гарель
	NPC_ALL[19] = CreateActor(253,1927.3708,-188.0556,4.0812,254.4381);
	NPC_ALL[20] = CreateActor(283,1925.2125,-192.4121,4.0501,249.6872);
	NPC_ALL[21] = CreateActor(167,1927.7877,-184.4716,4.0872,248.6858);///нпс фругон #2 д.Гарель
	NPC_ALL[22] = CreateActor(255,-2032.2150,-1225.4321,48.1920,264.1052);///Доп NPC
	NPC_ALL[23] = CreateActor(255,-191.7339,-2582.0386,35.4437,186.7114);///нпс фургон #южка-лытка
	NPC_ALL[24] = CreateActor(262,-196.3042,-2582.1768,35.4437,179.3416);
	NPC_ALL[25] = CreateActor(167,-196.7299,-2578.5076,35.4437,179.2399);
	NPC_ALL[26] = CreateActor(278,-196.4162,-2574.9802,35.4283,182.2729);
	NPC_ALL[27] = CreateActor(279,-192.1500,-2575.0818,35.4288,187.0121);///нпс фургон #южка-лытка
	NPC_ALL[28] = CreateActor(84,-191.8138,-2577.8147,35.4437,187.0121);///нпс фургон #южка-лытка
	NPC_ALL[29] = CreateActor(134, 1799.7273,2506.5293,15.8725,300.6712); // дурак носов
	Create3DTextLabel("{FFFFFF}Деревенский дурачок {ff6633}Носов\n{FFFFFF}Нажмите {ff6633}ALT", -1,1799.7273,2506.5293,15.8725, 9.0, 0);
	//===========================================================================================
	SetActorVirtualWorld(NPC_ALL[9], 92);
	SetActorVirtualWorld(NPC_ALL[10], 92);
	SetActorVirtualWorld(NPC_ALL[11], 92);

	Create3DTextLabel("{008000}Военный", -1, -1411.5762,397.8944,419.1073, 5.0, 0);
	NPC_VCH = CreateActor(167, -1411.5762,397.8944,419.1073,177.4648);
	ApplyActorAnimation(NPC_VCH,"PED","ATM",4.1, 1, 1, 1, 1, 2000);
	Create3DTextLabel("{FFFF00}Дед\nНажмите 'H' для взаимодействия ", -1, 1789.6417,2493.6338,15.9816, 5.0, 0);
	NPC_DED = CreateActor(35, 1789.6417,2493.6338,15.9816,37.6687);
	ApplyActorAnimation(NPC_DED,"PED","ATM",4.1, 1, 1, 1, 1, 2000);
	Create3DTextLabel("{FFFF00}Покупка\nметалла", -1, 2787.8411,2692.3855,16.7200, 20.0, 0);
	metall_buy = CreateDynamicPickup(19134, 23, 2787.8411,2692.3855,16.7200, -1);
	Create3DTextLabel("{FFFF00}Склада\nвеществ", -1, 1894.9059,1186.5181,30.3239, 20.0, 0);
	drugs_buy = CreateDynamicPickup(1279, 23, 1894.9059,1186.5181,30.3239, -1);
	Create3DTextLabel("{FFFF00}Получение\nмедицинской справки", -1, -688.7606,1631.3787,1002.0200+1, 20.0, 1, 1);
	CRBPickCard = CreateDynamicPickup(19134, 23, -688.7606,1631.3787,1002.0200, -1);
	Create3DTextLabel("{FFFF00}Дайвер", -1, 1986.9636,1001.2310,16.3208, 20.0, 0);
	CreateActor(48, 1986.9636,1001.2310,15.3208,142.0948);
	Dalnoboy_pickup = CreateDynamicPickup(1275, 23, -663.7905,-2011.1587,41.7544, -1);
	//
	CreateDynamicObject(123, 744.99, 2383.42, 10.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(2166, 2747.37, -1261.93, 21.59,   0.00, 0.00, 0.00);
	CreateObject(18843, 1734.65, 2293.11, 974.35,   0.00, 0.00, 0.00);
	CreateObject(9211, 1734.93, 2293.89, 922.57,   0.00, 0.00, 90.00);
	CreateObject(10159, 8.72, 5.26, 1000.51,   0.00, 0.00, 0.00);
	CreateObject(10126, 0.00, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10127, 0.00, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10176, 8.83, 15.29, 1021.23,   0.00, 0.00, 0.00);
	CreateObject(10128, 0.01, 0.02, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10131, 0.00, 0.02, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10159, 6.25, -11.43, 1003.21,   0.00, 0.00, 0.00);
	CreateObject(10160, 11.30, -17.57, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10160, 23.75, -16.78, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10159, 8.69, 5.26, 1000.51,   0.00, 0.00, 0.00);
	CreateObject(10159, 19.83, 5.45, 1000.51,   0.00, 0.00, 0.00);
	CreateObject(10159, 8.69, 5.26, 1000.51,   0.00, 0.00, 0.00);
	CreateObject(10171, 1.65, 2.89, 1001.31,   0.00, 0.00, 0.00);
	CreateObject(10149, -4.14, 1.25, 1000.79,   0.00, 0.00, 0.00);
	CreateObject(10179, -6.93, -5.14, 1011.56,   0.00, 0.00, 0.00);
	CreateObject(10151, -18.79, -2.46, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10136, -19.90, -2.46, 1001.74,   0.00, 0.00, 0.00);
	CreateObject(10151, -19.88, -2.40, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10151, -21.02, -2.48, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10151, -22.41, -2.42, 1000.52,   0.00, 0.00, 0.00);
	CreateObject(10142, -23.56, 1.10, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10142, -31.76, 2.14, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10142, -39.16, 2.70, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10173, -31.18, 1.48, 1006.22,   0.00, 0.00, 0.00);
	CreateObject(10158, -40.59, -0.59, 1001.74,   0.00, 0.00, 0.00);
	CreateObject(10158, -40.59, 2.98, 1001.74,   0.00, 0.00, 0.00);
	CreateObject(10150, -39.27, -0.91, 1000.91,   0.00, 0.00, 0.00);
	CreateObject(10151, -35.70, -0.77, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10160, -31.57, -7.95, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10172, 25.77, 5.62, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, 11.75, -3.23, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, 11.52, -1.31, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, 26.51, 4.14, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, -5.89, -2.66, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, -5.66, -4.43, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, -23.52, -0.91, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10172, -22.37, -0.28, 1012.03,   0.00, 0.00, 0.00);
	CreateObject(10131, 0.00, 0.02, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10131, 0.00, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10130, 0.00, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10129, 0.00, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(10154, -36.25, 15.33, 1001.69,   0.00, 0.00, 0.00);
	CreateObject(10155, -33.07, 15.33, 1001.69,   0.00, 0.00, 0.00);
	CreateObject(10167, -34.65, 15.82, 1001.65,   0.00, 0.00, 0.00);
	CreateObject(10151, -35.70, -0.77, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10151, -33.47, -1.04, 1000.86,   0.00, 0.00, 0.00);
	CreateObject(10142, -31.76, 2.14, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10142, -31.76, 2.14, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10142, -32.57, 5.47, 1000.18,   0.00, 0.00, 0.00);
	CreateObject(10132, 2.30, 0.00, 999.90,   0.00, 0.00, 0.00);
	CreateObject(19320, 9.31, -1.65, 1001.04,   0.00, 0.00, 0.00);
	CreateObject(19320, 8.63, -1.38, 1001.08,   0.00, 0.00, 199.20);
	CreateObject(19339, 8.67, -1.41, 1000.56,   0.00, 0.00, -28.92);
	CreateObject(19318, 9.60, -1.22, 1000.83,   -9.66, 0.06, 146.46);
	CreateObject(19320, 14.52, 12.71, 1000.43,   0.00, 0.00, 46.98);
	CreateObject(19320, 14.52, 12.71, 1000.43,   0.00, 0.00, 46.98);
	CreateObject(19320, 13.72, 12.67, 1000.43,   0.00, 0.00, -20.34);
	CreateObject(19352, 14.17, 12.39, 1000.14,   0.00, 0.00, 0.00);
	CreateObject(19279, 27.58, -1.75, 1000.24,   0.00, 0.00, 56.58);
	///старое бцрб
	CreateObject(4995, 1937.16, 2183.61, 18.34,   0.00, 0.00, 0.00);
	////мал гараж
	CreateObject(10276, -143.82, 640.98, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -142.13, 580.57, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -231.43, 579.74, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -225.24, 725.42, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -132.92, 708.68, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -234.34, 647.02, -48.68,   0.00, 0.00, 0.00);
	CreateObject(10276, -317.92, 645.13, -48.68,   0.00, 0.00, 0.00);
	// АвтоРынок
	CreateDynamicObject(2067, 2462.84, -703.44, 11.58,   0.00, 0.00, -90.00);
	CreateDynamicObject(2069, 2462.81, -703.53, 11.58,   0.00, 0.00, -90.00);
	CreateDynamicObject(1965, 2458.84, -727.49, 12.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(1965, 2458.85, -684.76, 13.08,   0.00, 0.00, 90.00);
	CreateDynamicObject(1931, 2470.26, -727.52, 12.75,   90.00, -7.00, 90.00);
	CreateDynamicObject(1931, 2470.26, -727.52, 15.75,   90.00, -7.00, 90.00);
	CreateDynamicObject(1931, 2470.27, -684.77, 12.75,   90.00, -7.00, 90.00);
	CreateDynamicObject(1931, 2470.27, -684.78, 15.74,   90.00, -7.00, 90.00);
	CreateDynamicObject(2591, 2487.95, -822.49, 0.69,   0.00, -1.00, -90.00);
	// FIX провалов в карте
	CreateDynamicObject(9211, 163.13, -1015.10, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, -268.73, -1323.11, 34.65,   0.00, 0.00, -25.80);
	CreateDynamicObject(9211, -272.04, -1328.34, 34.65,   0.00, 0.00, -25.80);
	CreateDynamicObject(9211, -274.54, -1333.03, 34.65,   0.00, 0.00, -25.80);
	CreateDynamicObject(9211, -274.60, -1336.31, 34.65,   0.00, 0.00, 13.38);
	CreateDynamicObject(9211, -654.00, -1936.89, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -658.02, -1944.21, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -661.01, -1950.51, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -664.60, -1958.17, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -669.12, -1965.28, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -665.71, -1951.34, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -667.81, -1947.57, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -672.15, -1945.85, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -676.34, -1943.54, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -683.05, -1940.63, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -678.88, -1935.83, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -673.34, -1936.97, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -668.91, -1937.42, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -663.00, -1937.10, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, -658.78, -1936.70, 34.89,   0.00, 0.00, -29.22);
	CreateDynamicObject(9211, 167.14, -1012.45, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 170.63, -1010.42, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 173.82, -1008.38, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 169.97, -1001.09, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 166.68, -1003.08, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 164.59, -1003.75, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 162.39, -1003.97, 34.84,   0.00, 0.00, 28.92);
	CreateDynamicObject(9211, 159.26, -1005.16, 34.84,   0.00, 0.00, 28.86);
	// допил южного по деревьям
	CreateDynamicObject(2215, 2255.29, -2243.89, 15.10,   0.00, 0.00, -77.00);
	CreateDynamicObject(658, 2253.03, -2206.72, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2268.95, -2198.56, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2274.68, -2217.86, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2255.10, -2190.35, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2277.77, -2173.64, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2296.34, -2183.31, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2309.31, -2173.71, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2315.37, -2191.87, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2294.13, -2172.07, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2274.17, -2189.62, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(658, 2257.38, -2172.85, 19.89,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2216.13, -2138.48, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2216.13, -2138.48, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2216.13, -2138.48, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2181.39, -2137.06, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2143.44, -2137.89, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2095.47, -2138.85, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2049.65, -2138.54, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2011.65, -2138.63, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2218.13, -2161.45, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2214.13, -2184.26, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2204.54, -2201.05, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2214.03, -2220.05, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2188.39, -2223.90, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2132.44, -2217.63, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2204.91, -2237.09, 20.37,   0.00, 0.00, 0.00);
	CreateDynamicObject(4901, 2117.77, -2230.45, 18.34,   0.00, 0.00, 0.00);
	CreateDynamicObject(4901, 2039.59, -2231.11, 16.60,   0.00, -2.00, -1.00);
	CreateDynamicObject(4901, 2133.80, -2268.82, 15.97,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2190.97, -2267.85, 19.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2218.32, -2268.42, 19.92,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2081.72, -2269.95, 17.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(644, 2053.15, -2268.87, 14.56,   0.00, 0.00, 0.00);
	///инфо пикапы (вч)
	CreateDynamicObject(16092, 1934.48, 1728.65, 16.23,   0.00, 0.00, 179.40);
	///инфо пикапы (право)
	CreateDynamicObject(16092, 1921.23, -2245.30, 11.45,   0.00, 0.00, 179.52);
	CreateDynamicObject(16092, 2172.23, -2201.11, 22.21,   0.00, 0.00, -89.58);
	//
	CreateObject(19273, 1570.9753, 1809.1313, 15.8900,   0.00, 0.00, 0.00);
	CreateObject(19273, 1566.2772, 1809.9016, 15.8900,   0.00, 0.00, 180.00);
	Create3DTextLabel("{5eb477}Нажмите\nB", -1, 1570.9753, 1809.1313, 15.8900, 4.3, 0);
	Create3DTextLabel("{5eb477}Нажмите\nB", -1, 1566.2772, 1809.9016, 15.8900, 4.3, 0);
}
stock SaveServer()
{
	new currenttime = GetTickCount();
    foreach(new i: Player) SavePlayerData(i);
    printf("SavePlayer сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
    SaveWarehouse();
    printf("SaveWarehouse сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
 	for(new i; i < LoadedHouse; i++) SaveHouseData(i);
	printf("SaveHouseData сохранился за %i ms", GetTickCount() - currenttime);
	
	currenttime = GetTickCount();
 	for(new i; i < LoadedKV; i++) SaveKVData(i);
	printf("SaveKVData сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
	for(new i ;i < LoadedBiz; i++) SaveBusinessData(i);
	printf("SaveBusinessData сохранился за %i ms", GetTickCount() - currenttime);

	return 1;
}
//
stock PlayerHospital(playerid, skip = 0)
{
	PI[playerid][pHospital] = 1;
	UpdatePlayerDataInt(playerid, "hospital", PI[playerid][pHospital], 35361);
    PI[playerid][pHealthPoints] = 1;
    UpdatePlayerDataInt(playerid, "HealthPoints", 1, 35363);

	if(!skip) PlayerSpawn(playerid);
	return 1;
}
stock IsAVelik(carid) 
{
	new model = GetVehicleModel(carid);
	if(model == 481 || model == 510 || model == 509 || model == 484 || model == 454) return 1;
	return 0;
}
stock IsAPlane(carid) 
{
	new model = GetVehicleModel(carid);
	if(model == 417 || model == 425 || model == 447 || model == 460 || model == 469 || model == 476 || model == 487 || model == 488 || model == 497 || model == 511 || model == 512 || model == 513 || 
		model == 519 || model == 520 || model == 548 || model == 553 || model == 563 || model == 577 || model == 592 || model == 593 || model == 441 || model == 464 || model == 465 || model == 501 || model == 564) return 1;
	return 0;
}
CMD:drugs(playerid, params[])
{
	if(PI[playerid][data_DRUGS] < 1) return SCM(playerid, COLOR_GREY, !"У вас нет наркотиков");

	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /drugs [1-10]");
    if(params[0] <= 0 || params[0] > 10) return SCM(playerid, COLOR_GREY, !"Введите значение от 1 до 10");
    if(PI[playerid][data_DRUGS] < params[0]) return SCM(playerid, COLOR_GREY, !"У Вас недостаточно наркотиков");

	if(GetPVarInt(playerid,"kdhealcapt") > gettime()) return SCMf(playerid, COLOR_GREY, "Вы получили урон в бою, использовать наркотики можно будет через %d", GetPVarInt(playerid,"kdhealcapt")-gettime());
    if(GetPVarInt(playerid,"PlayerCuffed")) return SCM(playerid, COLOR_GREY, !"Вы скованы и не можете двигаться");
    if(GetPVarInt(playerid,"Counting_drugs") > gettime()) return SCM(playerid, COLOR_GREY, !"Команду можно использовать раз в 10 секунд");
    
	new Float:Health;
    GetPlayerHealth(playerid,Health);
	Health += 3*params[0];
	if(Health > 176) Health = 176;
    SetPlayerHealthAC(playerid,Health);

    if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	
	PI[playerid][data_DRUGS] -= params[0];
	PI[playerid][data_USEDRUGS] += params[0];

	SetPlayerDrunkLevel(playerid, 3900);

	new str_2[61+25], hptext[25];
	format(str_2,sizeof(str_2)," %s принимает дозу наркотиков", getName(playerid));
	ProxDetector(30,playerid,str_2,0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);

	SetPVarInt(playerid,"Counting_drugs",gettime() + 10);

	format(hptext, sizeof hptext, "+%d HP", params[0]);
	cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вещества!"), CEFSTR("0e3e2d"), CEFSTR(hptext));

	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	return 1;
}
CMD:sethp(playerid, params[])
{
 	if(CheckAdmin(playerid, 1)) return 0;
    extract params -> new player:id, Float:hp; else return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /sethp [id] [ammount]");
	if(hp < 0.0) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /sethp [id] hp > 0");
    if(hp > 1000.0) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /sethp [id] hp < 1000");
    if(id == INVALID_PLAYER_ID) return 0;
	SetPlayerHealthAC(id, hp);
	if(PI[id][pHospital] != 0) PI[id][pHospital] = 0;
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал игроку %s[%d] %.0f ХП", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(id), id, hp);
	return 1;
}
alias:sethp("hp");
stock ClearChatForPlayer(playerid)
{
	for(new i; i < 20; i ++) SCM(playerid, -1, !" ");
	return 1;
}
CMD:givemoney(playerid, params[]) 
{
    if(CheckAdmin(playerid, 8)) return 1;
    if(GetPVarInt(playerid,"givemoney") > gettime()) return SCM(playerid, COLOR_GREY,"Команду можно использовать раз в 1 минуту");
	if(sscanf(params,"ud",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givemoney [id] [ammount]");
    if(!IsPlayerConnected(params[0])) return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[1] > 5000000)return  SCM(playerid, COLOR_GREY, !"Можно выдать только от 1 до 5000000 руб");
    SetPVarInt(playerid,"givemoney",gettime() + 59);
	GivePlayerMoneyLog(params[0], params[1]);
	SCMf(params[0], COLOR_YELLOW, "Игровой мастер #%d выдал Вам %d рублей", PI[playerid][pAdminNumber], params[1]);
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал игроку %s[%d] %d рублей", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(params[0]), params[0], params[1]);
	return 1;
}
cmd:givemoneyall(playerid, params[]) 
{
    if(CheckAdmin(playerid, 8)) return 0;
    if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givemoneyall [ammount]");
	if(params[0] > 500000)return  SCM(playerid, COLOR_GREY, !"Можно выдать только от 1 до 500000 руб");
	for(new i = 0; i < MAX_PLAYERS; i++) 
	{
		if(!IsPlayerConnected(i)) continue;
		GivePlayerMoneyLog(i, params[0]);
		SCMf(i, COLOR_YELLOW, "Игровой мастер #%d выдал Вам %d рублей", PI[playerid][pAdminNumber], params[0]);
   	}
	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал всем игрокам %d рублей", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, params[0]);
	return 1;
}
CMD:givedonate(playerid,params[]) 
{
    if(CheckAdmin(playerid, 8)) return 0;
    if(GetPVarInt(playerid,"givedonate") > gettime()) return SCM(playerid, COLOR_GREY, !"Команду можно использовать раз в 1 минуту");
	if(sscanf(params,"ud",params[0],params[1])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /givedonate [id] [ammount]");
    if(!IsPlayerConnected(params[0]))return  SCM(playerid, COLOR_GREY, !"Игрок не в сети");
	if(!IsPlayerLogged{params[0]})return  SCM(playerid, COLOR_GREY, !"Игрок не авторизован");
	if(params[1] > 5000)return  SCM(playerid, COLOR_GREY, !"Можно выдать только от 1 до 5000 руб");

    SetPVarInt(playerid,"givedonate",gettime() + 59);

	PI[params[0]][pDonate] += params[1];
	UpdatePlayerDataInt(params[0], "Donate", PI[params[0]][pDonate],26447);

	SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] выдал игроку %s[%d] %d донат-поинтов", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], getName(playerid), playerid, getName(params[0]), params[0], params[1]);
	return SCMf(params[0], -1, "Игровой мастер #%d выдал Вам %d донат-поинтов", PI[playerid][pAdminNumber], params[0], params[1]);
}
CMD:fix(playerid, params[]) 
{
	new vehicle = GetNearestVehicle(playerid);
	if(vehicle) 
	{
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не должны находиться в транспорте");
		if(PI[playerid][data_FIXCOMPL] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет ремонтных комплектов.");
	    PI[playerid][data_FIXCOMPL]--;
	    SCMf(playerid, 0x69b867FF, "Для починки был использован Ремотный набор #1 (Общий) (осталось: %d шт)", PI[playerid][data_FIXCOMPL]);
		if(vehicle) RepairVehicle(vehicle);
		else SCM(playerid, COLOR_GREY, !"Рядом с Вами нет транспорта");
	}
	else SCM(playerid, COLOR_GREY, !"Рядом с Вами нет транспорта");
	return 1;
}
CMD:fuel(playerid, params[]) 
{
    if(PI[playerid][pCanisters] == 0) return SCM(playerid, COLOR_GREY, !"У Вас нет канистры. Купить ее можно на любом АЗС.");
	new carid = GetPlayerVehicleID(playerid);
	if(carid == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_GREY, !"Нужно находиться в автомобиле");
	if(CarInfo[carid][cFuel] == 50) return SCM(playerid, COLOR_GREY, !"Бак автомобиля полон");
	if(CarInfo[carid][cFuel] < 50 && CarInfo[carid][cFuel] >= 40) CarInfo[carid][cFuel] = 50;
	else CarInfo[carid][cFuel] += 10;
	SCM(playerid, 0x69b867FF, !"Вы заправили автомобиль.");
	return PI[playerid][pCanisters] = 0;
}
CMD:tester(playerid)
{
	if(CheckAdmin(playerid, 8)) return 0;
	
	if(PI[playerid][pTester] == 0) 
	{
		SCM(playerid, COLOR_HINT, !"[Режим тестера] {FFFFFF}Вы включили режим тестера.");
		PI[playerid][pTester] = 1;
	}
	else 
	{
		SCM(playerid, COLOR_HINT, !"[Режим тестера] {FFFFFF}Вы выключили режим тестера.");
		PI[playerid][pTester] = 0;
	}
	return 1;
}
CMD:checkoff(playerid,params[]) 
{
    if(CheckAdmin(playerid, 5)) return 0;
    if(sscanf(params,"s[24]",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /checkoff [имя]");
	new str_q[144];
 	mysql_format(mysql,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `Name` = '%e'",params[0]);
 	mysql_function_query(mysql, str_q, true, "CheckPlayerOffline", "i", playerid);
   	return 1;
}
CMD:check(playerid,params[]) 
{
    if(CheckAdmin(playerid, 3)) return 0;
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /check [ID]");
	ShowStats(params[0], playerid);
   	return 1;
}
callback: CheckPlayerOffline(playerid) 
{
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) 
	{
        new Name[24], LoginIP[16], RegIP[16], Referal[24], Email[75], RegisterDate[35], LoginDate[35];
		new Donate, ID, JailTime, DemorganTime, MuteTime, VMuteTime, AdminLevel, Level, Skin, SkinMember;
        cache_get_field_content(0, "Name", Name, mysql);
		cache_get_field_content(0, "Referal", Referal, mysql);
		cache_get_field_content(0, "Email", Email, mysql);
		cache_get_field_content(0, "LoginIP", LoginIP, mysql);
		cache_get_field_content(0, "RegIP", RegIP, mysql);
		cache_get_field_content(0, "RegisterDate", RegisterDate, mysql);
		cache_get_field_content(0, "LoginDate", LoginDate, mysql);

		cache_get_field_content(0, "Donate", temp), Donate = strval (temp);
		cache_get_field_content(0, "id", temp), ID = strval (temp);
		cache_get_field_content(0, "jailtime", temp), JailTime = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), DemorganTime = strval (temp);
		cache_get_field_content(0, "mutetime", temp), MuteTime = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), VMuteTime = strval (temp);
		cache_get_field_content(0, "Admin", temp), AdminLevel = strval (temp);
		cache_get_field_content(0, "Level", temp), Level = strval (temp);
		cache_get_field_content(0, "skin", temp), Skin = strval (temp);
		cache_get_field_content(0, "skinm", temp), SkinMember = strval (temp);

		if(AdminLevel == 8) return SCM(playerid, COLOR_GREY, !"Вы не можете просмотреть информацию об этом аккаунте");
		ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Check Offline", "Ок", "", "\
																				\t\t\tDonate-Points: %d (Account ID: %d)\n\n\
																				{3366cc}Main Information\n\
																				{FFFFFF}NickName: \t\t{FFFF99}%s\n\
																				{FFFFFF}Referal: \t\t{FFFF99}%s\n\
																				{FFFFFF}RegIP: \t\t\t{FFFF99}%s\n\
																				{FFFFFF}LoginIP: \t\t{FFFF99}%s\n\
																				{FFFFFF}Email: \t\t\t{FFFF99}%s\n\n\
																				{3366cc}Other Information\n\
																				{FFFFFF}RegisterDate: \t\t{FFFF99}%s\n\
																				{FFFFFF}LoginDate: \t\t{FFFF99}%s\n\
																				{FFFFFF}DemorganTime: \t{FFFF99}%d sek\n\
																				{FFFFFF}JailTime: \t\t{FFFF99}%d sek\n\
																				{FFFFFF}MuteTime: \t\t{FFFF99}%d sek\n\
																				{FFFFFF}VMuteTime: \t\t{FFFF99}%d sek\n\
																				{FFFFFF}Admin Level: \t\t{FFFF99}%d lvl\n\
																				{FFFFFF}Level: \t\t\t{FFFF99}%d\n\
																				{FFFFFF}Skin: \t\t\t{FFFF99}%d\n\
																				{FFFFFF}Skin Member: \t\t{FFFF99}%d", 
																				Donate, ID, Name, Referal, RegIP, LoginIP, Email, RegisterDate, LoginDate,
																				DemorganTime, JailTime, MuteTime, VMuteTime, AdminLevel, Level, Skin, SkinMember);

		SendAdminsMessagef(COLOR_ADMINCHAT, "[%s #%d] %s[%d] просматривает информацию аккаунта %s", AdminName[PI[playerid][pAdmin]], PI[playerid][pAdminNumber], PI[playerid][pName], playerid, Name);
	}
    else SCM(playerid, COLOR_GREY, !"Аккаунт не найден в базе данных");
    return 1;
}
CMD:park(playerid)
{
	new carid = GetPlayerVehicleID(playerid);

	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, !"Вы должны быть за рулём cвоего авто!");
	if(carid != PI[playerid][pLoadVehicleID]) return SCM(playerid, COLOR_GREY, !"Это не ваша машина!");
	if(!IsPlayerGreenZone(playerid)) return SendClientMessage(playerid, COLOR_GREY, !"Нельзя припарковать личный транспорт в Зеленой Зона");

	new Float: car_x, Float: car_y, Float: car_z;
	GetVehiclePos(carid, car_x, car_y, car_z);

	CarInfo[carid][cPos_X] = car_x;
	CarInfo[carid][cPos_Y] = car_y;
	CarInfo[carid][cPos_Z] = car_z + 0.8;
	GetVehicleZAngle(carid, CarInfo[carid][cPos_A]);
	
	CarInfo[carid][cNoPark] = 0;

	SaveOwnableCar(carid);

	SendClientMessage(playerid, 0x0088ffFF, !"Транспорт был припаркован, теперь при его доставке он будет появляться здесь");
	return 1;
}
stock SaveOwnableCar(number)
{
    mysql_queryf(mysql, "UPDATE `ownable` SET \
	`Model` = '%d', `Key` = '%d', `Pos_X` = '%.4f', `Pos_Y` = '%.4f', `Pos_Z` = '%.4f', `Pos_A` = '%.4f',`Color_1` = '%d', \
	`Color_2` = '%d', `Owner` = '%e', `Cost` = '%d', `Lock` = '%d', `Fuel` = '%d', `NoPark` = '%i' WHERE `ID` = '%i'", false,\
   	CarInfo[number][cModel],\
	CarInfo[number][cKey],\
	CarInfo[number][cPos_X],\
	CarInfo[number][cPos_Y],\
	CarInfo[number][cPos_Z],\
	CarInfo[number][cPos_A],\
	CarInfo[number][cColor_1],\
	CarInfo[number][cColor_2],\
	CarInfo[number][cOwner],\
	CarInfo[number][cCost],\
	CarInfo[number][cLock],\
	CarInfo[number][cFuel],\
	CarInfo[number][cNoPark],\
	CarInfo[number][cID]);
    return 1;
}
alias:carpass("cp", "passcar");
CMD:carpass(playerid,params[]) 
{
	if(PI[playerid][pLoadVehicleID] == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет загруженого транспорта");

	extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /carpass [ID игрока]");

	if(target == INVALID_PLAYER_ID) return 0;

    if(!ProxDetectorS(5.0, playerid, target)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");

	new str_1[29 + MAX_PLAYER_NAME*2];
    format(str_1, sizeof(str_1), "%s показывает тех. паспорт %s", getName(playerid), getName(target));
	ProxDetector(25.0, playerid, str_1, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF);

	CarPass(playerid, target);

	return 1;
}
stock CarPass(ownerid, forplaeyer) 
{
 	if(PI[ownerid][pLoadVehicleID] == INVALID_VEHICLE_ID) return SCM(ownerid, COLOR_GREY, !"У Вас нет загруженого транспорта");

	new colorCode[7];
	new str_3[256*2], carid = GetVehicleModel(PI[ownerid][pLoadVehicleID]);

	for(new i = 0; i < sizeof(colorVeh); i++) 
	{
		if(colorVeh[i][colorCar] == CarInfo[PI[ownerid][pLoadVehicleID]][cColor_1]) 
		{
			colorCode = colorVeh[i][hexColor];
		}
	}

	for(new i = 0; i < sizeof(DealershipCars); i++) 
	{
		if(DealershipCars[i][asModel] == carid) 
		{
			format(str_3,sizeof(str_3),"\
			{FFFFFF}Название: \t\t\t{ee3366}%s (#%d)\n\
			{FFFFFF}Владелец: \t\t\t{FFFF99}%s\n\
			{FFFFFF}Номер: \t\t\t{FFFF99}----\n\
			{FFFFFF}Тип: \t\t\t\t%s\n\
			{FFFFFF}Пробег: \t\t\t{FFFF99}0000000 км\n\
			{FFFFFF}Вместимость бака: \t\t{FFFF99}50.0 л.\n\
			{FFFFFF}Государственная стоимость: \t{FFFF99}%d руб\n\
			{FFFFFF}Цвет кузова: \t\t\t{FFFF99}{%s}|||",
				VehicleNames[carid-400],
				CarInfo[PI[ownerid][pLoadVehicleID]][cID],
				getName(ownerid),
				CarInfo[PI[ownerid][pLoadVehicleID]][cPremium] ? ("{FFFF99}Премиум{FFFFFF}") : ("Обычный"),
				DealershipCars[i][asDonate]*3000,
				colorCode);

			return ShowPlayerDialog(forplaeyer, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Документы", str_3, "Закрыть", "");
		}
	}
	return 1;
}
stock ProxDetectorS(Float:radi, playerid, targetid, spec = 0)
{
    new Float:p[3];
    if(!IsPlayerConnected(playerid)) return 0;
    if(!IsPlayerConnected(targetid)) return 0;
    if(!spec)
    {
	    if(GetPlayerState(playerid) == 9) return 0;
	    if(GetPlayerState(targetid) == 9) return 0;
    }
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return 0;
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2])) return 0;
	return 1;
}
CMD:key(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, !"Вы должны быть за рулём cвоего авто!");
	if(carid != PI[playerid][pLoadVehicleID]) return SCM(playerid, COLOR_GREY, !"Это не ваша машина!");

	if(CarInfo[carid][cKey] == 1)
	{
		new str_1[29 + MAX_PLAYER_NAME];
		format(str_1, sizeof(str_1), "%s вытянул ключ из транспорта", getName(playerid));
		ProxDetector(25.0, playerid, str_1, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF);

		CarInfo[carid][cKey] = 0;

		cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(0));
		cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));
		GetVehicleParamsEx(PI[playerid][pLoadVehicleID], engine,lights_text,alarm,doors_text,bonnet,boot,objective);
		SetVehicleParamsEx(PI[playerid][pLoadVehicleID], false,lights_text,alarm,doors_text,bonnet,boot,objective);

		cef_emit_event(playerid, "show-notify", CEFINT(6), CEFSTR("Вы вытянули ключ из транспорта"), CEFSTR("c13537"));
	}
	else 
	{
		new str_1[29 + MAX_PLAYER_NAME];
		format(str_1, sizeof(str_1), "%s вставил ключ в транспорт", getName(playerid));
		ProxDetector(25.0, playerid, str_1, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF, 0xC2A2DAFF);

		CarInfo[carid][cKey] = 1;
		cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(1));
		cef_emit_event(playerid, "show-notify", CEFINT(5), CEFSTR("Вы вставили ключ в транспорт"));
	}
	return SaveOwnableCar(carid);
}
CMD:engine(playerid)
{
	new carid = GetPlayerVehicleID(playerid);

	if(IsAVelik(carid)) return 0;

	new Float:health;
	GetVehicleHealth(carid, health);
	if(health <= 351) return cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Двигатель сломан"));

	if(CarInfo[carid][cID] != 0 && CarInfo[carid][cKey] == 0) return SCM(playerid, COLOR_LIGHTGREY, !"Ключ зажигания не вставлен.");
	if(CarInfo[carid][cFuel] <= 0) return SCM(playerid, COLOR_LIGHTGREY, !"В машине нет топлива, купите канистру в ближайшей АЗС");

	switch(CarInfo[carid][cEngineStatus]) 
	{
		case 0: 
		{
			cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(1));
			cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(1));
			GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
			SetVehicleParamsEx(carid,true,lights_text,alarm,doors_text,bonnet,boot,objective);
			CarInfo[carid][cEngineStatus] = 1;
		}
		case 1: 
		{
			cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));
			cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(0));
			GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
			SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
			CarInfo[carid][cEngineStatus] = 0;
		}
	}
	UpdateSpeedometer(playerid);
	return 1;
}
//
alias:cars("car", "v", "mycars");
CMD:cars(playerid)
{
	if(PI[playerid][pLoadVehicleID] == INVALID_VEHICLE_ID) 
	{			
		new sql[80];
		format(sql, sizeof sql, "SELECT * FROM `ownable` WHERE `Owner` = '%s'", getName(playerid));
		mysql_tquery(mysql, sql, "LoadOwnableCars", "i", playerid);
	}
	else 
	{
		ShowPlayerDialog(playerid, 401, DIALOG_STYLE_LIST, "{ee3366}Личный транспорт", "\
		1. Паспорт транспортного средства\n\
		2. Руководство по эксплуатации\n\
		3. Открыть транспорт\n\
		4. Вытащить ключи\n\
		5. Управление капотом / багажником\n\
		6. Отбуксировать транспорт\n\
		7. Поставить GPS метку на мини-карте\n\
		8. Припарковать транспорт\n\
		9. Продать транспорт\n\
		{FFFF99}10. Выгрузить транспорт", "Далее", "Закрыть");
	}
	return 1;
}
callback: LoadOwnableCars(playerid)
{
	new rows;
	rows = cache_num_rows();

	if(!rows) return SendClientMessage(playerid, COLOR_GREY, !"У вас нет личного транспорта, Вы можете преобрести его в Автосалоне");

	else 
	{
		new str_1[1048+144*2], str_2[1048+144*2], str_3[1048+256*3];

		new ID, NoPark, Model_ID, Premium, cars, cars_np, Temp, NoAccess;

		static Package[90*2]; Package[0] = EOS;
		static Status[90*2]; Status[0] = EOS;
		static Access[130]; Access[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{

			ID = cache_get_field_content_int(i, "ID");
			Model_ID = cache_get_field_content_int(i, "Model");
			NoPark = cache_get_field_content_int(i, "NoPark");
			Premium = cache_get_field_content_int(i, "Premium");
			Temp = cache_get_field_content_int(i, "Temp");

			if(Temp != -1)
			{
				SendClientMessagef(playerid, COLOR_HINT, "[Подсказка]: {FFFFFF}У Вас есть временная машина %s.", VehicleNames[Model_ID-400]);
				if(Temp <= gettime()) 
				{
					SendClientMessagef(playerid, COLOR_LIGHTORANGE, "[!!!] {FFFF99}Ваш временный автомобиль %s был удален.", VehicleNames[Model_ID-400]);
					SendAdminsMessagef(COLOR_GREY, "<TempCar> Игроку %s[%d] был удалён временный автомобиль %s.", getName(playerid), VehicleNames[Model_ID-400]);
					DeleteOwnable(ID);
				}
			}

			if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) NoAccess = 1;
							

			ShowCar[playerid][cars] = ID;

			if(NoPark == 1) Package = "Автосалон";
			else Package = "Припаркован";

			if(Premium == 1) 
			{
				Status = "{FFFF99}Премиум{FFFFFF}";
				Access = "Да";
			}
			else 
			{
				Status = "Обычный";
				if(NoAccess == 1 || cars_np > 2) 
				{
					Access = "Нет";
					AccessCar[playerid][cars] = 1;
				}
				else Access = "Да";
			}
			

			format(str_1, sizeof(str_1), "{FFFFFF}%s\t%s\t%s\t%s\n", VehicleNames[Model_ID-400], Package, Status, Access);
			strcat(str_2, str_1);

			cars ++; 
			cars_np++;
		}
		format(str_3, sizeof(str_3), "Название\tМестоположения\tТип\tДоступ\n%s", str_2);

		if(!cars) return SCM(playerid, COLOR_LIGHTGREY, !"У вас нет личного транспорта, Вы можете преобрести его в Автосалоне");
		return ShowPlayerDialog(playerid, 398, DIALOG_STYLE_TABLIST_HEADERS, !"{ee3366}Список личного транспорта", str_3, !"Далее", !"Закрыть");
	}
}
stock ClearVehicleData(number)
{
	CarInfo[number][cID] = 0;
	CarInfo[number][cModel] = 0;
	CarInfo[number][cColor_1] = 0;
	CarInfo[number][cColor_2] = 0;
	CarInfo[number][cLock] = 0;
	CarInfo[number][cCost] = 0;
	CarInfo[number][cNoPark] = 1;
	CarInfo[number][cFuel] = 0;
	CarInfo[number][cPremium] = 0;
	CarInfo[number][cTemp] = -1;
	CarInfo[number][cKey] = 0;

	CarInfo[number][cOwner] = EOS;
}
CMD:sellcar(playerid) 
{
	if(PI[playerid][pLoadVehicleID] == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_GREY, !"У Вас нет загруженно машины для продажи");
	if(CarInfo[PI[playerid][pLoadVehicleID]][cTemp] != -1) return SCM(playerid, COLOR_GREY, !"Вы не можете продать временный автомобиль");

	ShowPlayerDialog(playerid, 9228, DIALOG_STYLE_LIST, "{ee3366}Продажа личного трансопрта", "1. Продать транспорт государству\n2. Продать транспорт другому игроку", "Выбрать", "Отмена");
	return 1;
}
stock SetPlayerOwnable(playerid, model, cost, fuel, color_1, color_2, premium)
{
	new str_q[256];
	mysql_format(mysql, str_q, sizeof(str_q), "\
	INSERT INTO `ownable` (`ID`, `Owner`, `Model`, `Cost`, `Fuel`, `Color_1`, `Color_2`, `Premium`, `Temp`) VALUES ('', '%e', '%d', '%d', '%d', '%d', '%d', '%d', '-1')",
					PI[playerid][pName],
					model,
					cost,
					fuel,
					color_1,
					color_2,
					premium);
    mysql_function_query(mysql, str_q, false, "", "");
	return 1;
}
stock GivePlayerOwnable(playerid, model, cost, fuel, color_1, color_2, premium, temp = -1)
{
	new str_q[256];
	mysql_format(mysql, str_q, sizeof(str_q), "\
	INSERT INTO `ownable` (`ID`, `Owner`, `Model`, `Cost`, `Fuel`, `Color_1`, `Color_2`, `Premium`, `Temp`) VALUES ('', '%e', '%d', '%d', '%d', '%d', '%d', '%d', '%d')",
					PI[playerid][pName],
					model,
					cost,
					fuel,
					color_1,
					color_2,
					premium,
					gettime()+temp*3600);
    mysql_function_query(mysql, str_q, false, "", "");
	return 1;
}
stock DeleteOwnable(id)
{
	new str_q[256];
	mysql_format(mysql, str_q, sizeof(str_q), "DELETE FROM `ownable` WHERE `ID` = '%d'", id);
    mysql_function_query(mysql, str_q, false, "", "");
	return 1;
}
stock CreatePunishment(playerid, player, type, reason[])
{
	new str_q[512];
	mysql_format(mysql,str_q, sizeof(str_q), "INSERT INTO `punishment` ( `name`, `type`, `admin`, `reason`) VALUES ( '%s', '2', '%d', '%s')", getName(player), type, getName(playerid), reason);
	mysql_function_query(mysql, str_q, false, "", "");
}
stock ShowSellCar(playerid)
{
	if(CarInfo[PI[playerid][pLoadVehicleID]][cPremium] == 1) 
	{
		ShowPlayerDialogf(playerid, 9226, DIALOG_STYLE_INPUT, !"{ee3366}Продажа транспорта игроку", !"Продать", !"Закрыть",\
		"{FFFFFF}Введите ID игрока и стоимость через запятую.\n\
		{FFFF99}Например: 150, 100000\n\n\
		{FFFFFF}Государственная стоимость: {3366cc}%d руб\n\
		{FFFFFF}Доступная стоимость продали: {3366cc}от %d до %d руб\n\n\
		{696969}Обратите внимание: при продаже премиум-трансопрта покупатель\n\
		выплачивает обязательный единоразовый налог государству.\n\n\
		{FFFFFF}На Ваш транспорт он составит {3366cc}20%%{FFFFFF} от гос. стоимости транспорта.\n\
		{FFFFFF}Помимо стоимоти покупки, игрок дополнительно заплатит {3366cc}%d руб", 
		CarInfo[PI[playerid][pLoadVehicleID]][cCost], // Госска
		CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*15, // От
		CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*90+CarInfo[PI[playerid][pLoadVehicleID]][cCost], // До
		CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*20); // Налог 20%
	}
	else 
	{
		ShowPlayerDialogf(playerid, 9226, DIALOG_STYLE_INPUT, !"{ee3366}Продажа транспорта игроку", !"Продать", !"Закрыть",\
		"{FFFFFF}Введите ID игрока и стоимость через запятую.\n\
		{FFFF99}Например: 150, 100000\n\n\
		{FFFFFF}Государственная стоимость: {3366cc}%d руб\n\
		{FFFFFF}Доступная стоимость продали: {3366cc}от %d до %d руб", 
		CarInfo[PI[playerid][pLoadVehicleID]][cCost], // Госска
		CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*15, // От
		(CarInfo[PI[playerid][pLoadVehicleID]][cCost]/100*90)+CarInfo[PI[playerid][pLoadVehicleID]][cCost]); // До
	}
	return 1;
}
CMD:id(playerid, params[]) 
{
    if(sscanf(params, "s[24]", params[0])) return SCM(playerid, COLOR_LIGHTGREY, !"Используйте: /id [Имя игрока или часть имени / ID игрока]");

	new count;

    for(new i = 0; i < MAX_PLAYERS; i++) 
	{
        if(!IsPlayerConnected(i)) continue;
        if(strfind(PI[i][pName], params[0], true) != -1) 
		{
        	SCMf(playerid, -1, "%s[%d]",PI[i][pName], i);
        	count++;
			if(count == 10) return SCM(playerid, COLOR_GREY, !"Первые 10 игроков с похожим ником");
        }
    }
    if(count == 0) return SCM(playerid, COLOR_GREY, !"Совпадений не найдено");
    return 1;
}
CMD:gift(playerid)
{
	if(PI[playerid][pCarGift] == 1) return SCM(playerid, COLOR_GREY, !"Вы уже получали временный автомобиль");
	
	new const RadnomGift[4] = {541, 540, 558, 559};
	new gift_car = RandomEX(1, 4);

	GivePlayerOwnable(playerid, RadnomGift[gift_car], 0, 50, 1, 1, 1, 336);

	PI[playerid][pCarGift] = 1;
	UpdatePlayerDataInt(playerid, "CarGift", PI[playerid][pCarGift], 35680);

	SCMf(playerid, COLOR_YELLOW, "Вы получили автомобиль {3366cc}'%s'{FFFF33} на 14 дней", VehicleNames[RadnomGift[gift_car]-400]);
	return SendClientMessageToAllf(COLOR_HINT, "[Подарок]:{FFFFFF} Игрок {FFFF33}%s[%d]{FFFFFF} получил автомобиль {FFFF33}'%s'{FFFFFF} в на 14 дней", PI[playerid][pName], playerid, VehicleNames[RadnomGift[gift_car]-400]);
}
stock ShowGPS(playerid)
{
	ShowPlayerDialog(playerid, 4500, DIALOG_STYLE_LIST, !"{ee3366}Навигатор", !"\
	{FFFF99}Информация\n\
	{FFFFFF}1. Важные места\n\
	2. Временные работы\n\
	3. Основные работы\n\
	4. Государственные организации\n\
	5. Нелегальные организации\n\
	6. Развлечения\n\
	7. Бизнесы\n\
	{66cc99}8. Найти АЗС\n\
	{66cc99}9. Найти банкомат\n\
	{888888}10. Отключить навигатор", "Выбрать", "Отмена");
	return 1;
}
stock ShowHotKeys(playerid)
{
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"{ee3366}Горячие клавиши", !"\
	Клавиша\tТип\tОписание\n\
	J\t{FFFF99}Любой\t{FFFFFF}Открыть меню лидера\n\
	L\t{FFFF99}Любой\t{FFFFFF}Открыть / закрыть транспорт\n\
	M\t{FFFF99}Любой\t{FFFFFF}Открыть меню игрока\n\
	P\t{FFFF99}Любой\t{FFFFFF}Открыть меню телефона\n\
	F11\t{FFFF99}Любой\t{FFFFFF}Настройки голосового чата\n\
	X\t{FFFF99}Любой\t{FFFFFF}Голосовой чат\n\
	B\t{ff9933}Пешеход\tОткрыть меню в бизнесе\n\
	B\t{ff9933}Пешеход\tНажать кнопку (открыть ворота, дверь)\n\
	H\t{66cc66}Водитель\tОткрыть ворота\n\
	K\t{66cc66}Водитель\tВставить / вытащить ключ\n\
	Левый ALT\t{66cc66}Водитель\tВключить / выключить фары\n\
	Левый CTRL\t{66cc66}Водитель\tВключить / выключить двигатель", !"Закрыть", !"");
	return 1;
}
stock ShowMainMenu(playerid) 
{
	return ShowPlayerDialogf(playerid, 101, DIALOG_STYLE_LIST, "{ee3366}Меню игрока", "Выбрать", "Отмена", "\
	{FFFFFF}1. Статистика\n\
	{FFFFFF}2. Пассивный режим\t %s\n\
	{FFFFFF}3. Команды сервера\n\
	{FFFFFF}4. Горячие клавиши\n\
	{FFFFFF}5. Помощь / жалоба\n\
	{FFFFFF}6. Настройки аккаунта\n\
	{FFFFFF}7. Общие правила\n\
	{FFFFFF}8. Ресурсы игры\n\
	{FFFFFF}9. Изменить никнейм\n\
	{FFFFFF}10. Чёрный список организаций\n\
	{5fc2f1}11. Дополнительные услуги", 
	PI[playerid][pPassiveMode] ? ("{66cc66}(Включён)") : ("{ff6633}(Отключён)"));
}
CMD:vk(playerid)
{
	new Cache: result, query[144], TempCode, TempVKID, TempVKName[50];
	mysql_format(mysql, query, sizeof query, "SELECT * FROM accounts WHERE ID='%d'", PI[playerid][pID]);
	result = mysql_query(mysql, query, true);

	if(cache_num_rows())
	{
		TempCode = cache_get_field_content_int(0, "VKCode", mysql);
		TempVKID = cache_get_field_content_int(0, "TempVKID", mysql);
		cache_get_field_content(0, "TempVKName", TempVKName, mysql, 50);
	}
	else
	{
		return SendClientMessage(playerid, COLOR_LIGHTGREY, !"Произошла ошибка. Повторите попытку позже.");
	}
	cache_delete(result);
	if(TempCode > 100000 && TempVKID != 0) 
	{
		ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Привязка ВКонтакте", !"Ок", !"", "\
		{FFFFFF}На ваш аккаунт был отправлен код для привязки ВКонтакте\n\n\
		{FFFFFF}Код: \t\t\t{FFFF99}%d\n\
		{FFFFFF}Страница ВКонтакте: \t{FFFF99}vk.com/id%d\n\
		{FFFFFF}Имя страницы ВКонтакте: \t{FFFF99}%s", TempCode, TempVKID, TempVKName);
	}
	else 
	{
		SendClientMessage(playerid, COLOR_LIGHTGREY, !"Наш ваш аккаунт не был отправлен код для привязки страници ВКонтакте");
		SendClientMessage(playerid, COLOR_LIGHTGREY, "Чтобы привязать страницу ВКонтакте -> перейдите в наш паблик ВКонтакте: vk.com/"VK"");
		return 1;
	}
	return 1;
}
public OnPlayerStreamIn(playerid, forplayerid) 
{
	if(PI[forplayerid][pAdminStatus] == 1) return ShowPlayerNameTagForPlayer(playerid, forplayerid, false);
	if(bombacitve == 1) return RemoveBuildingForPlayer(playerid, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	return 1;
}
callback: ClearData(playerid)
{
	TextReset[playerid] = 0;
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(!IsPlayerLogged{playerid}) return 0;
    return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(!IsPlayerLogged{playerid}) return 0;
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(GetPVarInt(playerid, "PickUPKD") > gettime())  return 1;

    mineOnPlayerPickUpDynamicPickup(playerid, pickupid);
	capture_OnPlayerPickUpPickup(playerid, pickupid);

	if(pickupid == PointCapture)
    {
		if(GangWarStatus == 0) return SendClientMessage(playerid, COLOR_LIGHTGREY, !"В данный момент не проходит захват территории");
        if(PI[playerid][pMember] == Command[0] || PI[playerid][pMember] == Command[1])
        {
            ShowPlayerDialog(playerid, 4901, DIALOG_STYLE_MSGBOX, "{ee3366}Стрела", "\
            {FFFFFF}Вы действительно хотите участвовать в битве за территорию?\n\n\
            {FFFF99}Вы будете исключены из списка участников,\n\
            если покините зону стрелы, пробудете в AFK\n\
            более 1 минуты или выйдите из игры", !"Вступить", !"Отмена");
        }
    }
	SetPVarInt(playerid,"PickUPKD",gettime() + 7);
    return 1;
}
stock SetDefaultSkin(org, id)
{
	if(PI[id][pSex] == 1) 
	{
		switch(org) 
		{
			case 1: PI[id][pOrgSkin] = 156;
			case 2: PI[id][pOrgSkin] = 179;
			case 3: PI[id][pOrgSkin] = 280;
			case 4: PI[id][pOrgSkin] = 276;
			case 5: PI[id][pOrgSkin] = 8;
			case 6: PI[id][pOrgSkin] = 115;
			case 7: PI[id][pOrgSkin] = 123;
			case 8: PI[id][pOrgSkin] = 15;
		}
	}
	if(PI[id][pSex] == 2) 
	{
		switch(org) 
		{
			case 1: PI[id][pOrgSkin] = 216;
			case 2: PI[id][pOrgSkin] = 191;
			case 3: PI[id][pOrgSkin] = 141;
			case 4: PI[id][pOrgSkin] = 194;
			case 5: PI[id][pOrgSkin] = 13;
			case 6: PI[id][pOrgSkin] = 13;
			case 7: PI[id][pOrgSkin] = 13;
			case 8: PI[id][pOrgSkin] = 12;
		}
	}
	UpdatePlayerDataInt(id, "skinm", PI[id][pOrgSkin],30360);
	SetPlayerSkinAC(id, PI[id][pOrgSkin]);
	SetPlayerTeam(id, org);
}
stock CheckGangWar(playerid)
{
	if(GangWarStatus > 0) 
	{
		if(PI[playerid][pMember] == Command[0] || PI[playerid][pMember] == Command[1]) 
		{
			static name_org[15], nameorg[15];
			switch(Command[0]) 
			{
				case 5: name_org = "Скинхеды";
				case 6: name_org = "Гопота";
				case 7: name_org = "Кавказцы";
			}
			switch(Command[1]) 
			{
				case 5: nameorg = "Скинхеды";
				case 6: nameorg = "Гопота";
				case 7: nameorg = "Кавказцы";
			}
			cef_emit_event(playerid, "show-capture");
			cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
			cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
			cef_emit_event(playerid, "show_kill_list");
			GangZoneFlashForPlayer(playerid, WarZone, 0xFF000055);
		}
	}
}
stock SaveBusinessData(b) 
{
    mysql_string[0] = EOS;
    
    format(mysql_string, 512, "\
		UPDATE `business` SET `owner` = '%s', `owned` = %d, `name` = '%s', `prod` = %d, `DayRent` = %d, `clients` = %d, `lock` = %d,\
		`cena` = %d, `price_prod` = %d, `bank` = %d, `SealedDays` = %d WHERE `id` = %d LIMIT 1",
        BizInfo[b][bOwner],
        BizInfo[b][bOwned],
        BizInfo[b][bName],
        BizInfo[b][bProduct],
        BizInfo[b][bDays],
        BizInfo[b][bClient],
        BizInfo[b][data_LOCK],
        BizInfo[b][data_CENA],
        BizInfo[b][bPriceProduct],
        BizInfo[b][bMoney],
        BizInfo[b][bSealedDays],
        BizInfo[b][data_ID]
    );

	mysql_pquery(mysql, mysql_string);
    
    return 1;
}
callback: SavePlayerData(playerid)
{
	if(IsPlayerLogged{playerid} && IsPlayerConnected(playerid))
	{
		GetPlayerHealth(playerid, PI[playerid][pHealthPoints]);
		GetPlayerArmour(playerid, PI[playerid][data_ARM]);

		mysql_string[0] = EOS;

		format(mysql_string, sizeof(mysql_string), "\
			UPDATE accounts SET AdminEvents=%d, AdminReports=%d, skin=%d, Money=%d, VKNotif=%d, bangun=%d, Level=%d, skinm=%d,\
			member=%d, Leader=%d, transfer=%d, transfer_rang=%d, transfer_frac=%d, rank=%d, Admin=%d,\
			AdminStatus=%d, ASACHAT=%d, CaptureKills=%d, CaptureValue=%d, LoginIP='%s', mute=%d, mutetime=%d,\
			vmute=%d, vmutetime=%d, warn=%d, warntime=%d, salary=%d, bank=%d, licb=%d, licg=%d, business=%d,\
			house=%d, time=%d, military=%d, medcard=%d, timerank=%d, vip=%d, patr=%d, drugs=%d, usedrugs=%d,\
			mednum=%d, licnum=%d, met=%d, wanted=%d, Respect=%d, number=%d, number_m=%d, pstatus=%d, jail=%d,\
			jailtime=%d, Donate=%d, phone=%d, phonebook=%d, dir=%d, Satiety=%d, HealthPoints=%f, arm=%f, med=%d,\
			spawn=%d, hospital=%d, pistol_skill=%d, sdpistol_skill=%d, deagle_skill=%d, shotgun_skill=%d, mp5_skill=%d,\
			ak47_skill=%d, rifle_skill=%d, job=%d, house=%d, business=%d, kv=%d, padik=%d, gun0=%d, gun1=%d, gun2=%d, gun3=%d,\
			gun4=%d, gun5=%d, gun6=%d, gun7=%d, gun8=%d, gun9=%d, gun10=%d, gun11=%d, gun12=%d, ammo0=%d, ammo1=%d, ammo2=%d,\
			ammo3=%d, ammo4=%d, ammo5=%d, ammo6=%d, ammo7=%d, ammo8=%d, ammo9=%d, ammo10=%d, ammo11=%d, ammo12=%d, demorgan=%d,\
			demorgan_time=%d, twarn=%d, healthchest=%d, HEALPACKSKLAD=%d, Сanister=%d, mask=%d, fixnabor=%d,\
			ProgressAmmo=%d, ProgressMetall=%d, PromoCodeUse=%d, ProgressDrugs=%d, ProgressCarGrabber=%d,\
			CaptureManager=%d, ProgressSellGun=%d, ProgressCapture=%d WHERE id=%d",
			PI[playerid][pAdminEvents],
			PI[playerid][pAdminReports],
			PI[playerid][pSkin],
			PI[playerid][pMoney],
			PI[playerid][pVKNotif],
			PI[playerid][pWeaponLock],
			PI[playerid][pLevel],
			PI[playerid][pOrgSkin],
			PI[playerid][pMember],
			PI[playerid][pLeader],
			PI[playerid][data_TRANSFER],
			PI[playerid][data_TRANSFER_RANG],
			PI[playerid][data_TRANSFER_FRAC],
			PI[playerid][pRang],
			PI[playerid][pAdmin],
			PI[playerid][pAdminStatus],
			PI[playerid][data_CADMIN],
			PI[playerid][pCaptureKills],
			PI[playerid][pCaptureValue],
			PI[playerid][pLoginIP],
			PI[playerid][data_MUTE],
			PI[playerid][data_MUTETIME],
			PI[playerid][data_VMUTE],
			PI[playerid][data_VMUTETIME],
			PI[playerid][data_WARN],
			PI[playerid][data_WARNTIME],
			PI[playerid][pPayDayMoney],
			PI[playerid][pBank],
			PI[playerid][pDriveLicense],
			PI[playerid][pGunLicense],
			PI[playerid][pBusiness],
			PI[playerid][data_HOUSE],
			PI[playerid][data_TIME],
			PI[playerid][data_MILITARY],
			PI[playerid][data_MEDCARD],
			PI[playerid][data_TIMERANK],
			PI[playerid][data_VIP],
			PI[playerid][data_PATR],
			PI[playerid][data_DRUGS],
			PI[playerid][data_USEDRUGS],
			PI[playerid][data_MEDNUM],
			PI[playerid][data_LICNUM],
			PI[playerid][data_MET],
			PI[playerid][pWanted],
			PI[playerid][pRespect],
			PI[playerid][data_NUMBER],
			PI[playerid][pNumberMoney],
			PI[playerid][pPhoneStatus],
			PI[playerid][pJail],
			PI[playerid][pJailTime],
			PI[playerid][pDonate],
			PI[playerid][data_PHONE],
			PI[playerid][data_PHONEBOOK],
			PI[playerid][data_DIR],
			PI[playerid][pSatiety],
			PI[playerid][pHealthPoints],
			PI[playerid][data_ARM],
			PI[playerid][data_MED],
			PI[playerid][data_SPAWN],
			PI[playerid][pHospital],
			PI[playerid][pSkillPistol],
			PI[playerid][pSkillSDPistol],
			PI[playerid][pSkillDeagle],
			PI[playerid][pSkillShotgun],
			PI[playerid][pSkillMP5],
			PI[playerid][data_AK47],
			PI[playerid][pSkillRifle],
			PI[playerid][data_JOB],
			PI[playerid][data_HOUSE],
			PI[playerid][pBusiness],
			PI[playerid][data_KV],
			PI[playerid][data_PADIK],
			PI[playerid][data_GUN][0],
			PI[playerid][data_GUN][1],
			PI[playerid][data_GUN][2],
			PI[playerid][data_GUN][3],
			PI[playerid][data_GUN][4],
			PI[playerid][data_GUN][5],
			PI[playerid][data_GUN][6],
			PI[playerid][data_GUN][7],
			PI[playerid][data_GUN][8],
			PI[playerid][data_GUN][9],
			PI[playerid][data_GUN][10],
			PI[playerid][data_GUN][11],
			PI[playerid][data_GUN][12],
			PI[playerid][data_GUN][0],
			PI[playerid][data_GUN][1],
			PI[playerid][data_GUN][2],
			PI[playerid][data_GUN][3],
			PI[playerid][data_GUN][4],
			PI[playerid][data_GUN][5],
			PI[playerid][data_GUN][6],
			PI[playerid][data_GUN][7],
			PI[playerid][data_GUN][8],
			PI[playerid][data_GUN][9],
			PI[playerid][data_GUN][10],
			PI[playerid][data_GUN][11],
			PI[playerid][data_GUN][12],
			PI[playerid][pDemorgan],
			PI[playerid][pDemorganTIME],
			PI[playerid][TWARN],
			PI[playerid][pHealPack],
			PI[playerid][pHealthPackKD],
			PI[playerid][pCanisters],
			PI[playerid][data_MASK],
			PI[playerid][data_FIXCOMPL],
			PI[playerid][pProgressAmmo],
			PI[playerid][pProgressMetall],
			PI[playerid][pPromoCodeUse],
			PI[playerid][pProgressDrugs],
			PI[playerid][pProgressCarGrabber], 
			PI[playerid][pCaptureManager], 
			PI[playerid][pProgressSellGun], 
			PI[playerid][pProgressCapture], 
			PI[playerid][pID]
		);
		mysql_pquery(mysql, mysql_string);
	}
	return 1;
}
CMD:leaders(playerid, params[]) 
{
	mysql_string[0] = EOS, f(mysql_string, 85, "SELECT * FROM `accounts` WHERE `rank` >= 9 ORDER BY `member` ASC, `rank` DESC;", PI[playerid][pBusiness]);
	mysql_tquery(mysql, mysql_string, "ShowLeaders", "i", playerid);
	return 1;
}
callback: ShowLeaders(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ee3366}Лидеры и заместители", !"{FFFFFF}В данный момент лидеров нет", !"Закрыть", !"");
	else 
	{
		new temp[144], string[1048+256], NamePlayer[24], Name[30], Org[17], Rang[12], Status[25];
		new getRang, getMember, Number, StatusOnline;

		for(new i = 0; i < rows; i++) 
		{
			cache_get_field_content(i, "Name", NamePlayer, mysql, MAX_PLAYER_NAME);
			cache_get_field_content(i, "member", temp), getMember = strval (temp);
			cache_get_field_content(i, "rank", temp), getRang = strval (temp);
			cache_get_field_content(i, "number", temp), Number = strval (temp);

			Name[0] = EOS; StatusOnline = 0;
			foreach(Player, id) 
			{
				new szName[64];
				if(!IsPlayerConnected(id)) continue;
				GetPlayerName(id, szName, 64);
				if(!strcmp(NamePlayer, szName, false))
				{
					StatusOnline++;
					format(Name, sizeof Name, "%s[%d]", NamePlayer, id);
				}
				else format(Name, sizeof Name, "%s", NamePlayer);
			}

			switch(getMember) 
			{
				case 1: Org = "Правительство";
				case 2: Org = "Войсковая часть";
				case 3: Org = "Полиция";
				case 4: Org = "БЦРБ";
				case 5: Org = "Скинхеды";
				case 6: Org = "Гопота";
				case 7: Org = "Кавказцы";
			}
			switch(getRang) 
			{
				case 9: Rang = "Заместитель";
				case 10: Rang = "Лидер";
			}
			switch(StatusOnline) 
			{
				case 1: Status = "{5ac375}В сети";
				case 0: Status = "{ff6633}Не в сети";
			}
			format(string,sizeof(string), "%s%s\t%s\t%s\t%d\t%s\n", string, Org, Rang, Name, Number, Status);
		}
		global_str[0] = EOS, format(global_str, 1324, "Организация\tДолжность\tИмя\tТелефон\tСостояние\n%s", string);
		CEF__Dialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{ee3366}Лидеры и заместители", global_str, "Закрыть", "");
	}
	return 1;
}
stock Freeze(playerid) 
{
	TogglePlayerControllable(playerid, 0);
	cef_emit_event(playerid, "show-center-notify", CEFINT(4), CEFSTR("Пожалуйста, подождите..."));
	return SetTimerEx("unFreeze", 3500,0, "%d", playerid);
}
callback: unFreeze(playerid) TogglePlayerControllable(playerid, 1);
stock ShowTargetMenu(playerid)
{
	targplayer[playerid] = GetPlayerTargetPlayer(playerid);
	return ShowPlayerDialog(playerid, 3298, DIALOG_STYLE_LIST, !"{ee3366}Взаимодействие с игроком", !"\
	1. Пожать руку\n\
	2. Передать аптечку\n\
	3. Показать паспорт\n\
	4. Показать лицензии\n\
	5. Показать мед. карту\n\
	6. Показать навыки владения оружием\n\
	7. Передать маску", !"Далее", !"Закрыть");
}
stock ShowLMenu_OPG(playerid) 
{
	return ShowPlayerDialog(playerid, 7501, DIALOG_STYLE_LIST, !"{ee3366}Меню лидера", !"{e6e69c}1. Управление группами\n\
	{e6e69c}2. Список всех участников организации\n\
	{e6e69c}3. Чёрный список\n\
	{e6e69c}4. Автопарк организации\n\
	{3CB371}5. Принять в организацию\n\
	{3CB371}6. Уволить из организации\n\
	{3CB371}7. Уволить из огранизации оффлайн\n\
	{3CB371}8. Выдать выговор\n\
	{3CB371}9. Выдать выговор оффлайн\n\
	{3CB371}10. Снять выговор\n\
	{3CB371}11. Снять выговор оффлайн\n\
	{3CB371}12. Изменить внешность\n\
	{3CB371}13. Изменить группу\n\
	{3CB371}14. Назначить смотрящего за стрелой\n\
	{3CB371}15. Снять смотрящего за стрелой\n\
	{6dbdd8}16. Расформировать организацию", !"Выбрать", !"Отмена");
}
stock ShowPlayerSpeedometer(playerid) 
{
	cef_emit_event(playerid, "cef:speed:active", CEFINT(1));
	SpeedometerUpdate[playerid] = SetTimerEx("UpdateSpeedometer", 100, true, "d", playerid);
	return 1;
}
stock HidePlayerSpeedometer(playerid) 
{
	cef_emit_event(playerid, "cef:speed:active", CEFINT(0));
    KillTimer(SpeedometerUpdate[playerid]);
    return 1;
}
callback: UpdateSpeedometer(playerid) 
{
	new vehicleid = GetPlayerVehicleID(playerid);
	
	if(CarInfo[vehicleid][cEngineStatus] == 1) cef_emit_event(playerid, "cef:speed:icon", CEFINT(1), CEFINT(1));
	else cef_emit_event(playerid, "cef:speed:icon", CEFINT(1), CEFINT(0));
	
	if(CarInfo[vehicleid][cLamp] == 1) cef_emit_event(playerid, "cef:speed:icon", CEFINT(2), CEFINT(1));
	else cef_emit_event(playerid, "cef:speed:icon", CEFINT(2), CEFINT(0));
	
	if(CarInfo[vehicleid][cLock] == 1) cef_emit_event(playerid, "cef:speed:icon", CEFINT(3), CEFINT(1));
	else cef_emit_event(playerid, "cef:speed:icon", CEFINT(3), CEFINT(0));
	

	if(CarInfo[vehicleid][cID] != 0)
	{
		if(CarInfo[vehicleid][cKey] == 0) cef_emit_event(playerid, "cef:speed:icon", CEFINT(4), CEFINT(0));
		else cef_emit_event(playerid, "cef:speed:icon", CEFINT(4), CEFINT(1));
	}

	new Float:health;
	GetVehicleHealth(vehicleid, health);
	cef_emit_event(playerid, "cef:speed:health", CEFFLOAT(health));
	
	cef_emit_event(playerid, "cef:speed:fuel", CEFINT(CarInfo[vehicleid][cFuel]));
}